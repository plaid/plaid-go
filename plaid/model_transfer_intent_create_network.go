/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// TransferIntentCreateNetwork The network or rails used for the transfer. Defaults to `same-day-ach`.  For transfers submitted using `ach`, the next-day cutoff is 5:30 PM Eastern Time.  For transfers submitted using `same-day-ach`, the same-day cutoff is 3:30 PM Eastern Time. If the transfer is submitted after this cutoff but before the next-day cutoff, it will be sent over next-day rails and will not incur same-day charges.  For transfers submitted using `rtp`, in the case that the account being credited does not support RTP, the transfer will be sent over ACH as long as an `ach_class` is provided in the request. If RTP isn't supported by the account and no `ach_class` is provided, the transfer will fail to be submitted.
type TransferIntentCreateNetwork string

var _ = fmt.Printf

// List of TransferIntentCreateNetwork
const (
	TRANSFERINTENTCREATENETWORK_ACH TransferIntentCreateNetwork = "ach"
	TRANSFERINTENTCREATENETWORK_SAME_DAY_ACH TransferIntentCreateNetwork = "same-day-ach"
	TRANSFERINTENTCREATENETWORK_RTP TransferIntentCreateNetwork = "rtp"
)

var allowedTransferIntentCreateNetworkEnumValues = []TransferIntentCreateNetwork{
	"ach",
	"same-day-ach",
	"rtp",
}

func (v *TransferIntentCreateNetwork) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := TransferIntentCreateNetwork(value)


	*v = enumTypeValue
	return nil
}

// NewTransferIntentCreateNetworkFromValue returns a pointer to a valid TransferIntentCreateNetwork
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTransferIntentCreateNetworkFromValue(v string) (*TransferIntentCreateNetwork, error) {
	ev := TransferIntentCreateNetwork(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TransferIntentCreateNetwork) IsValid() bool {
	for _, existing := range allowedTransferIntentCreateNetworkEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TransferIntentCreateNetwork value
func (v TransferIntentCreateNetwork) Ptr() *TransferIntentCreateNetwork {
	return &v
}

type NullableTransferIntentCreateNetwork struct {
	value *TransferIntentCreateNetwork
	isSet bool
}

func (v NullableTransferIntentCreateNetwork) Get() *TransferIntentCreateNetwork {
	return v.value
}

func (v *NullableTransferIntentCreateNetwork) Set(val *TransferIntentCreateNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferIntentCreateNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferIntentCreateNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferIntentCreateNetwork(val *TransferIntentCreateNetwork) *NullableTransferIntentCreateNetwork {
	return &NullableTransferIntentCreateNetwork{value: val, isSet: true}
}

func (v NullableTransferIntentCreateNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferIntentCreateNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

