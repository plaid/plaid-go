/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.627.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// RuleDetails Rules are run in numerical order. The first rule with a logic match is triggered. These are the details of that rule.
type RuleDetails struct {
	// An optional message attached to the triggered rule, defined within the Dashboard, for your internal use. Useful for debugging, such as “Account appears to be closed.”
	InternalNote *string `json:"internal_note,omitempty"`
	// A string key, defined within the Dashboard, used to trigger programmatic behavior for a certain result. For instance, you could optionally choose to define a \"3-day-hold\" `custom_action_key` for an ACCEPT result.
	CustomActionKey *string `json:"custom_action_key,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RuleDetails RuleDetails

// NewRuleDetails instantiates a new RuleDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleDetails() *RuleDetails {
	this := RuleDetails{}
	return &this
}

// NewRuleDetailsWithDefaults instantiates a new RuleDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleDetailsWithDefaults() *RuleDetails {
	this := RuleDetails{}
	return &this
}

// GetInternalNote returns the InternalNote field value if set, zero value otherwise.
func (o *RuleDetails) GetInternalNote() string {
	if o == nil || o.InternalNote == nil {
		var ret string
		return ret
	}
	return *o.InternalNote
}

// GetInternalNoteOk returns a tuple with the InternalNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleDetails) GetInternalNoteOk() (*string, bool) {
	if o == nil || o.InternalNote == nil {
		return nil, false
	}
	return o.InternalNote, true
}

// HasInternalNote returns a boolean if a field has been set.
func (o *RuleDetails) HasInternalNote() bool {
	if o != nil && o.InternalNote != nil {
		return true
	}

	return false
}

// SetInternalNote gets a reference to the given string and assigns it to the InternalNote field.
func (o *RuleDetails) SetInternalNote(v string) {
	o.InternalNote = &v
}

// GetCustomActionKey returns the CustomActionKey field value if set, zero value otherwise.
func (o *RuleDetails) GetCustomActionKey() string {
	if o == nil || o.CustomActionKey == nil {
		var ret string
		return ret
	}
	return *o.CustomActionKey
}

// GetCustomActionKeyOk returns a tuple with the CustomActionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleDetails) GetCustomActionKeyOk() (*string, bool) {
	if o == nil || o.CustomActionKey == nil {
		return nil, false
	}
	return o.CustomActionKey, true
}

// HasCustomActionKey returns a boolean if a field has been set.
func (o *RuleDetails) HasCustomActionKey() bool {
	if o != nil && o.CustomActionKey != nil {
		return true
	}

	return false
}

// SetCustomActionKey gets a reference to the given string and assigns it to the CustomActionKey field.
func (o *RuleDetails) SetCustomActionKey(v string) {
	o.CustomActionKey = &v
}

func (o RuleDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternalNote != nil {
		toSerialize["internal_note"] = o.InternalNote
	}
	if o.CustomActionKey != nil {
		toSerialize["custom_action_key"] = o.CustomActionKey
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *RuleDetails) UnmarshalJSON(bytes []byte) (err error) {
	varRuleDetails := _RuleDetails{}

	if err = json.Unmarshal(bytes, &varRuleDetails); err == nil {
		*o = RuleDetails(varRuleDetails)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "internal_note")
		delete(additionalProperties, "custom_action_key")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRuleDetails struct {
	value *RuleDetails
	isSet bool
}

func (v NullableRuleDetails) Get() *RuleDetails {
	return v.value
}

func (v *NullableRuleDetails) Set(val *RuleDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleDetails(val *RuleDetails) *NullableRuleDetails {
	return &NullableRuleDetails{value: val, isSet: true}
}

func (v NullableRuleDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


