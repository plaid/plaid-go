/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.474.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconDuplicateDetectedWebhook Fired when a Beacon User created within your organization matches one of your existing users.
type BeaconDuplicateDetectedWebhook struct {
	// `BEACON`
	WebhookType string `json:"webhook_type"`
	// `DUPLICATE_DETECTED`
	WebhookCode string `json:"webhook_code"`
	// The ID of the associated Beacon Duplicate.
	BeaconDuplicateId string `json:"beacon_duplicate_id"`
	Environment WebhookEnvironmentValues `json:"environment"`
	AdditionalProperties map[string]interface{}
}

type _BeaconDuplicateDetectedWebhook BeaconDuplicateDetectedWebhook

// NewBeaconDuplicateDetectedWebhook instantiates a new BeaconDuplicateDetectedWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconDuplicateDetectedWebhook(webhookType string, webhookCode string, beaconDuplicateId string, environment WebhookEnvironmentValues) *BeaconDuplicateDetectedWebhook {
	this := BeaconDuplicateDetectedWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.BeaconDuplicateId = beaconDuplicateId
	this.Environment = environment
	return &this
}

// NewBeaconDuplicateDetectedWebhookWithDefaults instantiates a new BeaconDuplicateDetectedWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconDuplicateDetectedWebhookWithDefaults() *BeaconDuplicateDetectedWebhook {
	this := BeaconDuplicateDetectedWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *BeaconDuplicateDetectedWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *BeaconDuplicateDetectedWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *BeaconDuplicateDetectedWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *BeaconDuplicateDetectedWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *BeaconDuplicateDetectedWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *BeaconDuplicateDetectedWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetBeaconDuplicateId returns the BeaconDuplicateId field value
func (o *BeaconDuplicateDetectedWebhook) GetBeaconDuplicateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeaconDuplicateId
}

// GetBeaconDuplicateIdOk returns a tuple with the BeaconDuplicateId field value
// and a boolean to check if the value has been set.
func (o *BeaconDuplicateDetectedWebhook) GetBeaconDuplicateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BeaconDuplicateId, true
}

// SetBeaconDuplicateId sets field value
func (o *BeaconDuplicateDetectedWebhook) SetBeaconDuplicateId(v string) {
	o.BeaconDuplicateId = v
}

// GetEnvironment returns the Environment field value
func (o *BeaconDuplicateDetectedWebhook) GetEnvironment() WebhookEnvironmentValues {
	if o == nil {
		var ret WebhookEnvironmentValues
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *BeaconDuplicateDetectedWebhook) GetEnvironmentOk() (*WebhookEnvironmentValues, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *BeaconDuplicateDetectedWebhook) SetEnvironment(v WebhookEnvironmentValues) {
	o.Environment = v
}

func (o BeaconDuplicateDetectedWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if true {
		toSerialize["beacon_duplicate_id"] = o.BeaconDuplicateId
	}
	if true {
		toSerialize["environment"] = o.Environment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconDuplicateDetectedWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconDuplicateDetectedWebhook := _BeaconDuplicateDetectedWebhook{}

	if err = json.Unmarshal(bytes, &varBeaconDuplicateDetectedWebhook); err == nil {
		*o = BeaconDuplicateDetectedWebhook(varBeaconDuplicateDetectedWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "beacon_duplicate_id")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconDuplicateDetectedWebhook struct {
	value *BeaconDuplicateDetectedWebhook
	isSet bool
}

func (v NullableBeaconDuplicateDetectedWebhook) Get() *BeaconDuplicateDetectedWebhook {
	return v.value
}

func (v *NullableBeaconDuplicateDetectedWebhook) Set(val *BeaconDuplicateDetectedWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconDuplicateDetectedWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconDuplicateDetectedWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconDuplicateDetectedWebhook(val *BeaconDuplicateDetectedWebhook) *NullableBeaconDuplicateDetectedWebhook {
	return &NullableBeaconDuplicateDetectedWebhook{value: val, isSet: true}
}

func (v NullableBeaconDuplicateDetectedWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconDuplicateDetectedWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


