/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.496.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraPartnerInsightsItemAccount Account data corresponding to the item from which Partner Insights were generated from
type CraPartnerInsightsItemAccount struct {
	// The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
	Mask NullableString `json:"mask"`
	// The name of the account
	Name string `json:"name"`
	// The official name of the bank account.
	OfficialName NullableString `json:"official_name"`
	Subtype DepositoryAccountSubtype `json:"subtype"`
	Type CreditBankIncomeAccountType `json:"type"`
	// Data returned by the financial institution about the account owner or owners. Identity information is optional, so field may return an empty array.
	Owners []Owner `json:"owners"`
	AdditionalProperties map[string]interface{}
}

type _CraPartnerInsightsItemAccount CraPartnerInsightsItemAccount

// NewCraPartnerInsightsItemAccount instantiates a new CraPartnerInsightsItemAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraPartnerInsightsItemAccount(mask NullableString, name string, officialName NullableString, subtype DepositoryAccountSubtype, type_ CreditBankIncomeAccountType, owners []Owner) *CraPartnerInsightsItemAccount {
	this := CraPartnerInsightsItemAccount{}
	this.Mask = mask
	this.Name = name
	this.OfficialName = officialName
	this.Subtype = subtype
	this.Type = type_
	this.Owners = owners
	return &this
}

// NewCraPartnerInsightsItemAccountWithDefaults instantiates a new CraPartnerInsightsItemAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraPartnerInsightsItemAccountWithDefaults() *CraPartnerInsightsItemAccount {
	this := CraPartnerInsightsItemAccount{}
	return &this
}

// GetMask returns the Mask field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CraPartnerInsightsItemAccount) GetMask() string {
	if o == nil || o.Mask.Get() == nil {
		var ret string
		return ret
	}

	return *o.Mask.Get()
}

// GetMaskOk returns a tuple with the Mask field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraPartnerInsightsItemAccount) GetMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mask.Get(), o.Mask.IsSet()
}

// SetMask sets field value
func (o *CraPartnerInsightsItemAccount) SetMask(v string) {
	o.Mask.Set(&v)
}

// GetName returns the Name field value
func (o *CraPartnerInsightsItemAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItemAccount) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CraPartnerInsightsItemAccount) SetName(v string) {
	o.Name = v
}

// GetOfficialName returns the OfficialName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CraPartnerInsightsItemAccount) GetOfficialName() string {
	if o == nil || o.OfficialName.Get() == nil {
		var ret string
		return ret
	}

	return *o.OfficialName.Get()
}

// GetOfficialNameOk returns a tuple with the OfficialName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraPartnerInsightsItemAccount) GetOfficialNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OfficialName.Get(), o.OfficialName.IsSet()
}

// SetOfficialName sets field value
func (o *CraPartnerInsightsItemAccount) SetOfficialName(v string) {
	o.OfficialName.Set(&v)
}

// GetSubtype returns the Subtype field value
func (o *CraPartnerInsightsItemAccount) GetSubtype() DepositoryAccountSubtype {
	if o == nil {
		var ret DepositoryAccountSubtype
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItemAccount) GetSubtypeOk() (*DepositoryAccountSubtype, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *CraPartnerInsightsItemAccount) SetSubtype(v DepositoryAccountSubtype) {
	o.Subtype = v
}

// GetType returns the Type field value
func (o *CraPartnerInsightsItemAccount) GetType() CreditBankIncomeAccountType {
	if o == nil {
		var ret CreditBankIncomeAccountType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItemAccount) GetTypeOk() (*CreditBankIncomeAccountType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CraPartnerInsightsItemAccount) SetType(v CreditBankIncomeAccountType) {
	o.Type = v
}

// GetOwners returns the Owners field value
func (o *CraPartnerInsightsItemAccount) GetOwners() []Owner {
	if o == nil {
		var ret []Owner
		return ret
	}

	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItemAccount) GetOwnersOk() (*[]Owner, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owners, true
}

// SetOwners sets field value
func (o *CraPartnerInsightsItemAccount) SetOwners(v []Owner) {
	o.Owners = v
}

func (o CraPartnerInsightsItemAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mask"] = o.Mask.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["official_name"] = o.OfficialName.Get()
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["owners"] = o.Owners
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraPartnerInsightsItemAccount) UnmarshalJSON(bytes []byte) (err error) {
	varCraPartnerInsightsItemAccount := _CraPartnerInsightsItemAccount{}

	if err = json.Unmarshal(bytes, &varCraPartnerInsightsItemAccount); err == nil {
		*o = CraPartnerInsightsItemAccount(varCraPartnerInsightsItemAccount)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "mask")
		delete(additionalProperties, "name")
		delete(additionalProperties, "official_name")
		delete(additionalProperties, "subtype")
		delete(additionalProperties, "type")
		delete(additionalProperties, "owners")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraPartnerInsightsItemAccount struct {
	value *CraPartnerInsightsItemAccount
	isSet bool
}

func (v NullableCraPartnerInsightsItemAccount) Get() *CraPartnerInsightsItemAccount {
	return v.value
}

func (v *NullableCraPartnerInsightsItemAccount) Set(val *CraPartnerInsightsItemAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableCraPartnerInsightsItemAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableCraPartnerInsightsItemAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraPartnerInsightsItemAccount(val *CraPartnerInsightsItemAccount) *NullableCraPartnerInsightsItemAccount {
	return &NullableCraPartnerInsightsItemAccount{value: val, isSet: true}
}

func (v NullableCraPartnerInsightsItemAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraPartnerInsightsItemAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


