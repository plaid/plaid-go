/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.645.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// PrismExtendVersion The version of Prism Extend
type PrismExtendVersion string

var _ = fmt.Printf

// List of PrismExtendVersion
const (
	PRISMEXTENDVERSION__4 PrismExtendVersion = "4"
	PRISMEXTENDVERSION_NULL PrismExtendVersion = "null"
)

var allowedPrismExtendVersionEnumValues = []PrismExtendVersion{
	"4",
	"null",
}

func (v *PrismExtendVersion) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := PrismExtendVersion(value)


	*v = enumTypeValue
	return nil
}

// NewPrismExtendVersionFromValue returns a pointer to a valid PrismExtendVersion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrismExtendVersionFromValue(v string) (*PrismExtendVersion, error) {
	ev := PrismExtendVersion(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrismExtendVersion) IsValid() bool {
	for _, existing := range allowedPrismExtendVersionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrismExtendVersion value
func (v PrismExtendVersion) Ptr() *PrismExtendVersion {
	return &v
}

type NullablePrismExtendVersion struct {
	value *PrismExtendVersion
	isSet bool
}

func (v NullablePrismExtendVersion) Get() *PrismExtendVersion {
	return v.value
}

func (v *NullablePrismExtendVersion) Set(val *PrismExtendVersion) {
	v.value = val
	v.isSet = true
}

func (v NullablePrismExtendVersion) IsSet() bool {
	return v.isSet
}

func (v *NullablePrismExtendVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrismExtendVersion(val *PrismExtendVersion) *NullablePrismExtendVersion {
	return &NullablePrismExtendVersion{value: val, isSet: true}
}

func (v NullablePrismExtendVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrismExtendVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

