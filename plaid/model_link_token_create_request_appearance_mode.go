/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.633.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// LinkTokenCreateRequestAppearanceMode Enum representing the desired appearance mode for Link, used to force light or dark modes or set Link to change depending on user system settings. Currently in closed beta.
type LinkTokenCreateRequestAppearanceMode string

var _ = fmt.Printf

// List of LinkTokenCreateRequestAppearanceMode
const (
	LINKTOKENCREATEREQUESTAPPEARANCEMODE_LIGHT LinkTokenCreateRequestAppearanceMode = "LIGHT"
	LINKTOKENCREATEREQUESTAPPEARANCEMODE_DARK LinkTokenCreateRequestAppearanceMode = "DARK"
	LINKTOKENCREATEREQUESTAPPEARANCEMODE_SYSTEM LinkTokenCreateRequestAppearanceMode = "SYSTEM"
	LINKTOKENCREATEREQUESTAPPEARANCEMODE_NULL LinkTokenCreateRequestAppearanceMode = "null"
)

var allowedLinkTokenCreateRequestAppearanceModeEnumValues = []LinkTokenCreateRequestAppearanceMode{
	"LIGHT",
	"DARK",
	"SYSTEM",
	"null",
}

func (v *LinkTokenCreateRequestAppearanceMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := LinkTokenCreateRequestAppearanceMode(value)


	*v = enumTypeValue
	return nil
}

// NewLinkTokenCreateRequestAppearanceModeFromValue returns a pointer to a valid LinkTokenCreateRequestAppearanceMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLinkTokenCreateRequestAppearanceModeFromValue(v string) (*LinkTokenCreateRequestAppearanceMode, error) {
	ev := LinkTokenCreateRequestAppearanceMode(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LinkTokenCreateRequestAppearanceMode) IsValid() bool {
	for _, existing := range allowedLinkTokenCreateRequestAppearanceModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LinkTokenCreateRequestAppearanceMode value
func (v LinkTokenCreateRequestAppearanceMode) Ptr() *LinkTokenCreateRequestAppearanceMode {
	return &v
}

type NullableLinkTokenCreateRequestAppearanceMode struct {
	value *LinkTokenCreateRequestAppearanceMode
	isSet bool
}

func (v NullableLinkTokenCreateRequestAppearanceMode) Get() *LinkTokenCreateRequestAppearanceMode {
	return v.value
}

func (v *NullableLinkTokenCreateRequestAppearanceMode) Set(val *LinkTokenCreateRequestAppearanceMode) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkTokenCreateRequestAppearanceMode) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkTokenCreateRequestAppearanceMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkTokenCreateRequestAppearanceMode(val *LinkTokenCreateRequestAppearanceMode) *NullableLinkTokenCreateRequestAppearanceMode {
	return &NullableLinkTokenCreateRequestAppearanceMode{value: val, isSet: true}
}

func (v NullableLinkTokenCreateRequestAppearanceMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkTokenCreateRequestAppearanceMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

