/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// PrismInsightsVersion The version of Prism Insights. If not specified, will default to v3.
type PrismInsightsVersion string

var _ = fmt.Printf

// List of PrismInsightsVersion
const (
	PRISMINSIGHTSVERSION__3 PrismInsightsVersion = "3"
	PRISMINSIGHTSVERSION_NULL PrismInsightsVersion = "null"
)

var allowedPrismInsightsVersionEnumValues = []PrismInsightsVersion{
	"3",
	"null",
}

func (v *PrismInsightsVersion) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := PrismInsightsVersion(value)


	*v = enumTypeValue
	return nil
}

// NewPrismInsightsVersionFromValue returns a pointer to a valid PrismInsightsVersion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrismInsightsVersionFromValue(v string) (*PrismInsightsVersion, error) {
	ev := PrismInsightsVersion(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrismInsightsVersion) IsValid() bool {
	for _, existing := range allowedPrismInsightsVersionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrismInsightsVersion value
func (v PrismInsightsVersion) Ptr() *PrismInsightsVersion {
	return &v
}

type NullablePrismInsightsVersion struct {
	value *PrismInsightsVersion
	isSet bool
}

func (v NullablePrismInsightsVersion) Get() *PrismInsightsVersion {
	return v.value
}

func (v *NullablePrismInsightsVersion) Set(val *PrismInsightsVersion) {
	v.value = val
	v.isSet = true
}

func (v NullablePrismInsightsVersion) IsSet() bool {
	return v.isSet
}

func (v *NullablePrismInsightsVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrismInsightsVersion(val *PrismInsightsVersion) *NullablePrismInsightsVersion {
	return &NullablePrismInsightsVersion{value: val, isSet: true}
}

func (v NullablePrismInsightsVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrismInsightsVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

