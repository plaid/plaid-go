/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconAccountRiskEvaluateRequest BeaconAccountRiskEvaluateRequest defines the request schema for `/v1/beacon/account_risk/risk/evaluate`
type BeaconAccountRiskEvaluateRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The access token associated with the Item data is being requested for.
	AccessToken *string `json:"access_token,omitempty"`
	Options *BeaconAccountRiskEvaluateRequestOptions `json:"options,omitempty"`
	// A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple evaluations and/or multiple linked accounts. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id.
	ClientUserId *string `json:"client_user_id,omitempty"`
	// Unique identifier of what you are looking to evaluate (account add, information change, etc.) to allow us to tie the activity to the decisions and possible fraud outcome sent via our feedback endpoints. You can use your internal request ID or similar.
	ClientEvaluationId *string `json:"client_evaluation_id,omitempty"`
	EvaluationReason *BeaconAccountRiskEvaluateEvaluationReason `json:"evaluation_reason,omitempty"`
	Device *SignalDevice `json:"device,omitempty"`
	// The time the event for evaluation has occurred. Populate this field for backfilling data. If you don’t populate this field, we’ll use the timestamp at the time of receipt. Use ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ).
	EvaluateTime *string `json:"evaluate_time,omitempty"`
}

// NewBeaconAccountRiskEvaluateRequest instantiates a new BeaconAccountRiskEvaluateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconAccountRiskEvaluateRequest() *BeaconAccountRiskEvaluateRequest {
	this := BeaconAccountRiskEvaluateRequest{}
	return &this
}

// NewBeaconAccountRiskEvaluateRequestWithDefaults instantiates a new BeaconAccountRiskEvaluateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconAccountRiskEvaluateRequestWithDefaults() *BeaconAccountRiskEvaluateRequest {
	this := BeaconAccountRiskEvaluateRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *BeaconAccountRiskEvaluateRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *BeaconAccountRiskEvaluateRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetAccessToken() string {
	if o == nil || o.AccessToken == nil {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil || o.AccessToken == nil {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasAccessToken() bool {
	if o != nil && o.AccessToken != nil {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *BeaconAccountRiskEvaluateRequest) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetOptions() BeaconAccountRiskEvaluateRequestOptions {
	if o == nil || o.Options == nil {
		var ret BeaconAccountRiskEvaluateRequestOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetOptionsOk() (*BeaconAccountRiskEvaluateRequestOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given BeaconAccountRiskEvaluateRequestOptions and assigns it to the Options field.
func (o *BeaconAccountRiskEvaluateRequest) SetOptions(v BeaconAccountRiskEvaluateRequestOptions) {
	o.Options = &v
}

// GetClientUserId returns the ClientUserId field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetClientUserId() string {
	if o == nil || o.ClientUserId == nil {
		var ret string
		return ret
	}
	return *o.ClientUserId
}

// GetClientUserIdOk returns a tuple with the ClientUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetClientUserIdOk() (*string, bool) {
	if o == nil || o.ClientUserId == nil {
		return nil, false
	}
	return o.ClientUserId, true
}

// HasClientUserId returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasClientUserId() bool {
	if o != nil && o.ClientUserId != nil {
		return true
	}

	return false
}

// SetClientUserId gets a reference to the given string and assigns it to the ClientUserId field.
func (o *BeaconAccountRiskEvaluateRequest) SetClientUserId(v string) {
	o.ClientUserId = &v
}

// GetClientEvaluationId returns the ClientEvaluationId field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetClientEvaluationId() string {
	if o == nil || o.ClientEvaluationId == nil {
		var ret string
		return ret
	}
	return *o.ClientEvaluationId
}

// GetClientEvaluationIdOk returns a tuple with the ClientEvaluationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetClientEvaluationIdOk() (*string, bool) {
	if o == nil || o.ClientEvaluationId == nil {
		return nil, false
	}
	return o.ClientEvaluationId, true
}

// HasClientEvaluationId returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasClientEvaluationId() bool {
	if o != nil && o.ClientEvaluationId != nil {
		return true
	}

	return false
}

// SetClientEvaluationId gets a reference to the given string and assigns it to the ClientEvaluationId field.
func (o *BeaconAccountRiskEvaluateRequest) SetClientEvaluationId(v string) {
	o.ClientEvaluationId = &v
}

// GetEvaluationReason returns the EvaluationReason field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetEvaluationReason() BeaconAccountRiskEvaluateEvaluationReason {
	if o == nil || o.EvaluationReason == nil {
		var ret BeaconAccountRiskEvaluateEvaluationReason
		return ret
	}
	return *o.EvaluationReason
}

// GetEvaluationReasonOk returns a tuple with the EvaluationReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetEvaluationReasonOk() (*BeaconAccountRiskEvaluateEvaluationReason, bool) {
	if o == nil || o.EvaluationReason == nil {
		return nil, false
	}
	return o.EvaluationReason, true
}

// HasEvaluationReason returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasEvaluationReason() bool {
	if o != nil && o.EvaluationReason != nil {
		return true
	}

	return false
}

// SetEvaluationReason gets a reference to the given BeaconAccountRiskEvaluateEvaluationReason and assigns it to the EvaluationReason field.
func (o *BeaconAccountRiskEvaluateRequest) SetEvaluationReason(v BeaconAccountRiskEvaluateEvaluationReason) {
	o.EvaluationReason = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetDevice() SignalDevice {
	if o == nil || o.Device == nil {
		var ret SignalDevice
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetDeviceOk() (*SignalDevice, bool) {
	if o == nil || o.Device == nil {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasDevice() bool {
	if o != nil && o.Device != nil {
		return true
	}

	return false
}

// SetDevice gets a reference to the given SignalDevice and assigns it to the Device field.
func (o *BeaconAccountRiskEvaluateRequest) SetDevice(v SignalDevice) {
	o.Device = &v
}

// GetEvaluateTime returns the EvaluateTime field value if set, zero value otherwise.
func (o *BeaconAccountRiskEvaluateRequest) GetEvaluateTime() string {
	if o == nil || o.EvaluateTime == nil {
		var ret string
		return ret
	}
	return *o.EvaluateTime
}

// GetEvaluateTimeOk returns a tuple with the EvaluateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateRequest) GetEvaluateTimeOk() (*string, bool) {
	if o == nil || o.EvaluateTime == nil {
		return nil, false
	}
	return o.EvaluateTime, true
}

// HasEvaluateTime returns a boolean if a field has been set.
func (o *BeaconAccountRiskEvaluateRequest) HasEvaluateTime() bool {
	if o != nil && o.EvaluateTime != nil {
		return true
	}

	return false
}

// SetEvaluateTime gets a reference to the given string and assigns it to the EvaluateTime field.
func (o *BeaconAccountRiskEvaluateRequest) SetEvaluateTime(v string) {
	o.EvaluateTime = &v
}

func (o BeaconAccountRiskEvaluateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.AccessToken != nil {
		toSerialize["access_token"] = o.AccessToken
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.ClientUserId != nil {
		toSerialize["client_user_id"] = o.ClientUserId
	}
	if o.ClientEvaluationId != nil {
		toSerialize["client_evaluation_id"] = o.ClientEvaluationId
	}
	if o.EvaluationReason != nil {
		toSerialize["evaluation_reason"] = o.EvaluationReason
	}
	if o.Device != nil {
		toSerialize["device"] = o.Device
	}
	if o.EvaluateTime != nil {
		toSerialize["evaluate_time"] = o.EvaluateTime
	}
	return json.Marshal(toSerialize)
}

type NullableBeaconAccountRiskEvaluateRequest struct {
	value *BeaconAccountRiskEvaluateRequest
	isSet bool
}

func (v NullableBeaconAccountRiskEvaluateRequest) Get() *BeaconAccountRiskEvaluateRequest {
	return v.value
}

func (v *NullableBeaconAccountRiskEvaluateRequest) Set(val *BeaconAccountRiskEvaluateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconAccountRiskEvaluateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconAccountRiskEvaluateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconAccountRiskEvaluateRequest(val *BeaconAccountRiskEvaluateRequest) *NullableBeaconAccountRiskEvaluateRequest {
	return &NullableBeaconAccountRiskEvaluateRequest{value: val, isSet: true}
}

func (v NullableBeaconAccountRiskEvaluateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconAccountRiskEvaluateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


