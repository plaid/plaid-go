/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.525.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// RemovedTransaction A representation of a removed transaction
type RemovedTransaction struct {
	// The ID of the removed transaction.
	TransactionId string `json:"transaction_id"`
	// The ID of the account of the removed transaction.
	AccountId string `json:"account_id"`
	AdditionalProperties map[string]interface{}
}

type _RemovedTransaction RemovedTransaction

// NewRemovedTransaction instantiates a new RemovedTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemovedTransaction(transactionId string, accountId string) *RemovedTransaction {
	this := RemovedTransaction{}
	this.TransactionId = transactionId
	this.AccountId = accountId
	return &this
}

// NewRemovedTransactionWithDefaults instantiates a new RemovedTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemovedTransactionWithDefaults() *RemovedTransaction {
	this := RemovedTransaction{}
	return &this
}

// GetTransactionId returns the TransactionId field value
func (o *RemovedTransaction) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *RemovedTransaction) GetTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *RemovedTransaction) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetAccountId returns the AccountId field value
func (o *RemovedTransaction) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *RemovedTransaction) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *RemovedTransaction) SetAccountId(v string) {
	o.AccountId = v
}

func (o RemovedTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *RemovedTransaction) UnmarshalJSON(bytes []byte) (err error) {
	varRemovedTransaction := _RemovedTransaction{}

	if err = json.Unmarshal(bytes, &varRemovedTransaction); err == nil {
		*o = RemovedTransaction(varRemovedTransaction)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "transaction_id")
		delete(additionalProperties, "account_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRemovedTransaction struct {
	value *RemovedTransaction
	isSet bool
}

func (v NullableRemovedTransaction) Get() *RemovedTransaction {
	return v.value
}

func (v *NullableRemovedTransaction) Set(val *RemovedTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableRemovedTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableRemovedTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemovedTransaction(val *RemovedTransaction) *NullableRemovedTransaction {
	return &NullableRemovedTransaction{value: val, isSet: true}
}

func (v NullableRemovedTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemovedTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


