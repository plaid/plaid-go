/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// AssetReportType Indicates either a Fast Asset Report, which will contain only current identity and balance information, or a Full Asset Report, which will also contain historical balance information and transaction data.
type AssetReportType string

var _ = fmt.Printf

// List of AssetReportType
const (
	ASSETREPORTTYPE_FULL AssetReportType = "FULL"
	ASSETREPORTTYPE_FAST AssetReportType = "FAST"
)

var allowedAssetReportTypeEnumValues = []AssetReportType{
	"FULL",
	"FAST",
}

func (v *AssetReportType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := AssetReportType(value)


	*v = enumTypeValue
	return nil
}

// NewAssetReportTypeFromValue returns a pointer to a valid AssetReportType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAssetReportTypeFromValue(v string) (*AssetReportType, error) {
	ev := AssetReportType(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AssetReportType) IsValid() bool {
	for _, existing := range allowedAssetReportTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AssetReportType value
func (v AssetReportType) Ptr() *AssetReportType {
	return &v
}

type NullableAssetReportType struct {
	value *AssetReportType
	isSet bool
}

func (v NullableAssetReportType) Get() *AssetReportType {
	return v.value
}

func (v *NullableAssetReportType) Set(val *AssetReportType) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetReportType) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetReportType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetReportType(val *AssetReportType) *NullableAssetReportType {
	return &NullableAssetReportType{value: val, isSet: true}
}

func (v NullableAssetReportType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetReportType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

