/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.410.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// SandboxBankIncomeWebhookFireRequestWebhookCode The webhook codes this endpoint can be used to test
type SandboxBankIncomeWebhookFireRequestWebhookCode string

var _ = fmt.Printf

// List of SandboxBankIncomeWebhookFireRequestWebhookCode
const (
	SANDBOXBANKINCOMEWEBHOOKFIREREQUESTWEBHOOKCODE_UPDATE SandboxBankIncomeWebhookFireRequestWebhookCode = "BANK_INCOME_REFRESH_UPDATE"
	SANDBOXBANKINCOMEWEBHOOKFIREREQUESTWEBHOOKCODE_COMPLETE SandboxBankIncomeWebhookFireRequestWebhookCode = "BANK_INCOME_REFRESH_COMPLETE"
)

var allowedSandboxBankIncomeWebhookFireRequestWebhookCodeEnumValues = []SandboxBankIncomeWebhookFireRequestWebhookCode{
	"BANK_INCOME_REFRESH_UPDATE",
	"BANK_INCOME_REFRESH_COMPLETE",
}

func (v *SandboxBankIncomeWebhookFireRequestWebhookCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := SandboxBankIncomeWebhookFireRequestWebhookCode(value)


	*v = enumTypeValue
	return nil
}

// NewSandboxBankIncomeWebhookFireRequestWebhookCodeFromValue returns a pointer to a valid SandboxBankIncomeWebhookFireRequestWebhookCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSandboxBankIncomeWebhookFireRequestWebhookCodeFromValue(v string) (*SandboxBankIncomeWebhookFireRequestWebhookCode, error) {
	ev := SandboxBankIncomeWebhookFireRequestWebhookCode(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SandboxBankIncomeWebhookFireRequestWebhookCode) IsValid() bool {
	for _, existing := range allowedSandboxBankIncomeWebhookFireRequestWebhookCodeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SandboxBankIncomeWebhookFireRequestWebhookCode value
func (v SandboxBankIncomeWebhookFireRequestWebhookCode) Ptr() *SandboxBankIncomeWebhookFireRequestWebhookCode {
	return &v
}

type NullableSandboxBankIncomeWebhookFireRequestWebhookCode struct {
	value *SandboxBankIncomeWebhookFireRequestWebhookCode
	isSet bool
}

func (v NullableSandboxBankIncomeWebhookFireRequestWebhookCode) Get() *SandboxBankIncomeWebhookFireRequestWebhookCode {
	return v.value
}

func (v *NullableSandboxBankIncomeWebhookFireRequestWebhookCode) Set(val *SandboxBankIncomeWebhookFireRequestWebhookCode) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxBankIncomeWebhookFireRequestWebhookCode) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxBankIncomeWebhookFireRequestWebhookCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxBankIncomeWebhookFireRequestWebhookCode(val *SandboxBankIncomeWebhookFireRequestWebhookCode) *NullableSandboxBankIncomeWebhookFireRequestWebhookCode {
	return &NullableSandboxBankIncomeWebhookFireRequestWebhookCode{value: val, isSet: true}
}

func (v NullableSandboxBankIncomeWebhookFireRequestWebhookCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxBankIncomeWebhookFireRequestWebhookCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

