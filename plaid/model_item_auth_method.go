/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.635.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// ItemAuthMethod The method used to populate Auth data for the Item. This field is only populated for Items that have had Auth numbers data set on at least one of its accounts, and will be `null` otherwise. For info about the various flows, see our [Auth coverage documentation](https://plaid.com/docs/auth/coverage/).  `INSTANT_AUTH`: The Item's Auth data was provided directly by the user's institution connection.  `INSTANT_MATCH`: The Item's Auth data was provided via the Instant Match fallback flow.  `AUTOMATED_MICRODEPOSITS`: The Item's Auth data was provided via the Automated Micro-deposits flow.  `SAME_DAY_MICRODEPOSITS`: The Item's Auth data was provided via the Same Day Micro-deposits flow.  `INSTANT_MICRODEPOSITS`: The Item's Auth data was provided via the Instant Micro-deposits flow.  `DATABASE_MATCH`: The Item's Auth data was provided via the Database Match flow.  `DATABASE_INSIGHTS`: The Item's Auth data was provided via the Database Insights flow.  `TRANSFER_MIGRATED`: The Item's Auth data was provided via [`/transfer/migrate_account`](https://plaid.com/docs/api/products/transfer/account-linking/#migrate-account-into-transfers).  `INVESTMENTS_FALLBACK`: The Item's Auth data for Investments Move was provided via a [fallback flow](https://plaid.com/docs/investments-move/#fallback-flows).
type ItemAuthMethod string

var _ = fmt.Printf

// List of ItemAuthMethod
const (
	ITEMAUTHMETHOD_INSTANT_AUTH ItemAuthMethod = "INSTANT_AUTH"
	ITEMAUTHMETHOD_INSTANT_MATCH ItemAuthMethod = "INSTANT_MATCH"
	ITEMAUTHMETHOD_AUTOMATED_MICRODEPOSITS ItemAuthMethod = "AUTOMATED_MICRODEPOSITS"
	ITEMAUTHMETHOD_SAME_DAY_MICRODEPOSITS ItemAuthMethod = "SAME_DAY_MICRODEPOSITS"
	ITEMAUTHMETHOD_INSTANT_MICRODEPOSITS ItemAuthMethod = "INSTANT_MICRODEPOSITS"
	ITEMAUTHMETHOD_DATABASE_MATCH ItemAuthMethod = "DATABASE_MATCH"
	ITEMAUTHMETHOD_DATABASE_INSIGHTS ItemAuthMethod = "DATABASE_INSIGHTS"
	ITEMAUTHMETHOD_TRANSFER_MIGRATED ItemAuthMethod = "TRANSFER_MIGRATED"
	ITEMAUTHMETHOD_INVESTMENTS_FALLBACK ItemAuthMethod = "INVESTMENTS_FALLBACK"
)

var allowedItemAuthMethodEnumValues = []ItemAuthMethod{
	"INSTANT_AUTH",
	"INSTANT_MATCH",
	"AUTOMATED_MICRODEPOSITS",
	"SAME_DAY_MICRODEPOSITS",
	"INSTANT_MICRODEPOSITS",
	"DATABASE_MATCH",
	"DATABASE_INSIGHTS",
	"TRANSFER_MIGRATED",
	"INVESTMENTS_FALLBACK",
}

func (v *ItemAuthMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := ItemAuthMethod(value)


	*v = enumTypeValue
	return nil
}

// NewItemAuthMethodFromValue returns a pointer to a valid ItemAuthMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewItemAuthMethodFromValue(v string) (*ItemAuthMethod, error) {
	ev := ItemAuthMethod(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ItemAuthMethod) IsValid() bool {
	for _, existing := range allowedItemAuthMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ItemAuthMethod value
func (v ItemAuthMethod) Ptr() *ItemAuthMethod {
	return &v
}

type NullableItemAuthMethod struct {
	value *ItemAuthMethod
	isSet bool
}

func (v NullableItemAuthMethod) Get() *ItemAuthMethod {
	return v.value
}

func (v *NullableItemAuthMethod) Set(val *ItemAuthMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableItemAuthMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableItemAuthMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemAuthMethod(val *ItemAuthMethod) *NullableItemAuthMethod {
	return &NullableItemAuthMethod{value: val, isSet: true}
}

func (v NullableItemAuthMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemAuthMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

