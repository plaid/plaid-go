/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.664.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// TransferLedgerEvent Represents a ledger event in the Transfers API.
type TransferLedgerEvent struct {
	// Plaid's unique identifier for this ledger event.
	LedgerEventId string `json:"ledger_event_id"`
	// The ID of the ledger this event belongs to.
	LedgerId string `json:"ledger_id"`
	// The amount of the ledger event as a decimal string.
	Amount string `json:"amount"`
	// The ID of the transfer source that triggered this ledger event.
	TransferId NullableString `json:"transfer_id,omitempty"`
	// The ID of the refund source that triggered this ledger event.
	RefundId NullableString `json:"refund_id,omitempty"`
	// The ID of the sweep source that triggered this ledger event.
	SweepId NullableString `json:"sweep_id,omitempty"`
	// A description of the ledger event.
	Description string `json:"description"`
	// The new pending balance after this event.
	PendingBalance string `json:"pending_balance"`
	// The new available balance after this event.
	AvailableBalance string `json:"available_balance"`
	// The type of balance that was impacted by this event.
	Type string `json:"type"`
	// The datetime when this ledger event occurred.
	Timestamp time.Time `json:"timestamp"`
	AdditionalProperties map[string]interface{}
}

type _TransferLedgerEvent TransferLedgerEvent

// NewTransferLedgerEvent instantiates a new TransferLedgerEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferLedgerEvent(ledgerEventId string, ledgerId string, amount string, description string, pendingBalance string, availableBalance string, type_ string, timestamp time.Time) *TransferLedgerEvent {
	this := TransferLedgerEvent{}
	this.LedgerEventId = ledgerEventId
	this.LedgerId = ledgerId
	this.Amount = amount
	this.Description = description
	this.PendingBalance = pendingBalance
	this.AvailableBalance = availableBalance
	this.Type = type_
	this.Timestamp = timestamp
	return &this
}

// NewTransferLedgerEventWithDefaults instantiates a new TransferLedgerEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferLedgerEventWithDefaults() *TransferLedgerEvent {
	this := TransferLedgerEvent{}
	return &this
}

// GetLedgerEventId returns the LedgerEventId field value
func (o *TransferLedgerEvent) GetLedgerEventId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LedgerEventId
}

// GetLedgerEventIdOk returns a tuple with the LedgerEventId field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetLedgerEventIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LedgerEventId, true
}

// SetLedgerEventId sets field value
func (o *TransferLedgerEvent) SetLedgerEventId(v string) {
	o.LedgerEventId = v
}

// GetLedgerId returns the LedgerId field value
func (o *TransferLedgerEvent) GetLedgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LedgerId
}

// GetLedgerIdOk returns a tuple with the LedgerId field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetLedgerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LedgerId, true
}

// SetLedgerId sets field value
func (o *TransferLedgerEvent) SetLedgerId(v string) {
	o.LedgerId = v
}

// GetAmount returns the Amount field value
func (o *TransferLedgerEvent) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransferLedgerEvent) SetAmount(v string) {
	o.Amount = v
}

// GetTransferId returns the TransferId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEvent) GetTransferId() string {
	if o == nil || o.TransferId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TransferId.Get()
}

// GetTransferIdOk returns a tuple with the TransferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEvent) GetTransferIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TransferId.Get(), o.TransferId.IsSet()
}

// HasTransferId returns a boolean if a field has been set.
func (o *TransferLedgerEvent) HasTransferId() bool {
	if o != nil && o.TransferId.IsSet() {
		return true
	}

	return false
}

// SetTransferId gets a reference to the given NullableString and assigns it to the TransferId field.
func (o *TransferLedgerEvent) SetTransferId(v string) {
	o.TransferId.Set(&v)
}
// SetTransferIdNil sets the value for TransferId to be an explicit nil
func (o *TransferLedgerEvent) SetTransferIdNil() {
	o.TransferId.Set(nil)
}

// UnsetTransferId ensures that no value is present for TransferId, not even an explicit nil
func (o *TransferLedgerEvent) UnsetTransferId() {
	o.TransferId.Unset()
}

// GetRefundId returns the RefundId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEvent) GetRefundId() string {
	if o == nil || o.RefundId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefundId.Get()
}

// GetRefundIdOk returns a tuple with the RefundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEvent) GetRefundIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefundId.Get(), o.RefundId.IsSet()
}

// HasRefundId returns a boolean if a field has been set.
func (o *TransferLedgerEvent) HasRefundId() bool {
	if o != nil && o.RefundId.IsSet() {
		return true
	}

	return false
}

// SetRefundId gets a reference to the given NullableString and assigns it to the RefundId field.
func (o *TransferLedgerEvent) SetRefundId(v string) {
	o.RefundId.Set(&v)
}
// SetRefundIdNil sets the value for RefundId to be an explicit nil
func (o *TransferLedgerEvent) SetRefundIdNil() {
	o.RefundId.Set(nil)
}

// UnsetRefundId ensures that no value is present for RefundId, not even an explicit nil
func (o *TransferLedgerEvent) UnsetRefundId() {
	o.RefundId.Unset()
}

// GetSweepId returns the SweepId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEvent) GetSweepId() string {
	if o == nil || o.SweepId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SweepId.Get()
}

// GetSweepIdOk returns a tuple with the SweepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEvent) GetSweepIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SweepId.Get(), o.SweepId.IsSet()
}

// HasSweepId returns a boolean if a field has been set.
func (o *TransferLedgerEvent) HasSweepId() bool {
	if o != nil && o.SweepId.IsSet() {
		return true
	}

	return false
}

// SetSweepId gets a reference to the given NullableString and assigns it to the SweepId field.
func (o *TransferLedgerEvent) SetSweepId(v string) {
	o.SweepId.Set(&v)
}
// SetSweepIdNil sets the value for SweepId to be an explicit nil
func (o *TransferLedgerEvent) SetSweepIdNil() {
	o.SweepId.Set(nil)
}

// UnsetSweepId ensures that no value is present for SweepId, not even an explicit nil
func (o *TransferLedgerEvent) UnsetSweepId() {
	o.SweepId.Unset()
}

// GetDescription returns the Description field value
func (o *TransferLedgerEvent) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *TransferLedgerEvent) SetDescription(v string) {
	o.Description = v
}

// GetPendingBalance returns the PendingBalance field value
func (o *TransferLedgerEvent) GetPendingBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PendingBalance
}

// GetPendingBalanceOk returns a tuple with the PendingBalance field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetPendingBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PendingBalance, true
}

// SetPendingBalance sets field value
func (o *TransferLedgerEvent) SetPendingBalance(v string) {
	o.PendingBalance = v
}

// GetAvailableBalance returns the AvailableBalance field value
func (o *TransferLedgerEvent) GetAvailableBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvailableBalance
}

// GetAvailableBalanceOk returns a tuple with the AvailableBalance field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetAvailableBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AvailableBalance, true
}

// SetAvailableBalance sets field value
func (o *TransferLedgerEvent) SetAvailableBalance(v string) {
	o.AvailableBalance = v
}

// GetType returns the Type field value
func (o *TransferLedgerEvent) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TransferLedgerEvent) SetType(v string) {
	o.Type = v
}

// GetTimestamp returns the Timestamp field value
func (o *TransferLedgerEvent) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerEvent) GetTimestampOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *TransferLedgerEvent) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

func (o TransferLedgerEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ledger_event_id"] = o.LedgerEventId
	}
	if true {
		toSerialize["ledger_id"] = o.LedgerId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.TransferId.IsSet() {
		toSerialize["transfer_id"] = o.TransferId.Get()
	}
	if o.RefundId.IsSet() {
		toSerialize["refund_id"] = o.RefundId.Get()
	}
	if o.SweepId.IsSet() {
		toSerialize["sweep_id"] = o.SweepId.Get()
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["pending_balance"] = o.PendingBalance
	}
	if true {
		toSerialize["available_balance"] = o.AvailableBalance
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransferLedgerEvent) UnmarshalJSON(bytes []byte) (err error) {
	varTransferLedgerEvent := _TransferLedgerEvent{}

	if err = json.Unmarshal(bytes, &varTransferLedgerEvent); err == nil {
		*o = TransferLedgerEvent(varTransferLedgerEvent)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ledger_event_id")
		delete(additionalProperties, "ledger_id")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "transfer_id")
		delete(additionalProperties, "refund_id")
		delete(additionalProperties, "sweep_id")
		delete(additionalProperties, "description")
		delete(additionalProperties, "pending_balance")
		delete(additionalProperties, "available_balance")
		delete(additionalProperties, "type")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransferLedgerEvent struct {
	value *TransferLedgerEvent
	isSet bool
}

func (v NullableTransferLedgerEvent) Get() *TransferLedgerEvent {
	return v.value
}

func (v *NullableTransferLedgerEvent) Set(val *TransferLedgerEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferLedgerEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferLedgerEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferLedgerEvent(val *TransferLedgerEvent) *NullableTransferLedgerEvent {
	return &NullableTransferLedgerEvent{value: val, isSet: true}
}

func (v NullableTransferLedgerEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferLedgerEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


