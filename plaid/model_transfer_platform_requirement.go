/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferPlatformRequirement A piece of information that is outstanding for the scaled platform onboarding process.
type TransferPlatformRequirement struct {
	// The type of requirement.
	RequirementType *string `json:"requirement_type,omitempty"`
	// UUID of the person associated with the requirement. Only present for individual-scoped requirements.
	PersonId NullableString `json:"person_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransferPlatformRequirement TransferPlatformRequirement

// NewTransferPlatformRequirement instantiates a new TransferPlatformRequirement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferPlatformRequirement() *TransferPlatformRequirement {
	this := TransferPlatformRequirement{}
	return &this
}

// NewTransferPlatformRequirementWithDefaults instantiates a new TransferPlatformRequirement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferPlatformRequirementWithDefaults() *TransferPlatformRequirement {
	this := TransferPlatformRequirement{}
	return &this
}

// GetRequirementType returns the RequirementType field value if set, zero value otherwise.
func (o *TransferPlatformRequirement) GetRequirementType() string {
	if o == nil || o.RequirementType == nil {
		var ret string
		return ret
	}
	return *o.RequirementType
}

// GetRequirementTypeOk returns a tuple with the RequirementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferPlatformRequirement) GetRequirementTypeOk() (*string, bool) {
	if o == nil || o.RequirementType == nil {
		return nil, false
	}
	return o.RequirementType, true
}

// HasRequirementType returns a boolean if a field has been set.
func (o *TransferPlatformRequirement) HasRequirementType() bool {
	if o != nil && o.RequirementType != nil {
		return true
	}

	return false
}

// SetRequirementType gets a reference to the given string and assigns it to the RequirementType field.
func (o *TransferPlatformRequirement) SetRequirementType(v string) {
	o.RequirementType = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferPlatformRequirement) GetPersonId() string {
	if o == nil || o.PersonId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PersonId.Get()
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferPlatformRequirement) GetPersonIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PersonId.Get(), o.PersonId.IsSet()
}

// HasPersonId returns a boolean if a field has been set.
func (o *TransferPlatformRequirement) HasPersonId() bool {
	if o != nil && o.PersonId.IsSet() {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given NullableString and assigns it to the PersonId field.
func (o *TransferPlatformRequirement) SetPersonId(v string) {
	o.PersonId.Set(&v)
}
// SetPersonIdNil sets the value for PersonId to be an explicit nil
func (o *TransferPlatformRequirement) SetPersonIdNil() {
	o.PersonId.Set(nil)
}

// UnsetPersonId ensures that no value is present for PersonId, not even an explicit nil
func (o *TransferPlatformRequirement) UnsetPersonId() {
	o.PersonId.Unset()
}

func (o TransferPlatformRequirement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequirementType != nil {
		toSerialize["requirement_type"] = o.RequirementType
	}
	if o.PersonId.IsSet() {
		toSerialize["person_id"] = o.PersonId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransferPlatformRequirement) UnmarshalJSON(bytes []byte) (err error) {
	varTransferPlatformRequirement := _TransferPlatformRequirement{}

	if err = json.Unmarshal(bytes, &varTransferPlatformRequirement); err == nil {
		*o = TransferPlatformRequirement(varTransferPlatformRequirement)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "requirement_type")
		delete(additionalProperties, "person_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransferPlatformRequirement struct {
	value *TransferPlatformRequirement
	isSet bool
}

func (v NullableTransferPlatformRequirement) Get() *TransferPlatformRequirement {
	return v.value
}

func (v *NullableTransferPlatformRequirement) Set(val *TransferPlatformRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferPlatformRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferPlatformRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferPlatformRequirement(val *TransferPlatformRequirement) *NullableTransferPlatformRequirement {
	return &NullableTransferPlatformRequirement{value: val, isSet: true}
}

func (v NullableTransferPlatformRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferPlatformRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


