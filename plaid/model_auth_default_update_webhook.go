/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// AuthDefaultUpdateWebhook Plaid will trigger a `DEFAULT_UPDATE` webhook for Items that undergo a change in Auth data. This is generally caused by data partners notifying Plaid of a change in their account numbering system or to their routing numbers. To avoid returned transactions, customers that receive a `DEFAULT_UPDATE` webhook with the `account_ids_with_updated_auth` object populated should immediately discontinue all usages of existing Auth data for those accounts and call `/auth/get` or `/processor/auth/get` to obtain updated account and routing numbers.
type AuthDefaultUpdateWebhook struct {
	// `AUTH`
	WebhookType string `json:"webhook_type"`
	// `DEFAULT_UPDATE`
	WebhookCode string `json:"webhook_code"`
	// The `item_id` of the Item associated with this webhook, warning, or error
	ItemId string `json:"item_id"`
	// An array of `account_id`'s for accounts that contain new auth.
	AccountIdsWithNewAuth []string `json:"account_ids_with_new_auth"`
	// An object with keys of `account_id`'s that are mapped to their respective auth attributes that changed. `ACCOUNT_NUMBER` and `ROUTING_NUMBER` are the two potential values that can be flagged as updated.  Example: `{ \"XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58\": [\"ACCOUNT_NUMBER\"] }` 
	AccountIdsWithUpdatedAuth map[string][]AuthUpdateTypes `json:"account_ids_with_updated_auth"`
	Error NullablePlaidError `json:"error"`
	Environment WebhookEnvironmentValues `json:"environment"`
	AdditionalProperties map[string]interface{}
}

type _AuthDefaultUpdateWebhook AuthDefaultUpdateWebhook

// NewAuthDefaultUpdateWebhook instantiates a new AuthDefaultUpdateWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthDefaultUpdateWebhook(webhookType string, webhookCode string, itemId string, accountIdsWithNewAuth []string, accountIdsWithUpdatedAuth map[string][]AuthUpdateTypes, error_ NullablePlaidError, environment WebhookEnvironmentValues) *AuthDefaultUpdateWebhook {
	this := AuthDefaultUpdateWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.ItemId = itemId
	this.AccountIdsWithNewAuth = accountIdsWithNewAuth
	this.AccountIdsWithUpdatedAuth = accountIdsWithUpdatedAuth
	this.Error = error_
	this.Environment = environment
	return &this
}

// NewAuthDefaultUpdateWebhookWithDefaults instantiates a new AuthDefaultUpdateWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthDefaultUpdateWebhookWithDefaults() *AuthDefaultUpdateWebhook {
	this := AuthDefaultUpdateWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *AuthDefaultUpdateWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *AuthDefaultUpdateWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *AuthDefaultUpdateWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *AuthDefaultUpdateWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *AuthDefaultUpdateWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *AuthDefaultUpdateWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetItemId returns the ItemId field value
func (o *AuthDefaultUpdateWebhook) GetItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *AuthDefaultUpdateWebhook) GetItemIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *AuthDefaultUpdateWebhook) SetItemId(v string) {
	o.ItemId = v
}

// GetAccountIdsWithNewAuth returns the AccountIdsWithNewAuth field value
func (o *AuthDefaultUpdateWebhook) GetAccountIdsWithNewAuth() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AccountIdsWithNewAuth
}

// GetAccountIdsWithNewAuthOk returns a tuple with the AccountIdsWithNewAuth field value
// and a boolean to check if the value has been set.
func (o *AuthDefaultUpdateWebhook) GetAccountIdsWithNewAuthOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountIdsWithNewAuth, true
}

// SetAccountIdsWithNewAuth sets field value
func (o *AuthDefaultUpdateWebhook) SetAccountIdsWithNewAuth(v []string) {
	o.AccountIdsWithNewAuth = v
}

// GetAccountIdsWithUpdatedAuth returns the AccountIdsWithUpdatedAuth field value
func (o *AuthDefaultUpdateWebhook) GetAccountIdsWithUpdatedAuth() map[string][]AuthUpdateTypes {
	if o == nil {
		var ret map[string][]AuthUpdateTypes
		return ret
	}

	return o.AccountIdsWithUpdatedAuth
}

// GetAccountIdsWithUpdatedAuthOk returns a tuple with the AccountIdsWithUpdatedAuth field value
// and a boolean to check if the value has been set.
func (o *AuthDefaultUpdateWebhook) GetAccountIdsWithUpdatedAuthOk() (*map[string][]AuthUpdateTypes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountIdsWithUpdatedAuth, true
}

// SetAccountIdsWithUpdatedAuth sets field value
func (o *AuthDefaultUpdateWebhook) SetAccountIdsWithUpdatedAuth(v map[string][]AuthUpdateTypes) {
	o.AccountIdsWithUpdatedAuth = v
}

// GetError returns the Error field value
// If the value is explicit nil, the zero value for PlaidError will be returned
func (o *AuthDefaultUpdateWebhook) GetError() PlaidError {
	if o == nil || o.Error.Get() == nil {
		var ret PlaidError
		return ret
	}

	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthDefaultUpdateWebhook) GetErrorOk() (*PlaidError, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// SetError sets field value
func (o *AuthDefaultUpdateWebhook) SetError(v PlaidError) {
	o.Error.Set(&v)
}

// GetEnvironment returns the Environment field value
func (o *AuthDefaultUpdateWebhook) GetEnvironment() WebhookEnvironmentValues {
	if o == nil {
		var ret WebhookEnvironmentValues
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *AuthDefaultUpdateWebhook) GetEnvironmentOk() (*WebhookEnvironmentValues, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *AuthDefaultUpdateWebhook) SetEnvironment(v WebhookEnvironmentValues) {
	o.Environment = v
}

func (o AuthDefaultUpdateWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if true {
		toSerialize["item_id"] = o.ItemId
	}
	if true {
		toSerialize["account_ids_with_new_auth"] = o.AccountIdsWithNewAuth
	}
	if true {
		toSerialize["account_ids_with_updated_auth"] = o.AccountIdsWithUpdatedAuth
	}
	if true {
		toSerialize["error"] = o.Error.Get()
	}
	if true {
		toSerialize["environment"] = o.Environment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AuthDefaultUpdateWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varAuthDefaultUpdateWebhook := _AuthDefaultUpdateWebhook{}

	if err = json.Unmarshal(bytes, &varAuthDefaultUpdateWebhook); err == nil {
		*o = AuthDefaultUpdateWebhook(varAuthDefaultUpdateWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "account_ids_with_new_auth")
		delete(additionalProperties, "account_ids_with_updated_auth")
		delete(additionalProperties, "error")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthDefaultUpdateWebhook struct {
	value *AuthDefaultUpdateWebhook
	isSet bool
}

func (v NullableAuthDefaultUpdateWebhook) Get() *AuthDefaultUpdateWebhook {
	return v.value
}

func (v *NullableAuthDefaultUpdateWebhook) Set(val *AuthDefaultUpdateWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthDefaultUpdateWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthDefaultUpdateWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthDefaultUpdateWebhook(val *AuthDefaultUpdateWebhook) *NullableAuthDefaultUpdateWebhook {
	return &NullableAuthDefaultUpdateWebhook{value: val, isSet: true}
}

func (v NullableAuthDefaultUpdateWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthDefaultUpdateWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


