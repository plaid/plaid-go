/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PlaidCheckScore The results of the Plaid Check score
type PlaidCheckScore struct {
	// The score returned by the Plaid Check Score model.
	Score *float32 `json:"score,omitempty"`
	// The reasons for an individual having risk according to the Plaid Check score.
	ReasonCodes *[]string `json:"reason_codes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PlaidCheckScore PlaidCheckScore

// NewPlaidCheckScore instantiates a new PlaidCheckScore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaidCheckScore() *PlaidCheckScore {
	this := PlaidCheckScore{}
	return &this
}

// NewPlaidCheckScoreWithDefaults instantiates a new PlaidCheckScore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaidCheckScoreWithDefaults() *PlaidCheckScore {
	this := PlaidCheckScore{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *PlaidCheckScore) GetScore() float32 {
	if o == nil || o.Score == nil {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaidCheckScore) GetScoreOk() (*float32, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *PlaidCheckScore) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *PlaidCheckScore) SetScore(v float32) {
	o.Score = &v
}

// GetReasonCodes returns the ReasonCodes field value if set, zero value otherwise.
func (o *PlaidCheckScore) GetReasonCodes() []string {
	if o == nil || o.ReasonCodes == nil {
		var ret []string
		return ret
	}
	return *o.ReasonCodes
}

// GetReasonCodesOk returns a tuple with the ReasonCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaidCheckScore) GetReasonCodesOk() (*[]string, bool) {
	if o == nil || o.ReasonCodes == nil {
		return nil, false
	}
	return o.ReasonCodes, true
}

// HasReasonCodes returns a boolean if a field has been set.
func (o *PlaidCheckScore) HasReasonCodes() bool {
	if o != nil && o.ReasonCodes != nil {
		return true
	}

	return false
}

// SetReasonCodes gets a reference to the given []string and assigns it to the ReasonCodes field.
func (o *PlaidCheckScore) SetReasonCodes(v []string) {
	o.ReasonCodes = &v
}

func (o PlaidCheckScore) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Score != nil {
		toSerialize["score"] = o.Score
	}
	if o.ReasonCodes != nil {
		toSerialize["reason_codes"] = o.ReasonCodes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PlaidCheckScore) UnmarshalJSON(bytes []byte) (err error) {
	varPlaidCheckScore := _PlaidCheckScore{}

	if err = json.Unmarshal(bytes, &varPlaidCheckScore); err == nil {
		*o = PlaidCheckScore(varPlaidCheckScore)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "score")
		delete(additionalProperties, "reason_codes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePlaidCheckScore struct {
	value *PlaidCheckScore
	isSet bool
}

func (v NullablePlaidCheckScore) Get() *PlaidCheckScore {
	return v.value
}

func (v *NullablePlaidCheckScore) Set(val *PlaidCheckScore) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaidCheckScore) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaidCheckScore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaidCheckScore(val *PlaidCheckScore) *NullablePlaidCheckScore {
	return &NullablePlaidCheckScore{value: val, isSet: true}
}

func (v NullablePlaidCheckScore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaidCheckScore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


