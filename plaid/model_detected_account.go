/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.457.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// DetectedAccount A possible account detected to be associated with a transaction user.
type DetectedAccount struct {
	// The detected account type (depository, credit, loan, investment etc.).
	DetectedAccountType NullableString `json:"detected_account_type"`
	// The detected subtype of the account, based on the transactions to/from the institution.
	DetectedAccountSubtype NullableString `json:"detected_account_subtype"`
	// The number of transactions associated with this detected account type at this financial institution.
	TransactionCount int32 `json:"transaction_count"`
	// The date of the newest transaction associated with this detected account type at this financial institution.
	NewestTransactionDate *string `json:"newest_transaction_date,omitempty"`
	// Amount of the most recent transaction associated with this detected account type at this financial institution.
	NewestTransactionAmount *float64 `json:"newest_transaction_amount,omitempty"`
	// Sum of outflow amounts associated with this detected account type at this financial institution.
	TotalOutflows float64 `json:"total_outflows"`
	// Sum of inflow amounts associated with this detected account type at this financial institution.
	TotalInflows float64 `json:"total_inflows"`
	AdditionalProperties map[string]interface{}
}

type _DetectedAccount DetectedAccount

// NewDetectedAccount instantiates a new DetectedAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetectedAccount(detectedAccountType NullableString, detectedAccountSubtype NullableString, transactionCount int32, totalOutflows float64, totalInflows float64) *DetectedAccount {
	this := DetectedAccount{}
	this.DetectedAccountType = detectedAccountType
	this.DetectedAccountSubtype = detectedAccountSubtype
	this.TransactionCount = transactionCount
	this.TotalOutflows = totalOutflows
	this.TotalInflows = totalInflows
	return &this
}

// NewDetectedAccountWithDefaults instantiates a new DetectedAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetectedAccountWithDefaults() *DetectedAccount {
	this := DetectedAccount{}
	return &this
}

// GetDetectedAccountType returns the DetectedAccountType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DetectedAccount) GetDetectedAccountType() string {
	if o == nil || o.DetectedAccountType.Get() == nil {
		var ret string
		return ret
	}

	return *o.DetectedAccountType.Get()
}

// GetDetectedAccountTypeOk returns a tuple with the DetectedAccountType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetectedAccount) GetDetectedAccountTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DetectedAccountType.Get(), o.DetectedAccountType.IsSet()
}

// SetDetectedAccountType sets field value
func (o *DetectedAccount) SetDetectedAccountType(v string) {
	o.DetectedAccountType.Set(&v)
}

// GetDetectedAccountSubtype returns the DetectedAccountSubtype field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DetectedAccount) GetDetectedAccountSubtype() string {
	if o == nil || o.DetectedAccountSubtype.Get() == nil {
		var ret string
		return ret
	}

	return *o.DetectedAccountSubtype.Get()
}

// GetDetectedAccountSubtypeOk returns a tuple with the DetectedAccountSubtype field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetectedAccount) GetDetectedAccountSubtypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DetectedAccountSubtype.Get(), o.DetectedAccountSubtype.IsSet()
}

// SetDetectedAccountSubtype sets field value
func (o *DetectedAccount) SetDetectedAccountSubtype(v string) {
	o.DetectedAccountSubtype.Set(&v)
}

// GetTransactionCount returns the TransactionCount field value
func (o *DetectedAccount) GetTransactionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactionCount
}

// GetTransactionCountOk returns a tuple with the TransactionCount field value
// and a boolean to check if the value has been set.
func (o *DetectedAccount) GetTransactionCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionCount, true
}

// SetTransactionCount sets field value
func (o *DetectedAccount) SetTransactionCount(v int32) {
	o.TransactionCount = v
}

// GetNewestTransactionDate returns the NewestTransactionDate field value if set, zero value otherwise.
func (o *DetectedAccount) GetNewestTransactionDate() string {
	if o == nil || o.NewestTransactionDate == nil {
		var ret string
		return ret
	}
	return *o.NewestTransactionDate
}

// GetNewestTransactionDateOk returns a tuple with the NewestTransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedAccount) GetNewestTransactionDateOk() (*string, bool) {
	if o == nil || o.NewestTransactionDate == nil {
		return nil, false
	}
	return o.NewestTransactionDate, true
}

// HasNewestTransactionDate returns a boolean if a field has been set.
func (o *DetectedAccount) HasNewestTransactionDate() bool {
	if o != nil && o.NewestTransactionDate != nil {
		return true
	}

	return false
}

// SetNewestTransactionDate gets a reference to the given string and assigns it to the NewestTransactionDate field.
func (o *DetectedAccount) SetNewestTransactionDate(v string) {
	o.NewestTransactionDate = &v
}

// GetNewestTransactionAmount returns the NewestTransactionAmount field value if set, zero value otherwise.
func (o *DetectedAccount) GetNewestTransactionAmount() float64 {
	if o == nil || o.NewestTransactionAmount == nil {
		var ret float64
		return ret
	}
	return *o.NewestTransactionAmount
}

// GetNewestTransactionAmountOk returns a tuple with the NewestTransactionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedAccount) GetNewestTransactionAmountOk() (*float64, bool) {
	if o == nil || o.NewestTransactionAmount == nil {
		return nil, false
	}
	return o.NewestTransactionAmount, true
}

// HasNewestTransactionAmount returns a boolean if a field has been set.
func (o *DetectedAccount) HasNewestTransactionAmount() bool {
	if o != nil && o.NewestTransactionAmount != nil {
		return true
	}

	return false
}

// SetNewestTransactionAmount gets a reference to the given float64 and assigns it to the NewestTransactionAmount field.
func (o *DetectedAccount) SetNewestTransactionAmount(v float64) {
	o.NewestTransactionAmount = &v
}

// GetTotalOutflows returns the TotalOutflows field value
func (o *DetectedAccount) GetTotalOutflows() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalOutflows
}

// GetTotalOutflowsOk returns a tuple with the TotalOutflows field value
// and a boolean to check if the value has been set.
func (o *DetectedAccount) GetTotalOutflowsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalOutflows, true
}

// SetTotalOutflows sets field value
func (o *DetectedAccount) SetTotalOutflows(v float64) {
	o.TotalOutflows = v
}

// GetTotalInflows returns the TotalInflows field value
func (o *DetectedAccount) GetTotalInflows() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalInflows
}

// GetTotalInflowsOk returns a tuple with the TotalInflows field value
// and a boolean to check if the value has been set.
func (o *DetectedAccount) GetTotalInflowsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalInflows, true
}

// SetTotalInflows sets field value
func (o *DetectedAccount) SetTotalInflows(v float64) {
	o.TotalInflows = v
}

func (o DetectedAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["detected_account_type"] = o.DetectedAccountType.Get()
	}
	if true {
		toSerialize["detected_account_subtype"] = o.DetectedAccountSubtype.Get()
	}
	if true {
		toSerialize["transaction_count"] = o.TransactionCount
	}
	if o.NewestTransactionDate != nil {
		toSerialize["newest_transaction_date"] = o.NewestTransactionDate
	}
	if o.NewestTransactionAmount != nil {
		toSerialize["newest_transaction_amount"] = o.NewestTransactionAmount
	}
	if true {
		toSerialize["total_outflows"] = o.TotalOutflows
	}
	if true {
		toSerialize["total_inflows"] = o.TotalInflows
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DetectedAccount) UnmarshalJSON(bytes []byte) (err error) {
	varDetectedAccount := _DetectedAccount{}

	if err = json.Unmarshal(bytes, &varDetectedAccount); err == nil {
		*o = DetectedAccount(varDetectedAccount)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "detected_account_type")
		delete(additionalProperties, "detected_account_subtype")
		delete(additionalProperties, "transaction_count")
		delete(additionalProperties, "newest_transaction_date")
		delete(additionalProperties, "newest_transaction_amount")
		delete(additionalProperties, "total_outflows")
		delete(additionalProperties, "total_inflows")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDetectedAccount struct {
	value *DetectedAccount
	isSet bool
}

func (v NullableDetectedAccount) Get() *DetectedAccount {
	return v.value
}

func (v *NullableDetectedAccount) Set(val *DetectedAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableDetectedAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableDetectedAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetectedAccount(val *DetectedAccount) *NullableDetectedAccount {
	return &NullableDetectedAccount{value: val, isSet: true}
}

func (v NullableDetectedAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetectedAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


