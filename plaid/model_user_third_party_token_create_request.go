/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// UserThirdPartyTokenCreateRequest UserThirdPartyTokenCreateRequest defines the request schema for `/user/third_party_token/create`
type UserThirdPartyTokenCreateRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The user token associated with the User data is being requested for.
	UserToken string `json:"user_token"`
	// The Plaid API `client_id` of the third-party client the token will be shared with. The token will only be valid for the specified client.
	ThirdPartyClientId string `json:"third_party_client_id"`
	// The expiration date and time for the third-party user token in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). The expiration is restricted to a maximum of 24 hours from the token's creation time. If not provided, the token will automatically expire after 24 hours.
	ExpirationTime NullableTime `json:"expiration_time,omitempty"`
}

// NewUserThirdPartyTokenCreateRequest instantiates a new UserThirdPartyTokenCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserThirdPartyTokenCreateRequest(userToken string, thirdPartyClientId string) *UserThirdPartyTokenCreateRequest {
	this := UserThirdPartyTokenCreateRequest{}
	this.UserToken = userToken
	this.ThirdPartyClientId = thirdPartyClientId
	return &this
}

// NewUserThirdPartyTokenCreateRequestWithDefaults instantiates a new UserThirdPartyTokenCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserThirdPartyTokenCreateRequestWithDefaults() *UserThirdPartyTokenCreateRequest {
	this := UserThirdPartyTokenCreateRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *UserThirdPartyTokenCreateRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserThirdPartyTokenCreateRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *UserThirdPartyTokenCreateRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *UserThirdPartyTokenCreateRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *UserThirdPartyTokenCreateRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserThirdPartyTokenCreateRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *UserThirdPartyTokenCreateRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *UserThirdPartyTokenCreateRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetUserToken returns the UserToken field value
func (o *UserThirdPartyTokenCreateRequest) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *UserThirdPartyTokenCreateRequest) GetUserTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *UserThirdPartyTokenCreateRequest) SetUserToken(v string) {
	o.UserToken = v
}

// GetThirdPartyClientId returns the ThirdPartyClientId field value
func (o *UserThirdPartyTokenCreateRequest) GetThirdPartyClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThirdPartyClientId
}

// GetThirdPartyClientIdOk returns a tuple with the ThirdPartyClientId field value
// and a boolean to check if the value has been set.
func (o *UserThirdPartyTokenCreateRequest) GetThirdPartyClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ThirdPartyClientId, true
}

// SetThirdPartyClientId sets field value
func (o *UserThirdPartyTokenCreateRequest) SetThirdPartyClientId(v string) {
	o.ThirdPartyClientId = v
}

// GetExpirationTime returns the ExpirationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserThirdPartyTokenCreateRequest) GetExpirationTime() time.Time {
	if o == nil || o.ExpirationTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationTime.Get()
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserThirdPartyTokenCreateRequest) GetExpirationTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExpirationTime.Get(), o.ExpirationTime.IsSet()
}

// HasExpirationTime returns a boolean if a field has been set.
func (o *UserThirdPartyTokenCreateRequest) HasExpirationTime() bool {
	if o != nil && o.ExpirationTime.IsSet() {
		return true
	}

	return false
}

// SetExpirationTime gets a reference to the given NullableTime and assigns it to the ExpirationTime field.
func (o *UserThirdPartyTokenCreateRequest) SetExpirationTime(v time.Time) {
	o.ExpirationTime.Set(&v)
}
// SetExpirationTimeNil sets the value for ExpirationTime to be an explicit nil
func (o *UserThirdPartyTokenCreateRequest) SetExpirationTimeNil() {
	o.ExpirationTime.Set(nil)
}

// UnsetExpirationTime ensures that no value is present for ExpirationTime, not even an explicit nil
func (o *UserThirdPartyTokenCreateRequest) UnsetExpirationTime() {
	o.ExpirationTime.Unset()
}

func (o UserThirdPartyTokenCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["user_token"] = o.UserToken
	}
	if true {
		toSerialize["third_party_client_id"] = o.ThirdPartyClientId
	}
	if o.ExpirationTime.IsSet() {
		toSerialize["expiration_time"] = o.ExpirationTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUserThirdPartyTokenCreateRequest struct {
	value *UserThirdPartyTokenCreateRequest
	isSet bool
}

func (v NullableUserThirdPartyTokenCreateRequest) Get() *UserThirdPartyTokenCreateRequest {
	return v.value
}

func (v *NullableUserThirdPartyTokenCreateRequest) Set(val *UserThirdPartyTokenCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserThirdPartyTokenCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserThirdPartyTokenCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserThirdPartyTokenCreateRequest(val *UserThirdPartyTokenCreateRequest) *NullableUserThirdPartyTokenCreateRequest {
	return &NullableUserThirdPartyTokenCreateRequest{value: val, isSet: true}
}

func (v NullableUserThirdPartyTokenCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserThirdPartyTokenCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


