/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ClientUserIdentityAddress User address information.
type ClientUserIdentityAddress struct {
	// First line of street address.
	Street1 string `json:"street_1"`
	// Second line of street address.
	Street2 NullableString `json:"street_2,omitempty"`
	// City name.
	City string `json:"city"`
	// State, province or region.
	Region string `json:"region"`
	// Country code.
	Country string `json:"country"`
	// Postal or ZIP code.
	PostalCode string `json:"postal_code"`
	// Indicates whether this is the primary address for the User.
	Primary bool `json:"primary"`
}

// NewClientUserIdentityAddress instantiates a new ClientUserIdentityAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientUserIdentityAddress(street1 string, city string, region string, country string, postalCode string, primary bool) *ClientUserIdentityAddress {
	this := ClientUserIdentityAddress{}
	this.Street1 = street1
	this.City = city
	this.Region = region
	this.Country = country
	this.PostalCode = postalCode
	this.Primary = primary
	return &this
}

// NewClientUserIdentityAddressWithDefaults instantiates a new ClientUserIdentityAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientUserIdentityAddressWithDefaults() *ClientUserIdentityAddress {
	this := ClientUserIdentityAddress{}
	return &this
}

// GetStreet1 returns the Street1 field value
func (o *ClientUserIdentityAddress) GetStreet1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Street1
}

// GetStreet1Ok returns a tuple with the Street1 field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityAddress) GetStreet1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Street1, true
}

// SetStreet1 sets field value
func (o *ClientUserIdentityAddress) SetStreet1(v string) {
	o.Street1 = v
}

// GetStreet2 returns the Street2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUserIdentityAddress) GetStreet2() string {
	if o == nil || o.Street2.Get() == nil {
		var ret string
		return ret
	}
	return *o.Street2.Get()
}

// GetStreet2Ok returns a tuple with the Street2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUserIdentityAddress) GetStreet2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Street2.Get(), o.Street2.IsSet()
}

// HasStreet2 returns a boolean if a field has been set.
func (o *ClientUserIdentityAddress) HasStreet2() bool {
	if o != nil && o.Street2.IsSet() {
		return true
	}

	return false
}

// SetStreet2 gets a reference to the given NullableString and assigns it to the Street2 field.
func (o *ClientUserIdentityAddress) SetStreet2(v string) {
	o.Street2.Set(&v)
}
// SetStreet2Nil sets the value for Street2 to be an explicit nil
func (o *ClientUserIdentityAddress) SetStreet2Nil() {
	o.Street2.Set(nil)
}

// UnsetStreet2 ensures that no value is present for Street2, not even an explicit nil
func (o *ClientUserIdentityAddress) UnsetStreet2() {
	o.Street2.Unset()
}

// GetCity returns the City field value
func (o *ClientUserIdentityAddress) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityAddress) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *ClientUserIdentityAddress) SetCity(v string) {
	o.City = v
}

// GetRegion returns the Region field value
func (o *ClientUserIdentityAddress) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityAddress) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ClientUserIdentityAddress) SetRegion(v string) {
	o.Region = v
}

// GetCountry returns the Country field value
func (o *ClientUserIdentityAddress) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityAddress) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *ClientUserIdentityAddress) SetCountry(v string) {
	o.Country = v
}

// GetPostalCode returns the PostalCode field value
func (o *ClientUserIdentityAddress) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *ClientUserIdentityAddress) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetPrimary returns the Primary field value
func (o *ClientUserIdentityAddress) GetPrimary() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityAddress) GetPrimaryOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Primary, true
}

// SetPrimary sets field value
func (o *ClientUserIdentityAddress) SetPrimary(v bool) {
	o.Primary = v
}

func (o ClientUserIdentityAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["street_1"] = o.Street1
	}
	if o.Street2.IsSet() {
		toSerialize["street_2"] = o.Street2.Get()
	}
	if true {
		toSerialize["city"] = o.City
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if true {
		toSerialize["postal_code"] = o.PostalCode
	}
	if true {
		toSerialize["primary"] = o.Primary
	}
	return json.Marshal(toSerialize)
}

type NullableClientUserIdentityAddress struct {
	value *ClientUserIdentityAddress
	isSet bool
}

func (v NullableClientUserIdentityAddress) Get() *ClientUserIdentityAddress {
	return v.value
}

func (v *NullableClientUserIdentityAddress) Set(val *ClientUserIdentityAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUserIdentityAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUserIdentityAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUserIdentityAddress(val *ClientUserIdentityAddress) *NullableClientUserIdentityAddress {
	return &NullableClientUserIdentityAddress{value: val, isSet: true}
}

func (v NullableClientUserIdentityAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUserIdentityAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


