/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.205.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// SandboxTransferTestClockCreateRequest Defines the request schema for `/sandbox/transfer/test_clock/create`
type SandboxTransferTestClockCreateRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId string `json:"client_id"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret string `json:"secret"`
	// The frozen timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`.
	FrozenTimestamp time.Time `json:"frozen_timestamp"`
}

// NewSandboxTransferTestClockCreateRequest instantiates a new SandboxTransferTestClockCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxTransferTestClockCreateRequest(clientId string, secret string, frozenTimestamp time.Time) *SandboxTransferTestClockCreateRequest {
	this := SandboxTransferTestClockCreateRequest{}
	this.ClientId = clientId
	this.Secret = secret
	this.FrozenTimestamp = frozenTimestamp
	return &this
}

// NewSandboxTransferTestClockCreateRequestWithDefaults instantiates a new SandboxTransferTestClockCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxTransferTestClockCreateRequestWithDefaults() *SandboxTransferTestClockCreateRequest {
	this := SandboxTransferTestClockCreateRequest{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *SandboxTransferTestClockCreateRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *SandboxTransferTestClockCreateRequest) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *SandboxTransferTestClockCreateRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetSecret returns the Secret field value
func (o *SandboxTransferTestClockCreateRequest) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *SandboxTransferTestClockCreateRequest) GetSecretOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *SandboxTransferTestClockCreateRequest) SetSecret(v string) {
	o.Secret = v
}

// GetFrozenTimestamp returns the FrozenTimestamp field value
func (o *SandboxTransferTestClockCreateRequest) GetFrozenTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FrozenTimestamp
}

// GetFrozenTimestampOk returns a tuple with the FrozenTimestamp field value
// and a boolean to check if the value has been set.
func (o *SandboxTransferTestClockCreateRequest) GetFrozenTimestampOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FrozenTimestamp, true
}

// SetFrozenTimestamp sets field value
func (o *SandboxTransferTestClockCreateRequest) SetFrozenTimestamp(v time.Time) {
	o.FrozenTimestamp = v
}

func (o SandboxTransferTestClockCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["frozen_timestamp"] = o.FrozenTimestamp
	}
	return json.Marshal(toSerialize)
}

type NullableSandboxTransferTestClockCreateRequest struct {
	value *SandboxTransferTestClockCreateRequest
	isSet bool
}

func (v NullableSandboxTransferTestClockCreateRequest) Get() *SandboxTransferTestClockCreateRequest {
	return v.value
}

func (v *NullableSandboxTransferTestClockCreateRequest) Set(val *SandboxTransferTestClockCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxTransferTestClockCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxTransferTestClockCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxTransferTestClockCreateRequest(val *SandboxTransferTestClockCreateRequest) *NullableSandboxTransferTestClockCreateRequest {
	return &NullableSandboxTransferTestClockCreateRequest{value: val, isSet: true}
}

func (v NullableSandboxTransferTestClockCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxTransferTestClockCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


