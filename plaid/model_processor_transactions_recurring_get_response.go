/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.664.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// ProcessorTransactionsRecurringGetResponse ProcessorTransactionsRecurringGetResponse defines the response schema for `/processor/transactions/recurring/get`
type ProcessorTransactionsRecurringGetResponse struct {
	// An array of depository transaction streams.
	InflowStreams []TransactionStream `json:"inflow_streams"`
	// An array of expense transaction streams.
	OutflowStreams []TransactionStream `json:"outflow_streams"`
	// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time transaction streams for the given account were updated on
	UpdatedDatetime time.Time `json:"updated_datetime"`
	// Optional parameter that specifies which version of the personal finance category taxonomy to return. The v2 taxonomy is defined [here](https://docs.google.com/spreadsheets/d/e/2PACX-1vRUQR6BdYCwu7libfEUUA0U4TYfkyxpAUOSCj_unpv6OYCJMhIC0_PNrJnnki0At3LAG0PgT3aY7hRz/pubhtml). The legacy v1 taxonomy is defined [here](https://docs.google.com/spreadsheets/d/e/2PACX-1vQb96YxbnLdHbAROh1Dx7BaSpChnAIEKp1zZZFLBBpGbiLtPR3JTtxzvQ8mF4kU0StL8Y16WEpUd5P2/pubhtml).  If you enabled any Financial Insights products before October 2025 you will receive a default of `v1` taxonomy and may request `v2` by explicitly setting this field to `v2`.  If you enabled any Financial Insights products on or after October 2025 you may only receive `v2` taxonomy. 
	PersonalFinanceCategoryVersion *string `json:"personal_finance_category_version,omitempty"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _ProcessorTransactionsRecurringGetResponse ProcessorTransactionsRecurringGetResponse

// NewProcessorTransactionsRecurringGetResponse instantiates a new ProcessorTransactionsRecurringGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessorTransactionsRecurringGetResponse(inflowStreams []TransactionStream, outflowStreams []TransactionStream, updatedDatetime time.Time, requestId string) *ProcessorTransactionsRecurringGetResponse {
	this := ProcessorTransactionsRecurringGetResponse{}
	this.InflowStreams = inflowStreams
	this.OutflowStreams = outflowStreams
	this.UpdatedDatetime = updatedDatetime
	this.RequestId = requestId
	return &this
}

// NewProcessorTransactionsRecurringGetResponseWithDefaults instantiates a new ProcessorTransactionsRecurringGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessorTransactionsRecurringGetResponseWithDefaults() *ProcessorTransactionsRecurringGetResponse {
	this := ProcessorTransactionsRecurringGetResponse{}
	return &this
}

// GetInflowStreams returns the InflowStreams field value
func (o *ProcessorTransactionsRecurringGetResponse) GetInflowStreams() []TransactionStream {
	if o == nil {
		var ret []TransactionStream
		return ret
	}

	return o.InflowStreams
}

// GetInflowStreamsOk returns a tuple with the InflowStreams field value
// and a boolean to check if the value has been set.
func (o *ProcessorTransactionsRecurringGetResponse) GetInflowStreamsOk() (*[]TransactionStream, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InflowStreams, true
}

// SetInflowStreams sets field value
func (o *ProcessorTransactionsRecurringGetResponse) SetInflowStreams(v []TransactionStream) {
	o.InflowStreams = v
}

// GetOutflowStreams returns the OutflowStreams field value
func (o *ProcessorTransactionsRecurringGetResponse) GetOutflowStreams() []TransactionStream {
	if o == nil {
		var ret []TransactionStream
		return ret
	}

	return o.OutflowStreams
}

// GetOutflowStreamsOk returns a tuple with the OutflowStreams field value
// and a boolean to check if the value has been set.
func (o *ProcessorTransactionsRecurringGetResponse) GetOutflowStreamsOk() (*[]TransactionStream, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OutflowStreams, true
}

// SetOutflowStreams sets field value
func (o *ProcessorTransactionsRecurringGetResponse) SetOutflowStreams(v []TransactionStream) {
	o.OutflowStreams = v
}

// GetUpdatedDatetime returns the UpdatedDatetime field value
func (o *ProcessorTransactionsRecurringGetResponse) GetUpdatedDatetime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedDatetime
}

// GetUpdatedDatetimeOk returns a tuple with the UpdatedDatetime field value
// and a boolean to check if the value has been set.
func (o *ProcessorTransactionsRecurringGetResponse) GetUpdatedDatetimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedDatetime, true
}

// SetUpdatedDatetime sets field value
func (o *ProcessorTransactionsRecurringGetResponse) SetUpdatedDatetime(v time.Time) {
	o.UpdatedDatetime = v
}

// GetPersonalFinanceCategoryVersion returns the PersonalFinanceCategoryVersion field value if set, zero value otherwise.
func (o *ProcessorTransactionsRecurringGetResponse) GetPersonalFinanceCategoryVersion() string {
	if o == nil || o.PersonalFinanceCategoryVersion == nil {
		var ret string
		return ret
	}
	return *o.PersonalFinanceCategoryVersion
}

// GetPersonalFinanceCategoryVersionOk returns a tuple with the PersonalFinanceCategoryVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessorTransactionsRecurringGetResponse) GetPersonalFinanceCategoryVersionOk() (*string, bool) {
	if o == nil || o.PersonalFinanceCategoryVersion == nil {
		return nil, false
	}
	return o.PersonalFinanceCategoryVersion, true
}

// HasPersonalFinanceCategoryVersion returns a boolean if a field has been set.
func (o *ProcessorTransactionsRecurringGetResponse) HasPersonalFinanceCategoryVersion() bool {
	if o != nil && o.PersonalFinanceCategoryVersion != nil {
		return true
	}

	return false
}

// SetPersonalFinanceCategoryVersion gets a reference to the given string and assigns it to the PersonalFinanceCategoryVersion field.
func (o *ProcessorTransactionsRecurringGetResponse) SetPersonalFinanceCategoryVersion(v string) {
	o.PersonalFinanceCategoryVersion = &v
}

// GetRequestId returns the RequestId field value
func (o *ProcessorTransactionsRecurringGetResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ProcessorTransactionsRecurringGetResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ProcessorTransactionsRecurringGetResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o ProcessorTransactionsRecurringGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["inflow_streams"] = o.InflowStreams
	}
	if true {
		toSerialize["outflow_streams"] = o.OutflowStreams
	}
	if true {
		toSerialize["updated_datetime"] = o.UpdatedDatetime
	}
	if o.PersonalFinanceCategoryVersion != nil {
		toSerialize["personal_finance_category_version"] = o.PersonalFinanceCategoryVersion
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProcessorTransactionsRecurringGetResponse) UnmarshalJSON(bytes []byte) (err error) {
	varProcessorTransactionsRecurringGetResponse := _ProcessorTransactionsRecurringGetResponse{}

	if err = json.Unmarshal(bytes, &varProcessorTransactionsRecurringGetResponse); err == nil {
		*o = ProcessorTransactionsRecurringGetResponse(varProcessorTransactionsRecurringGetResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "inflow_streams")
		delete(additionalProperties, "outflow_streams")
		delete(additionalProperties, "updated_datetime")
		delete(additionalProperties, "personal_finance_category_version")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProcessorTransactionsRecurringGetResponse struct {
	value *ProcessorTransactionsRecurringGetResponse
	isSet bool
}

func (v NullableProcessorTransactionsRecurringGetResponse) Get() *ProcessorTransactionsRecurringGetResponse {
	return v.value
}

func (v *NullableProcessorTransactionsRecurringGetResponse) Set(val *ProcessorTransactionsRecurringGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessorTransactionsRecurringGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessorTransactionsRecurringGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessorTransactionsRecurringGetResponse(val *ProcessorTransactionsRecurringGetResponse) *NullableProcessorTransactionsRecurringGetResponse {
	return &NullableProcessorTransactionsRecurringGetResponse{value: val, isSet: true}
}

func (v NullableProcessorTransactionsRecurringGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessorTransactionsRecurringGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


