/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.503.5
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// IdentityDocumentMetadata In closed beta. Object representing metadata pertaining to the document.
type IdentityDocumentMetadata struct {
	// Boolean field indicating if the uploaded document's account number matches the account number we have on file
	IsAccountNumberMatch *bool `json:"is_account_number_match,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	UploadedAt *time.Time `json:"uploaded_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdentityDocumentMetadata IdentityDocumentMetadata

// NewIdentityDocumentMetadata instantiates a new IdentityDocumentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityDocumentMetadata() *IdentityDocumentMetadata {
	this := IdentityDocumentMetadata{}
	return &this
}

// NewIdentityDocumentMetadataWithDefaults instantiates a new IdentityDocumentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityDocumentMetadataWithDefaults() *IdentityDocumentMetadata {
	this := IdentityDocumentMetadata{}
	return &this
}

// GetIsAccountNumberMatch returns the IsAccountNumberMatch field value if set, zero value otherwise.
func (o *IdentityDocumentMetadata) GetIsAccountNumberMatch() bool {
	if o == nil || o.IsAccountNumberMatch == nil {
		var ret bool
		return ret
	}
	return *o.IsAccountNumberMatch
}

// GetIsAccountNumberMatchOk returns a tuple with the IsAccountNumberMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDocumentMetadata) GetIsAccountNumberMatchOk() (*bool, bool) {
	if o == nil || o.IsAccountNumberMatch == nil {
		return nil, false
	}
	return o.IsAccountNumberMatch, true
}

// HasIsAccountNumberMatch returns a boolean if a field has been set.
func (o *IdentityDocumentMetadata) HasIsAccountNumberMatch() bool {
	if o != nil && o.IsAccountNumberMatch != nil {
		return true
	}

	return false
}

// SetIsAccountNumberMatch gets a reference to the given bool and assigns it to the IsAccountNumberMatch field.
func (o *IdentityDocumentMetadata) SetIsAccountNumberMatch(v bool) {
	o.IsAccountNumberMatch = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *IdentityDocumentMetadata) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDocumentMetadata) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *IdentityDocumentMetadata) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *IdentityDocumentMetadata) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetUploadedAt returns the UploadedAt field value if set, zero value otherwise.
func (o *IdentityDocumentMetadata) GetUploadedAt() time.Time {
	if o == nil || o.UploadedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UploadedAt
}

// GetUploadedAtOk returns a tuple with the UploadedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDocumentMetadata) GetUploadedAtOk() (*time.Time, bool) {
	if o == nil || o.UploadedAt == nil {
		return nil, false
	}
	return o.UploadedAt, true
}

// HasUploadedAt returns a boolean if a field has been set.
func (o *IdentityDocumentMetadata) HasUploadedAt() bool {
	if o != nil && o.UploadedAt != nil {
		return true
	}

	return false
}

// SetUploadedAt gets a reference to the given time.Time and assigns it to the UploadedAt field.
func (o *IdentityDocumentMetadata) SetUploadedAt(v time.Time) {
	o.UploadedAt = &v
}

func (o IdentityDocumentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsAccountNumberMatch != nil {
		toSerialize["is_account_number_match"] = o.IsAccountNumberMatch
	}
	if o.LastUpdated != nil {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if o.UploadedAt != nil {
		toSerialize["uploaded_at"] = o.UploadedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *IdentityDocumentMetadata) UnmarshalJSON(bytes []byte) (err error) {
	varIdentityDocumentMetadata := _IdentityDocumentMetadata{}

	if err = json.Unmarshal(bytes, &varIdentityDocumentMetadata); err == nil {
		*o = IdentityDocumentMetadata(varIdentityDocumentMetadata)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "is_account_number_match")
		delete(additionalProperties, "last_updated")
		delete(additionalProperties, "uploaded_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityDocumentMetadata struct {
	value *IdentityDocumentMetadata
	isSet bool
}

func (v NullableIdentityDocumentMetadata) Get() *IdentityDocumentMetadata {
	return v.value
}

func (v *NullableIdentityDocumentMetadata) Set(val *IdentityDocumentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityDocumentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityDocumentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityDocumentMetadata(val *IdentityDocumentMetadata) *NullableIdentityDocumentMetadata {
	return &NullableIdentityDocumentMetadata{value: val, isSet: true}
}

func (v NullableIdentityDocumentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityDocumentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


