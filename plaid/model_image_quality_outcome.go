/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.641.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// ImageQualityOutcome The outcome of the image quality check.
type ImageQualityOutcome string

var _ = fmt.Printf

// List of ImageQualityOutcome
const (
	IMAGEQUALITYOUTCOME_SUCCESS ImageQualityOutcome = "success"
	IMAGEQUALITYOUTCOME_FAILED ImageQualityOutcome = "failed"
)

var allowedImageQualityOutcomeEnumValues = []ImageQualityOutcome{
	"success",
	"failed",
}

func (v *ImageQualityOutcome) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := ImageQualityOutcome(value)


	*v = enumTypeValue
	return nil
}

// NewImageQualityOutcomeFromValue returns a pointer to a valid ImageQualityOutcome
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewImageQualityOutcomeFromValue(v string) (*ImageQualityOutcome, error) {
	ev := ImageQualityOutcome(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImageQualityOutcome) IsValid() bool {
	for _, existing := range allowedImageQualityOutcomeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ImageQualityOutcome value
func (v ImageQualityOutcome) Ptr() *ImageQualityOutcome {
	return &v
}

type NullableImageQualityOutcome struct {
	value *ImageQualityOutcome
	isSet bool
}

func (v NullableImageQualityOutcome) Get() *ImageQualityOutcome {
	return v.value
}

func (v *NullableImageQualityOutcome) Set(val *ImageQualityOutcome) {
	v.value = val
	v.isSet = true
}

func (v NullableImageQualityOutcome) IsSet() bool {
	return v.isSet
}

func (v *NullableImageQualityOutcome) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageQualityOutcome(val *ImageQualityOutcome) *NullableImageQualityOutcome {
	return &NullableImageQualityOutcome{value: val, isSet: true}
}

func (v NullableImageQualityOutcome) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageQualityOutcome) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

