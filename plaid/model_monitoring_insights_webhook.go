/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// MonitoringInsightsWebhook Every 14 days, the webhook will be fired per item enabled for Monitoring Insights.
type MonitoringInsightsWebhook struct {
	// `CRA_MONITORING`
	WebhookType string `json:"webhook_type"`
	// The status of the Monitoring Insights report generation. Possible Values: `AVAILABLE`, `PENDING`, `UNSUPPORTED`, `UNHEALTHY`
	WebhookCode string `json:"webhook_code"`
	// The reason for why a report may not be `AVAILABLE`
	Reason NullableString `json:"reason,omitempty"`
	// The `user_id` that the report is associated with
	UserId string `json:"user_id"`
	Environment WebhookEnvironmentValues `json:"environment"`
	AdditionalProperties map[string]interface{}
}

type _MonitoringInsightsWebhook MonitoringInsightsWebhook

// NewMonitoringInsightsWebhook instantiates a new MonitoringInsightsWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringInsightsWebhook(webhookType string, webhookCode string, userId string, environment WebhookEnvironmentValues) *MonitoringInsightsWebhook {
	this := MonitoringInsightsWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.UserId = userId
	this.Environment = environment
	return &this
}

// NewMonitoringInsightsWebhookWithDefaults instantiates a new MonitoringInsightsWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringInsightsWebhookWithDefaults() *MonitoringInsightsWebhook {
	this := MonitoringInsightsWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *MonitoringInsightsWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *MonitoringInsightsWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *MonitoringInsightsWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *MonitoringInsightsWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *MonitoringInsightsWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *MonitoringInsightsWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitoringInsightsWebhook) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitoringInsightsWebhook) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *MonitoringInsightsWebhook) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *MonitoringInsightsWebhook) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *MonitoringInsightsWebhook) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *MonitoringInsightsWebhook) UnsetReason() {
	o.Reason.Unset()
}

// GetUserId returns the UserId field value
func (o *MonitoringInsightsWebhook) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *MonitoringInsightsWebhook) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *MonitoringInsightsWebhook) SetUserId(v string) {
	o.UserId = v
}

// GetEnvironment returns the Environment field value
func (o *MonitoringInsightsWebhook) GetEnvironment() WebhookEnvironmentValues {
	if o == nil {
		var ret WebhookEnvironmentValues
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *MonitoringInsightsWebhook) GetEnvironmentOk() (*WebhookEnvironmentValues, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *MonitoringInsightsWebhook) SetEnvironment(v WebhookEnvironmentValues) {
	o.Environment = v
}

func (o MonitoringInsightsWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	if true {
		toSerialize["environment"] = o.Environment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MonitoringInsightsWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varMonitoringInsightsWebhook := _MonitoringInsightsWebhook{}

	if err = json.Unmarshal(bytes, &varMonitoringInsightsWebhook); err == nil {
		*o = MonitoringInsightsWebhook(varMonitoringInsightsWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "reason")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMonitoringInsightsWebhook struct {
	value *MonitoringInsightsWebhook
	isSet bool
}

func (v NullableMonitoringInsightsWebhook) Get() *MonitoringInsightsWebhook {
	return v.value
}

func (v *NullableMonitoringInsightsWebhook) Set(val *MonitoringInsightsWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringInsightsWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringInsightsWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringInsightsWebhook(val *MonitoringInsightsWebhook) *NullableMonitoringInsightsWebhook {
	return &NullableMonitoringInsightsWebhook{value: val, isSet: true}
}

func (v NullableMonitoringInsightsWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringInsightsWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


