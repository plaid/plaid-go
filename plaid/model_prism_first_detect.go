/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PrismFirstDetect The data from the FirstDetect product returned by Prism Data.
type PrismFirstDetect struct {
	// The version of Prism Data's FirstDetect model used.
	Version int32 `json:"version"`
	// The score returned by Prism Data. Ranges from 1-999, with higher score indicating lower risk.
	Score int32 `json:"score"`
	// The reasons for an individual having risk according to the FirstDetect score.
	ReasonCodes *[]string `json:"reason_codes,omitempty"`
	Metadata *PrismCashScoreMetadata `json:"metadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PrismFirstDetect PrismFirstDetect

// NewPrismFirstDetect instantiates a new PrismFirstDetect object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrismFirstDetect(version int32, score int32) *PrismFirstDetect {
	this := PrismFirstDetect{}
	this.Version = version
	this.Score = score
	return &this
}

// NewPrismFirstDetectWithDefaults instantiates a new PrismFirstDetect object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrismFirstDetectWithDefaults() *PrismFirstDetect {
	this := PrismFirstDetect{}
	return &this
}

// GetVersion returns the Version field value
func (o *PrismFirstDetect) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *PrismFirstDetect) GetVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *PrismFirstDetect) SetVersion(v int32) {
	o.Version = v
}

// GetScore returns the Score field value
func (o *PrismFirstDetect) GetScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *PrismFirstDetect) GetScoreOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *PrismFirstDetect) SetScore(v int32) {
	o.Score = v
}

// GetReasonCodes returns the ReasonCodes field value if set, zero value otherwise.
func (o *PrismFirstDetect) GetReasonCodes() []string {
	if o == nil || o.ReasonCodes == nil {
		var ret []string
		return ret
	}
	return *o.ReasonCodes
}

// GetReasonCodesOk returns a tuple with the ReasonCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrismFirstDetect) GetReasonCodesOk() (*[]string, bool) {
	if o == nil || o.ReasonCodes == nil {
		return nil, false
	}
	return o.ReasonCodes, true
}

// HasReasonCodes returns a boolean if a field has been set.
func (o *PrismFirstDetect) HasReasonCodes() bool {
	if o != nil && o.ReasonCodes != nil {
		return true
	}

	return false
}

// SetReasonCodes gets a reference to the given []string and assigns it to the ReasonCodes field.
func (o *PrismFirstDetect) SetReasonCodes(v []string) {
	o.ReasonCodes = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PrismFirstDetect) GetMetadata() PrismCashScoreMetadata {
	if o == nil || o.Metadata == nil {
		var ret PrismCashScoreMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrismFirstDetect) GetMetadataOk() (*PrismCashScoreMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PrismFirstDetect) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given PrismCashScoreMetadata and assigns it to the Metadata field.
func (o *PrismFirstDetect) SetMetadata(v PrismCashScoreMetadata) {
	o.Metadata = &v
}

func (o PrismFirstDetect) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["score"] = o.Score
	}
	if o.ReasonCodes != nil {
		toSerialize["reason_codes"] = o.ReasonCodes
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PrismFirstDetect) UnmarshalJSON(bytes []byte) (err error) {
	varPrismFirstDetect := _PrismFirstDetect{}

	if err = json.Unmarshal(bytes, &varPrismFirstDetect); err == nil {
		*o = PrismFirstDetect(varPrismFirstDetect)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "version")
		delete(additionalProperties, "score")
		delete(additionalProperties, "reason_codes")
		delete(additionalProperties, "metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePrismFirstDetect struct {
	value *PrismFirstDetect
	isSet bool
}

func (v NullablePrismFirstDetect) Get() *PrismFirstDetect {
	return v.value
}

func (v *NullablePrismFirstDetect) Set(val *PrismFirstDetect) {
	v.value = val
	v.isSet = true
}

func (v NullablePrismFirstDetect) IsSet() bool {
	return v.isSet
}

func (v *NullablePrismFirstDetect) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrismFirstDetect(val *PrismFirstDetect) *NullablePrismFirstDetect {
	return &NullablePrismFirstDetect{value: val, isSet: true}
}

func (v NullablePrismFirstDetect) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrismFirstDetect) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


