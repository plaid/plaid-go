/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.128.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CreditBankIncomeSource Detailed information for the income source.
type CreditBankIncomeSource struct {
	// A unique identifier for an income source.
	IncomeSourceId *string `json:"income_source_id,omitempty"`
	// The most common name or original description for the underlying income transactions.
	IncomeDescription *string `json:"income_description,omitempty"`
	IncomeCategory *CreditBankIncomeCategory `json:"income_category,omitempty"`
	// Plaid's unique idenfier for the account.
	AccountId *string `json:"account_id,omitempty"`
	// Minimum of all dates within the specific income sources in the user's bank account for days requested by the client. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
	StartDate *string `json:"start_date,omitempty"`
	// Maximum of all dates within the specific income sources in the user’s bank account for days requested by the client. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
	EndDate *string `json:"end_date,omitempty"`
	PayFrequency *CreditBankIncomePayFrequency `json:"pay_frequency,omitempty"`
	// Total amount of earnings in the user’s bank account for the specific income source for days requested by the client.
	TotalAmount *float32 `json:"total_amount,omitempty"`
	// Number of transactions for the income source within the start and end date.
	TransactionCount *int32 `json:"transaction_count,omitempty"`
	HistoricalSummary *[]CreditBankIncomeHistoricalSummary `json:"historical_summary,omitempty"`
}

// NewCreditBankIncomeSource instantiates a new CreditBankIncomeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditBankIncomeSource() *CreditBankIncomeSource {
	this := CreditBankIncomeSource{}
	return &this
}

// NewCreditBankIncomeSourceWithDefaults instantiates a new CreditBankIncomeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditBankIncomeSourceWithDefaults() *CreditBankIncomeSource {
	this := CreditBankIncomeSource{}
	return &this
}

// GetIncomeSourceId returns the IncomeSourceId field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetIncomeSourceId() string {
	if o == nil || o.IncomeSourceId == nil {
		var ret string
		return ret
	}
	return *o.IncomeSourceId
}

// GetIncomeSourceIdOk returns a tuple with the IncomeSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetIncomeSourceIdOk() (*string, bool) {
	if o == nil || o.IncomeSourceId == nil {
		return nil, false
	}
	return o.IncomeSourceId, true
}

// HasIncomeSourceId returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasIncomeSourceId() bool {
	if o != nil && o.IncomeSourceId != nil {
		return true
	}

	return false
}

// SetIncomeSourceId gets a reference to the given string and assigns it to the IncomeSourceId field.
func (o *CreditBankIncomeSource) SetIncomeSourceId(v string) {
	o.IncomeSourceId = &v
}

// GetIncomeDescription returns the IncomeDescription field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetIncomeDescription() string {
	if o == nil || o.IncomeDescription == nil {
		var ret string
		return ret
	}
	return *o.IncomeDescription
}

// GetIncomeDescriptionOk returns a tuple with the IncomeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetIncomeDescriptionOk() (*string, bool) {
	if o == nil || o.IncomeDescription == nil {
		return nil, false
	}
	return o.IncomeDescription, true
}

// HasIncomeDescription returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasIncomeDescription() bool {
	if o != nil && o.IncomeDescription != nil {
		return true
	}

	return false
}

// SetIncomeDescription gets a reference to the given string and assigns it to the IncomeDescription field.
func (o *CreditBankIncomeSource) SetIncomeDescription(v string) {
	o.IncomeDescription = &v
}

// GetIncomeCategory returns the IncomeCategory field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetIncomeCategory() CreditBankIncomeCategory {
	if o == nil || o.IncomeCategory == nil {
		var ret CreditBankIncomeCategory
		return ret
	}
	return *o.IncomeCategory
}

// GetIncomeCategoryOk returns a tuple with the IncomeCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetIncomeCategoryOk() (*CreditBankIncomeCategory, bool) {
	if o == nil || o.IncomeCategory == nil {
		return nil, false
	}
	return o.IncomeCategory, true
}

// HasIncomeCategory returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasIncomeCategory() bool {
	if o != nil && o.IncomeCategory != nil {
		return true
	}

	return false
}

// SetIncomeCategory gets a reference to the given CreditBankIncomeCategory and assigns it to the IncomeCategory field.
func (o *CreditBankIncomeSource) SetIncomeCategory(v CreditBankIncomeCategory) {
	o.IncomeCategory = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CreditBankIncomeSource) SetAccountId(v string) {
	o.AccountId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *CreditBankIncomeSource) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *CreditBankIncomeSource) SetEndDate(v string) {
	o.EndDate = &v
}

// GetPayFrequency returns the PayFrequency field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetPayFrequency() CreditBankIncomePayFrequency {
	if o == nil || o.PayFrequency == nil {
		var ret CreditBankIncomePayFrequency
		return ret
	}
	return *o.PayFrequency
}

// GetPayFrequencyOk returns a tuple with the PayFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetPayFrequencyOk() (*CreditBankIncomePayFrequency, bool) {
	if o == nil || o.PayFrequency == nil {
		return nil, false
	}
	return o.PayFrequency, true
}

// HasPayFrequency returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasPayFrequency() bool {
	if o != nil && o.PayFrequency != nil {
		return true
	}

	return false
}

// SetPayFrequency gets a reference to the given CreditBankIncomePayFrequency and assigns it to the PayFrequency field.
func (o *CreditBankIncomeSource) SetPayFrequency(v CreditBankIncomePayFrequency) {
	o.PayFrequency = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetTotalAmount() float32 {
	if o == nil || o.TotalAmount == nil {
		var ret float32
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetTotalAmountOk() (*float32, bool) {
	if o == nil || o.TotalAmount == nil {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasTotalAmount() bool {
	if o != nil && o.TotalAmount != nil {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given float32 and assigns it to the TotalAmount field.
func (o *CreditBankIncomeSource) SetTotalAmount(v float32) {
	o.TotalAmount = &v
}

// GetTransactionCount returns the TransactionCount field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetTransactionCount() int32 {
	if o == nil || o.TransactionCount == nil {
		var ret int32
		return ret
	}
	return *o.TransactionCount
}

// GetTransactionCountOk returns a tuple with the TransactionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetTransactionCountOk() (*int32, bool) {
	if o == nil || o.TransactionCount == nil {
		return nil, false
	}
	return o.TransactionCount, true
}

// HasTransactionCount returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasTransactionCount() bool {
	if o != nil && o.TransactionCount != nil {
		return true
	}

	return false
}

// SetTransactionCount gets a reference to the given int32 and assigns it to the TransactionCount field.
func (o *CreditBankIncomeSource) SetTransactionCount(v int32) {
	o.TransactionCount = &v
}

// GetHistoricalSummary returns the HistoricalSummary field value if set, zero value otherwise.
func (o *CreditBankIncomeSource) GetHistoricalSummary() []CreditBankIncomeHistoricalSummary {
	if o == nil || o.HistoricalSummary == nil {
		var ret []CreditBankIncomeHistoricalSummary
		return ret
	}
	return *o.HistoricalSummary
}

// GetHistoricalSummaryOk returns a tuple with the HistoricalSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankIncomeSource) GetHistoricalSummaryOk() (*[]CreditBankIncomeHistoricalSummary, bool) {
	if o == nil || o.HistoricalSummary == nil {
		return nil, false
	}
	return o.HistoricalSummary, true
}

// HasHistoricalSummary returns a boolean if a field has been set.
func (o *CreditBankIncomeSource) HasHistoricalSummary() bool {
	if o != nil && o.HistoricalSummary != nil {
		return true
	}

	return false
}

// SetHistoricalSummary gets a reference to the given []CreditBankIncomeHistoricalSummary and assigns it to the HistoricalSummary field.
func (o *CreditBankIncomeSource) SetHistoricalSummary(v []CreditBankIncomeHistoricalSummary) {
	o.HistoricalSummary = &v
}

func (o CreditBankIncomeSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncomeSourceId != nil {
		toSerialize["income_source_id"] = o.IncomeSourceId
	}
	if o.IncomeDescription != nil {
		toSerialize["income_description"] = o.IncomeDescription
	}
	if o.IncomeCategory != nil {
		toSerialize["income_category"] = o.IncomeCategory
	}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.StartDate != nil {
		toSerialize["start_date"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["end_date"] = o.EndDate
	}
	if o.PayFrequency != nil {
		toSerialize["pay_frequency"] = o.PayFrequency
	}
	if o.TotalAmount != nil {
		toSerialize["total_amount"] = o.TotalAmount
	}
	if o.TransactionCount != nil {
		toSerialize["transaction_count"] = o.TransactionCount
	}
	if o.HistoricalSummary != nil {
		toSerialize["historical_summary"] = o.HistoricalSummary
	}
	return json.Marshal(toSerialize)
}

type NullableCreditBankIncomeSource struct {
	value *CreditBankIncomeSource
	isSet bool
}

func (v NullableCreditBankIncomeSource) Get() *CreditBankIncomeSource {
	return v.value
}

func (v *NullableCreditBankIncomeSource) Set(val *CreditBankIncomeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditBankIncomeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditBankIncomeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditBankIncomeSource(val *CreditBankIncomeSource) *NullableCreditBankIncomeSource {
	return &NullableCreditBankIncomeSource{value: val, isSet: true}
}

func (v NullableCreditBankIncomeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditBankIncomeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


