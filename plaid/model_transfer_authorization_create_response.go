/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.21.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferAuthorizationCreateResponse TransferAuthorizationCreateResponse defines the response schema for `/transfer/authorization/create`
type TransferAuthorizationCreateResponse struct {
	// Plaid’s unique identifier for a transfer authorization.
	Id string `json:"id"`
	// The datetime representing when the authorization was created, in the format \"2006-01-02T15:04:05Z\".
	Created *string `json:"created,omitempty"`
	//  A decision regarding the proposed transfer.  `approved` – The proposed transfer has received the end user's consent and has been approved for processing. Plaid has also reviewed the proposed transfer and has approved it for processing.   `permitted` – Plaid was unable to fetch the information required to approve or decline the proposed transfer. You may proceed with the transfer, but further review is recommended. Plaid is awaiting further instructions from the client.  `declined` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
	Decision *string `json:"decision,omitempty"`
	DecisionRationale *TransferAuthorizationDecisionRationale `json:"decision_rationale,omitempty"`
	ProposedTransfer *TransferAuthorizationProposedTransfer `json:"proposed_transfer,omitempty"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId *string `json:"request_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransferAuthorizationCreateResponse TransferAuthorizationCreateResponse

// NewTransferAuthorizationCreateResponse instantiates a new TransferAuthorizationCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferAuthorizationCreateResponse(id string) *TransferAuthorizationCreateResponse {
	this := TransferAuthorizationCreateResponse{}
	this.Id = id
	return &this
}

// NewTransferAuthorizationCreateResponseWithDefaults instantiates a new TransferAuthorizationCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferAuthorizationCreateResponseWithDefaults() *TransferAuthorizationCreateResponse {
	this := TransferAuthorizationCreateResponse{}
	return &this
}

// GetId returns the Id field value
func (o *TransferAuthorizationCreateResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationCreateResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TransferAuthorizationCreateResponse) SetId(v string) {
	o.Id = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *TransferAuthorizationCreateResponse) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationCreateResponse) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *TransferAuthorizationCreateResponse) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *TransferAuthorizationCreateResponse) SetCreated(v string) {
	o.Created = &v
}

// GetDecision returns the Decision field value if set, zero value otherwise.
func (o *TransferAuthorizationCreateResponse) GetDecision() string {
	if o == nil || o.Decision == nil {
		var ret string
		return ret
	}
	return *o.Decision
}

// GetDecisionOk returns a tuple with the Decision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationCreateResponse) GetDecisionOk() (*string, bool) {
	if o == nil || o.Decision == nil {
		return nil, false
	}
	return o.Decision, true
}

// HasDecision returns a boolean if a field has been set.
func (o *TransferAuthorizationCreateResponse) HasDecision() bool {
	if o != nil && o.Decision != nil {
		return true
	}

	return false
}

// SetDecision gets a reference to the given string and assigns it to the Decision field.
func (o *TransferAuthorizationCreateResponse) SetDecision(v string) {
	o.Decision = &v
}

// GetDecisionRationale returns the DecisionRationale field value if set, zero value otherwise.
func (o *TransferAuthorizationCreateResponse) GetDecisionRationale() TransferAuthorizationDecisionRationale {
	if o == nil || o.DecisionRationale == nil {
		var ret TransferAuthorizationDecisionRationale
		return ret
	}
	return *o.DecisionRationale
}

// GetDecisionRationaleOk returns a tuple with the DecisionRationale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationCreateResponse) GetDecisionRationaleOk() (*TransferAuthorizationDecisionRationale, bool) {
	if o == nil || o.DecisionRationale == nil {
		return nil, false
	}
	return o.DecisionRationale, true
}

// HasDecisionRationale returns a boolean if a field has been set.
func (o *TransferAuthorizationCreateResponse) HasDecisionRationale() bool {
	if o != nil && o.DecisionRationale != nil {
		return true
	}

	return false
}

// SetDecisionRationale gets a reference to the given TransferAuthorizationDecisionRationale and assigns it to the DecisionRationale field.
func (o *TransferAuthorizationCreateResponse) SetDecisionRationale(v TransferAuthorizationDecisionRationale) {
	o.DecisionRationale = &v
}

// GetProposedTransfer returns the ProposedTransfer field value if set, zero value otherwise.
func (o *TransferAuthorizationCreateResponse) GetProposedTransfer() TransferAuthorizationProposedTransfer {
	if o == nil || o.ProposedTransfer == nil {
		var ret TransferAuthorizationProposedTransfer
		return ret
	}
	return *o.ProposedTransfer
}

// GetProposedTransferOk returns a tuple with the ProposedTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationCreateResponse) GetProposedTransferOk() (*TransferAuthorizationProposedTransfer, bool) {
	if o == nil || o.ProposedTransfer == nil {
		return nil, false
	}
	return o.ProposedTransfer, true
}

// HasProposedTransfer returns a boolean if a field has been set.
func (o *TransferAuthorizationCreateResponse) HasProposedTransfer() bool {
	if o != nil && o.ProposedTransfer != nil {
		return true
	}

	return false
}

// SetProposedTransfer gets a reference to the given TransferAuthorizationProposedTransfer and assigns it to the ProposedTransfer field.
func (o *TransferAuthorizationCreateResponse) SetProposedTransfer(v TransferAuthorizationProposedTransfer) {
	o.ProposedTransfer = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *TransferAuthorizationCreateResponse) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationCreateResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *TransferAuthorizationCreateResponse) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *TransferAuthorizationCreateResponse) SetRequestId(v string) {
	o.RequestId = &v
}

func (o TransferAuthorizationCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Decision != nil {
		toSerialize["decision"] = o.Decision
	}
	if o.DecisionRationale != nil {
		toSerialize["decision_rationale"] = o.DecisionRationale
	}
	if o.ProposedTransfer != nil {
		toSerialize["proposed_transfer"] = o.ProposedTransfer
	}
	if o.RequestId != nil {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransferAuthorizationCreateResponse) UnmarshalJSON(bytes []byte) (err error) {
	varTransferAuthorizationCreateResponse := _TransferAuthorizationCreateResponse{}

	if err = json.Unmarshal(bytes, &varTransferAuthorizationCreateResponse); err == nil {
		*o = TransferAuthorizationCreateResponse(varTransferAuthorizationCreateResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created")
		delete(additionalProperties, "decision")
		delete(additionalProperties, "decision_rationale")
		delete(additionalProperties, "proposed_transfer")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransferAuthorizationCreateResponse struct {
	value *TransferAuthorizationCreateResponse
	isSet bool
}

func (v NullableTransferAuthorizationCreateResponse) Get() *TransferAuthorizationCreateResponse {
	return v.value
}

func (v *NullableTransferAuthorizationCreateResponse) Set(val *TransferAuthorizationCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferAuthorizationCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferAuthorizationCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferAuthorizationCreateResponse(val *TransferAuthorizationCreateResponse) *NullableTransferAuthorizationCreateResponse {
	return &NullableTransferAuthorizationCreateResponse{value: val, isSet: true}
}

func (v NullableTransferAuthorizationCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferAuthorizationCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


