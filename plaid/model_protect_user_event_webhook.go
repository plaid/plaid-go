/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// ProtectUserEventWebhook Fired when there has been a new user event. The webhook payload contains limited information about the event. For full event details, call [`/protect/event/get`](https://plaid.com/docs/api/products/protect/#protecteventget).
type ProtectUserEventWebhook struct {
	// `\"PROTECT\"`
	WebhookType string `json:"webhook_type"`
	// `PROTECT_USER_EVENT`
	WebhookCode string `json:"webhook_code"`
	// The event ID of the user event that occurred.
	EventId string `json:"event_id"`
	// The type of user event that occurred.
	EventType string `json:"event_type"`
	// The timestamp of the event, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
	Timestamp time.Time `json:"timestamp"`
	// The Plaid User ID.
	UserId NullableString `json:"user_id"`
	AdditionalProperties map[string]interface{}
}

type _ProtectUserEventWebhook ProtectUserEventWebhook

// NewProtectUserEventWebhook instantiates a new ProtectUserEventWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectUserEventWebhook(webhookType string, webhookCode string, eventId string, eventType string, timestamp time.Time, userId NullableString) *ProtectUserEventWebhook {
	this := ProtectUserEventWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.EventId = eventId
	this.EventType = eventType
	this.Timestamp = timestamp
	this.UserId = userId
	return &this
}

// NewProtectUserEventWebhookWithDefaults instantiates a new ProtectUserEventWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectUserEventWebhookWithDefaults() *ProtectUserEventWebhook {
	this := ProtectUserEventWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *ProtectUserEventWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *ProtectUserEventWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *ProtectUserEventWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *ProtectUserEventWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *ProtectUserEventWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *ProtectUserEventWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetEventId returns the EventId field value
func (o *ProtectUserEventWebhook) GetEventId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *ProtectUserEventWebhook) GetEventIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *ProtectUserEventWebhook) SetEventId(v string) {
	o.EventId = v
}

// GetEventType returns the EventType field value
func (o *ProtectUserEventWebhook) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *ProtectUserEventWebhook) GetEventTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *ProtectUserEventWebhook) SetEventType(v string) {
	o.EventType = v
}

// GetTimestamp returns the Timestamp field value
func (o *ProtectUserEventWebhook) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ProtectUserEventWebhook) GetTimestampOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ProtectUserEventWebhook) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetUserId returns the UserId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProtectUserEventWebhook) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}

	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectUserEventWebhook) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// SetUserId sets field value
func (o *ProtectUserEventWebhook) SetUserId(v string) {
	o.UserId.Set(&v)
}

func (o ProtectUserEventWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if true {
		toSerialize["event_id"] = o.EventId
	}
	if true {
		toSerialize["event_type"] = o.EventType
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["user_id"] = o.UserId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProtectUserEventWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varProtectUserEventWebhook := _ProtectUserEventWebhook{}

	if err = json.Unmarshal(bytes, &varProtectUserEventWebhook); err == nil {
		*o = ProtectUserEventWebhook(varProtectUserEventWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "event_id")
		delete(additionalProperties, "event_type")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProtectUserEventWebhook struct {
	value *ProtectUserEventWebhook
	isSet bool
}

func (v NullableProtectUserEventWebhook) Get() *ProtectUserEventWebhook {
	return v.value
}

func (v *NullableProtectUserEventWebhook) Set(val *ProtectUserEventWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectUserEventWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectUserEventWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectUserEventWebhook(val *ProtectUserEventWebhook) *NullableProtectUserEventWebhook {
	return &NullableProtectUserEventWebhook{value: val, isSet: true}
}

func (v NullableProtectUserEventWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectUserEventWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


