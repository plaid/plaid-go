/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferLedgerDistributeRequest Defines the request schema for `/transfer/ledger/distribute`
type TransferLedgerDistributeRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The Ledger to pull money from.
	FromLedgerId string `json:"from_ledger_id"`
	// The Ledger to credit money to.
	ToLedgerId string `json:"to_ledger_id"`
	// The amount to move (decimal string with two digits of precision e.g. \"10.00\"). Amount must be positive.
	Amount string `json:"amount"`
	// A unique key provided by the client, per unique ledger distribute. Maximum of 50 characters.  The API supports idempotency for safely retrying the request without accidentally performing the same operation twice. For example, if a request to create a ledger distribute fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single distribute is created.
	IdempotencyKey string `json:"idempotency_key"`
	// An optional description for the ledger distribute operation.
	Description *string `json:"description,omitempty"`
}

// NewTransferLedgerDistributeRequest instantiates a new TransferLedgerDistributeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferLedgerDistributeRequest(fromLedgerId string, toLedgerId string, amount string, idempotencyKey string) *TransferLedgerDistributeRequest {
	this := TransferLedgerDistributeRequest{}
	this.FromLedgerId = fromLedgerId
	this.ToLedgerId = toLedgerId
	this.Amount = amount
	this.IdempotencyKey = idempotencyKey
	return &this
}

// NewTransferLedgerDistributeRequestWithDefaults instantiates a new TransferLedgerDistributeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferLedgerDistributeRequestWithDefaults() *TransferLedgerDistributeRequest {
	this := TransferLedgerDistributeRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *TransferLedgerDistributeRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferLedgerDistributeRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *TransferLedgerDistributeRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *TransferLedgerDistributeRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *TransferLedgerDistributeRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferLedgerDistributeRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *TransferLedgerDistributeRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *TransferLedgerDistributeRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetFromLedgerId returns the FromLedgerId field value
func (o *TransferLedgerDistributeRequest) GetFromLedgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromLedgerId
}

// GetFromLedgerIdOk returns a tuple with the FromLedgerId field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerDistributeRequest) GetFromLedgerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FromLedgerId, true
}

// SetFromLedgerId sets field value
func (o *TransferLedgerDistributeRequest) SetFromLedgerId(v string) {
	o.FromLedgerId = v
}

// GetToLedgerId returns the ToLedgerId field value
func (o *TransferLedgerDistributeRequest) GetToLedgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToLedgerId
}

// GetToLedgerIdOk returns a tuple with the ToLedgerId field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerDistributeRequest) GetToLedgerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ToLedgerId, true
}

// SetToLedgerId sets field value
func (o *TransferLedgerDistributeRequest) SetToLedgerId(v string) {
	o.ToLedgerId = v
}

// GetAmount returns the Amount field value
func (o *TransferLedgerDistributeRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerDistributeRequest) GetAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransferLedgerDistributeRequest) SetAmount(v string) {
	o.Amount = v
}

// GetIdempotencyKey returns the IdempotencyKey field value
func (o *TransferLedgerDistributeRequest) GetIdempotencyKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdempotencyKey
}

// GetIdempotencyKeyOk returns a tuple with the IdempotencyKey field value
// and a boolean to check if the value has been set.
func (o *TransferLedgerDistributeRequest) GetIdempotencyKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IdempotencyKey, true
}

// SetIdempotencyKey sets field value
func (o *TransferLedgerDistributeRequest) SetIdempotencyKey(v string) {
	o.IdempotencyKey = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TransferLedgerDistributeRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferLedgerDistributeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TransferLedgerDistributeRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TransferLedgerDistributeRequest) SetDescription(v string) {
	o.Description = &v
}

func (o TransferLedgerDistributeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["from_ledger_id"] = o.FromLedgerId
	}
	if true {
		toSerialize["to_ledger_id"] = o.ToLedgerId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["idempotency_key"] = o.IdempotencyKey
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableTransferLedgerDistributeRequest struct {
	value *TransferLedgerDistributeRequest
	isSet bool
}

func (v NullableTransferLedgerDistributeRequest) Get() *TransferLedgerDistributeRequest {
	return v.value
}

func (v *NullableTransferLedgerDistributeRequest) Set(val *TransferLedgerDistributeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferLedgerDistributeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferLedgerDistributeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferLedgerDistributeRequest(val *TransferLedgerDistributeRequest) *NullableTransferLedgerDistributeRequest {
	return &NullableTransferLedgerDistributeRequest{value: val, isSet: true}
}

func (v NullableTransferLedgerDistributeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferLedgerDistributeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


