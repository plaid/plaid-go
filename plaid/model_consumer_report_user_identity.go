/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.410.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ConsumerReportUserIdentity ConsumerReportUserIdentity defines the user identity data collected for consumer report purpose. This field is required to be set if you later use the created user for consumer report purpose.
type ConsumerReportUserIdentity struct {
	// The user's first name
	FirstName string `json:"first_name"`
	// The user's last name
	LastName string `json:"last_name"`
	// The user's phone numbers
	PhoneNumbers []string `json:"phone_numbers"`
	// The user's emails
	Emails []string `json:"emails"`
	PrimaryAddress AddressData `json:"primary_address"`
	AdditionalProperties map[string]interface{}
}

type _ConsumerReportUserIdentity ConsumerReportUserIdentity

// NewConsumerReportUserIdentity instantiates a new ConsumerReportUserIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumerReportUserIdentity(firstName string, lastName string, phoneNumbers []string, emails []string, primaryAddress AddressData) *ConsumerReportUserIdentity {
	this := ConsumerReportUserIdentity{}
	this.FirstName = firstName
	this.LastName = lastName
	this.PhoneNumbers = phoneNumbers
	this.Emails = emails
	this.PrimaryAddress = primaryAddress
	return &this
}

// NewConsumerReportUserIdentityWithDefaults instantiates a new ConsumerReportUserIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumerReportUserIdentityWithDefaults() *ConsumerReportUserIdentity {
	this := ConsumerReportUserIdentity{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *ConsumerReportUserIdentity) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *ConsumerReportUserIdentity) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *ConsumerReportUserIdentity) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *ConsumerReportUserIdentity) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *ConsumerReportUserIdentity) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *ConsumerReportUserIdentity) SetLastName(v string) {
	o.LastName = v
}

// GetPhoneNumbers returns the PhoneNumbers field value
func (o *ConsumerReportUserIdentity) GetPhoneNumbers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value
// and a boolean to check if the value has been set.
func (o *ConsumerReportUserIdentity) GetPhoneNumbersOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PhoneNumbers, true
}

// SetPhoneNumbers sets field value
func (o *ConsumerReportUserIdentity) SetPhoneNumbers(v []string) {
	o.PhoneNumbers = v
}

// GetEmails returns the Emails field value
func (o *ConsumerReportUserIdentity) GetEmails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *ConsumerReportUserIdentity) GetEmailsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Emails, true
}

// SetEmails sets field value
func (o *ConsumerReportUserIdentity) SetEmails(v []string) {
	o.Emails = v
}

// GetPrimaryAddress returns the PrimaryAddress field value
func (o *ConsumerReportUserIdentity) GetPrimaryAddress() AddressData {
	if o == nil {
		var ret AddressData
		return ret
	}

	return o.PrimaryAddress
}

// GetPrimaryAddressOk returns a tuple with the PrimaryAddress field value
// and a boolean to check if the value has been set.
func (o *ConsumerReportUserIdentity) GetPrimaryAddressOk() (*AddressData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PrimaryAddress, true
}

// SetPrimaryAddress sets field value
func (o *ConsumerReportUserIdentity) SetPrimaryAddress(v AddressData) {
	o.PrimaryAddress = v
}

func (o ConsumerReportUserIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["first_name"] = o.FirstName
	}
	if true {
		toSerialize["last_name"] = o.LastName
	}
	if true {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	if true {
		toSerialize["emails"] = o.Emails
	}
	if true {
		toSerialize["primary_address"] = o.PrimaryAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ConsumerReportUserIdentity) UnmarshalJSON(bytes []byte) (err error) {
	varConsumerReportUserIdentity := _ConsumerReportUserIdentity{}

	if err = json.Unmarshal(bytes, &varConsumerReportUserIdentity); err == nil {
		*o = ConsumerReportUserIdentity(varConsumerReportUserIdentity)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "first_name")
		delete(additionalProperties, "last_name")
		delete(additionalProperties, "phone_numbers")
		delete(additionalProperties, "emails")
		delete(additionalProperties, "primary_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConsumerReportUserIdentity struct {
	value *ConsumerReportUserIdentity
	isSet bool
}

func (v NullableConsumerReportUserIdentity) Get() *ConsumerReportUserIdentity {
	return v.value
}

func (v *NullableConsumerReportUserIdentity) Set(val *ConsumerReportUserIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumerReportUserIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumerReportUserIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumerReportUserIdentity(val *ConsumerReportUserIdentity) *NullableConsumerReportUserIdentity {
	return &NullableConsumerReportUserIdentity{value: val, isSet: true}
}

func (v NullableConsumerReportUserIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumerReportUserIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


