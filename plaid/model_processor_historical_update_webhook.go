/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ProcessorHistoricalUpdateWebhook This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).  Fired when an Item's historical transaction pull is completed and Plaid has prepared as much historical transaction data as possible for the Item. Once this webhook has been fired, transaction data beyond the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.  This webhook is intended for use with `/processor/transactions/get`; if you are using the newer `/processor/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
type ProcessorHistoricalUpdateWebhook struct {
	// `TRANSACTIONS`
	WebhookType string `json:"webhook_type"`
	// `HISTORICAL_UPDATE`
	WebhookCode string `json:"webhook_code"`
	Error NullablePlaidError `json:"error,omitempty"`
	// The number of new, unfetched transactions available
	NewTransactions float32 `json:"new_transactions"`
	// The ID of the account.
	AccountId string `json:"account_id"`
	Environment WebhookEnvironmentValues `json:"environment"`
	AdditionalProperties map[string]interface{}
}

type _ProcessorHistoricalUpdateWebhook ProcessorHistoricalUpdateWebhook

// NewProcessorHistoricalUpdateWebhook instantiates a new ProcessorHistoricalUpdateWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessorHistoricalUpdateWebhook(webhookType string, webhookCode string, newTransactions float32, accountId string, environment WebhookEnvironmentValues) *ProcessorHistoricalUpdateWebhook {
	this := ProcessorHistoricalUpdateWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.NewTransactions = newTransactions
	this.AccountId = accountId
	this.Environment = environment
	return &this
}

// NewProcessorHistoricalUpdateWebhookWithDefaults instantiates a new ProcessorHistoricalUpdateWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessorHistoricalUpdateWebhookWithDefaults() *ProcessorHistoricalUpdateWebhook {
	this := ProcessorHistoricalUpdateWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *ProcessorHistoricalUpdateWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *ProcessorHistoricalUpdateWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *ProcessorHistoricalUpdateWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *ProcessorHistoricalUpdateWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *ProcessorHistoricalUpdateWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *ProcessorHistoricalUpdateWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProcessorHistoricalUpdateWebhook) GetError() PlaidError {
	if o == nil || o.Error.Get() == nil {
		var ret PlaidError
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessorHistoricalUpdateWebhook) GetErrorOk() (*PlaidError, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *ProcessorHistoricalUpdateWebhook) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullablePlaidError and assigns it to the Error field.
func (o *ProcessorHistoricalUpdateWebhook) SetError(v PlaidError) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *ProcessorHistoricalUpdateWebhook) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *ProcessorHistoricalUpdateWebhook) UnsetError() {
	o.Error.Unset()
}

// GetNewTransactions returns the NewTransactions field value
func (o *ProcessorHistoricalUpdateWebhook) GetNewTransactions() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NewTransactions
}

// GetNewTransactionsOk returns a tuple with the NewTransactions field value
// and a boolean to check if the value has been set.
func (o *ProcessorHistoricalUpdateWebhook) GetNewTransactionsOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NewTransactions, true
}

// SetNewTransactions sets field value
func (o *ProcessorHistoricalUpdateWebhook) SetNewTransactions(v float32) {
	o.NewTransactions = v
}

// GetAccountId returns the AccountId field value
func (o *ProcessorHistoricalUpdateWebhook) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *ProcessorHistoricalUpdateWebhook) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *ProcessorHistoricalUpdateWebhook) SetAccountId(v string) {
	o.AccountId = v
}

// GetEnvironment returns the Environment field value
func (o *ProcessorHistoricalUpdateWebhook) GetEnvironment() WebhookEnvironmentValues {
	if o == nil {
		var ret WebhookEnvironmentValues
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *ProcessorHistoricalUpdateWebhook) GetEnvironmentOk() (*WebhookEnvironmentValues, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *ProcessorHistoricalUpdateWebhook) SetEnvironment(v WebhookEnvironmentValues) {
	o.Environment = v
}

func (o ProcessorHistoricalUpdateWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if true {
		toSerialize["new_transactions"] = o.NewTransactions
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["environment"] = o.Environment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProcessorHistoricalUpdateWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varProcessorHistoricalUpdateWebhook := _ProcessorHistoricalUpdateWebhook{}

	if err = json.Unmarshal(bytes, &varProcessorHistoricalUpdateWebhook); err == nil {
		*o = ProcessorHistoricalUpdateWebhook(varProcessorHistoricalUpdateWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "error")
		delete(additionalProperties, "new_transactions")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProcessorHistoricalUpdateWebhook struct {
	value *ProcessorHistoricalUpdateWebhook
	isSet bool
}

func (v NullableProcessorHistoricalUpdateWebhook) Get() *ProcessorHistoricalUpdateWebhook {
	return v.value
}

func (v *NullableProcessorHistoricalUpdateWebhook) Set(val *ProcessorHistoricalUpdateWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessorHistoricalUpdateWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessorHistoricalUpdateWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessorHistoricalUpdateWebhook(val *ProcessorHistoricalUpdateWebhook) *NullableProcessorHistoricalUpdateWebhook {
	return &NullableProcessorHistoricalUpdateWebhook{value: val, isSet: true}
}

func (v NullableProcessorHistoricalUpdateWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessorHistoricalUpdateWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


