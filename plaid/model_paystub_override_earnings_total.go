/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PaystubOverrideEarningsTotal An object representing both the current pay period and year to date amount for an earning category.
type PaystubOverrideEarningsTotal struct {
	// Total number of hours worked for this pay period
	Hours NullableFloat32 `json:"hours,omitempty"`
	// The ISO-4217 currency code of the line item
	Currency NullableString `json:"currency,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaystubOverrideEarningsTotal PaystubOverrideEarningsTotal

// NewPaystubOverrideEarningsTotal instantiates a new PaystubOverrideEarningsTotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaystubOverrideEarningsTotal() *PaystubOverrideEarningsTotal {
	this := PaystubOverrideEarningsTotal{}
	return &this
}

// NewPaystubOverrideEarningsTotalWithDefaults instantiates a new PaystubOverrideEarningsTotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaystubOverrideEarningsTotalWithDefaults() *PaystubOverrideEarningsTotal {
	this := PaystubOverrideEarningsTotal{}
	return &this
}

// GetHours returns the Hours field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaystubOverrideEarningsTotal) GetHours() float32 {
	if o == nil || o.Hours.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Hours.Get()
}

// GetHoursOk returns a tuple with the Hours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaystubOverrideEarningsTotal) GetHoursOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Hours.Get(), o.Hours.IsSet()
}

// HasHours returns a boolean if a field has been set.
func (o *PaystubOverrideEarningsTotal) HasHours() bool {
	if o != nil && o.Hours.IsSet() {
		return true
	}

	return false
}

// SetHours gets a reference to the given NullableFloat32 and assigns it to the Hours field.
func (o *PaystubOverrideEarningsTotal) SetHours(v float32) {
	o.Hours.Set(&v)
}
// SetHoursNil sets the value for Hours to be an explicit nil
func (o *PaystubOverrideEarningsTotal) SetHoursNil() {
	o.Hours.Set(nil)
}

// UnsetHours ensures that no value is present for Hours, not even an explicit nil
func (o *PaystubOverrideEarningsTotal) UnsetHours() {
	o.Hours.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaystubOverrideEarningsTotal) GetCurrency() string {
	if o == nil || o.Currency.Get() == nil {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaystubOverrideEarningsTotal) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaystubOverrideEarningsTotal) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *PaystubOverrideEarningsTotal) SetCurrency(v string) {
	o.Currency.Set(&v)
}
// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *PaystubOverrideEarningsTotal) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *PaystubOverrideEarningsTotal) UnsetCurrency() {
	o.Currency.Unset()
}

func (o PaystubOverrideEarningsTotal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hours.IsSet() {
		toSerialize["hours"] = o.Hours.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PaystubOverrideEarningsTotal) UnmarshalJSON(bytes []byte) (err error) {
	varPaystubOverrideEarningsTotal := _PaystubOverrideEarningsTotal{}

	if err = json.Unmarshal(bytes, &varPaystubOverrideEarningsTotal); err == nil {
		*o = PaystubOverrideEarningsTotal(varPaystubOverrideEarningsTotal)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "hours")
		delete(additionalProperties, "currency")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaystubOverrideEarningsTotal struct {
	value *PaystubOverrideEarningsTotal
	isSet bool
}

func (v NullablePaystubOverrideEarningsTotal) Get() *PaystubOverrideEarningsTotal {
	return v.value
}

func (v *NullablePaystubOverrideEarningsTotal) Set(val *PaystubOverrideEarningsTotal) {
	v.value = val
	v.isSet = true
}

func (v NullablePaystubOverrideEarningsTotal) IsSet() bool {
	return v.isSet
}

func (v *NullablePaystubOverrideEarningsTotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaystubOverrideEarningsTotal(val *PaystubOverrideEarningsTotal) *NullablePaystubOverrideEarningsTotal {
	return &NullablePaystubOverrideEarningsTotal{value: val, isSet: true}
}

func (v NullablePaystubOverrideEarningsTotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaystubOverrideEarningsTotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


