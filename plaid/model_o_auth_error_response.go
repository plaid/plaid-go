/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// OAuthErrorResponse OAuth error response
type OAuthErrorResponse struct {
	Error *OAuthErrorCode `json:"error,omitempty"`
	// A human-readable description of the error
	ErrorDescription *string `json:"error_description,omitempty"`
	// A URI identifying the specific error
	ErrorUri *string `json:"error_uri,omitempty"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _OAuthErrorResponse OAuthErrorResponse

// NewOAuthErrorResponse instantiates a new OAuthErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthErrorResponse(requestId string) *OAuthErrorResponse {
	this := OAuthErrorResponse{}
	this.RequestId = requestId
	return &this
}

// NewOAuthErrorResponseWithDefaults instantiates a new OAuthErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthErrorResponseWithDefaults() *OAuthErrorResponse {
	this := OAuthErrorResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *OAuthErrorResponse) GetError() OAuthErrorCode {
	if o == nil || o.Error == nil {
		var ret OAuthErrorCode
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthErrorResponse) GetErrorOk() (*OAuthErrorCode, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *OAuthErrorResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given OAuthErrorCode and assigns it to the Error field.
func (o *OAuthErrorResponse) SetError(v OAuthErrorCode) {
	o.Error = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *OAuthErrorResponse) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthErrorResponse) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *OAuthErrorResponse) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *OAuthErrorResponse) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetErrorUri returns the ErrorUri field value if set, zero value otherwise.
func (o *OAuthErrorResponse) GetErrorUri() string {
	if o == nil || o.ErrorUri == nil {
		var ret string
		return ret
	}
	return *o.ErrorUri
}

// GetErrorUriOk returns a tuple with the ErrorUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthErrorResponse) GetErrorUriOk() (*string, bool) {
	if o == nil || o.ErrorUri == nil {
		return nil, false
	}
	return o.ErrorUri, true
}

// HasErrorUri returns a boolean if a field has been set.
func (o *OAuthErrorResponse) HasErrorUri() bool {
	if o != nil && o.ErrorUri != nil {
		return true
	}

	return false
}

// SetErrorUri gets a reference to the given string and assigns it to the ErrorUri field.
func (o *OAuthErrorResponse) SetErrorUri(v string) {
	o.ErrorUri = &v
}

// GetRequestId returns the RequestId field value
func (o *OAuthErrorResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *OAuthErrorResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *OAuthErrorResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o OAuthErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.ErrorDescription != nil {
		toSerialize["error_description"] = o.ErrorDescription
	}
	if o.ErrorUri != nil {
		toSerialize["error_uri"] = o.ErrorUri
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OAuthErrorResponse) UnmarshalJSON(bytes []byte) (err error) {
	varOAuthErrorResponse := _OAuthErrorResponse{}

	if err = json.Unmarshal(bytes, &varOAuthErrorResponse); err == nil {
		*o = OAuthErrorResponse(varOAuthErrorResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "error")
		delete(additionalProperties, "error_description")
		delete(additionalProperties, "error_uri")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOAuthErrorResponse struct {
	value *OAuthErrorResponse
	isSet bool
}

func (v NullableOAuthErrorResponse) Get() *OAuthErrorResponse {
	return v.value
}

func (v *NullableOAuthErrorResponse) Set(val *OAuthErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthErrorResponse(val *OAuthErrorResponse) *NullableOAuthErrorResponse {
	return &NullableOAuthErrorResponse{value: val, isSet: true}
}

func (v NullableOAuthErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


