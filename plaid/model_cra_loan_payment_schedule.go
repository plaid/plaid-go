/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// CraLoanPaymentSchedule The frequency of a loan's payment schedule. `BIWEEKLY` represents one payment every two weeks.
type CraLoanPaymentSchedule string

var _ = fmt.Printf

// List of CraLoanPaymentSchedule
const (
	CRALOANPAYMENTSCHEDULE_DAILY CraLoanPaymentSchedule = "DAILY"
	CRALOANPAYMENTSCHEDULE_WEEKLY CraLoanPaymentSchedule = "WEEKLY"
	CRALOANPAYMENTSCHEDULE_BIWEEKLY CraLoanPaymentSchedule = "BIWEEKLY"
	CRALOANPAYMENTSCHEDULE_MONTHLY CraLoanPaymentSchedule = "MONTHLY"
	CRALOANPAYMENTSCHEDULE_QUARTERLY CraLoanPaymentSchedule = "QUARTERLY"
	CRALOANPAYMENTSCHEDULE_ANNUALLY CraLoanPaymentSchedule = "ANNUALLY"
	CRALOANPAYMENTSCHEDULE_OTHER CraLoanPaymentSchedule = "OTHER"
)

var allowedCraLoanPaymentScheduleEnumValues = []CraLoanPaymentSchedule{
	"DAILY",
	"WEEKLY",
	"BIWEEKLY",
	"MONTHLY",
	"QUARTERLY",
	"ANNUALLY",
	"OTHER",
}

func (v *CraLoanPaymentSchedule) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := CraLoanPaymentSchedule(value)


	*v = enumTypeValue
	return nil
}

// NewCraLoanPaymentScheduleFromValue returns a pointer to a valid CraLoanPaymentSchedule
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCraLoanPaymentScheduleFromValue(v string) (*CraLoanPaymentSchedule, error) {
	ev := CraLoanPaymentSchedule(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CraLoanPaymentSchedule) IsValid() bool {
	for _, existing := range allowedCraLoanPaymentScheduleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CraLoanPaymentSchedule value
func (v CraLoanPaymentSchedule) Ptr() *CraLoanPaymentSchedule {
	return &v
}

type NullableCraLoanPaymentSchedule struct {
	value *CraLoanPaymentSchedule
	isSet bool
}

func (v NullableCraLoanPaymentSchedule) Get() *CraLoanPaymentSchedule {
	return v.value
}

func (v *NullableCraLoanPaymentSchedule) Set(val *CraLoanPaymentSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableCraLoanPaymentSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableCraLoanPaymentSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraLoanPaymentSchedule(val *CraLoanPaymentSchedule) *NullableCraLoanPaymentSchedule {
	return &NullableCraLoanPaymentSchedule{value: val, isSet: true}
}

func (v NullableCraLoanPaymentSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraLoanPaymentSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

