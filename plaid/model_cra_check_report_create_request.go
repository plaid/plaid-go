/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.627.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraCheckReportCreateRequest CraCheckReportCreateRequest defines the request schema for `/cra/check_report/create`.
type CraCheckReportCreateRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The user token associated with the User data is being requested for.
	UserToken string `json:"user_token"`
	// The destination URL to which webhooks will be sent 
	Webhook string `json:"webhook"`
	// The number of days of data to request for the report. Default value is 365; maximum is 731; minimum is 180. If a value lower than 180 is provided, a minimum of 180 days of history will be requested.
	DaysRequested int32 `json:"days_requested"`
	// The minimum number of days of data required for the report to be successfully generated.
	DaysRequired *int32 `json:"days_required,omitempty"`
	// Client-generated identifier, which can be used by lenders to track loan applications.
	ClientReportId NullableString `json:"client_report_id,omitempty"`
	// Specifies a list of products that will be eagerly generated when creating the report (in addition to the Base Report, which is always eagerly generated). These products will be made available before a success webhook is sent. Use this option to minimize response latency for product `/get` endpoints. Note that specifying `cra_partner_insights` in this field will trigger a billable event. Other products are not billed until the respective reports are fetched via product-specific `/get` endpoints.
	Products []Products `json:"products,omitempty"`
	BaseReport NullableCraCheckReportCreateBaseReportOptions `json:"base_report,omitempty"`
	CashflowInsights NullableCraCheckReportCashflowInsightsGetOptions `json:"cashflow_insights,omitempty"`
	PartnerInsights NullableCraCheckReportPartnerInsightsGetOptions `json:"partner_insights,omitempty"`
	ConsumerReportPermissiblePurpose ConsumerReportPermissiblePurpose `json:"consumer_report_permissible_purpose"`
}

// NewCraCheckReportCreateRequest instantiates a new CraCheckReportCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraCheckReportCreateRequest(userToken string, webhook string, daysRequested int32, consumerReportPermissiblePurpose ConsumerReportPermissiblePurpose) *CraCheckReportCreateRequest {
	this := CraCheckReportCreateRequest{}
	this.UserToken = userToken
	this.Webhook = webhook
	this.DaysRequested = daysRequested
	this.ConsumerReportPermissiblePurpose = consumerReportPermissiblePurpose
	return &this
}

// NewCraCheckReportCreateRequestWithDefaults instantiates a new CraCheckReportCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraCheckReportCreateRequestWithDefaults() *CraCheckReportCreateRequest {
	this := CraCheckReportCreateRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CraCheckReportCreateRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraCheckReportCreateRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CraCheckReportCreateRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *CraCheckReportCreateRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraCheckReportCreateRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *CraCheckReportCreateRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetUserToken returns the UserToken field value
func (o *CraCheckReportCreateRequest) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *CraCheckReportCreateRequest) GetUserTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *CraCheckReportCreateRequest) SetUserToken(v string) {
	o.UserToken = v
}

// GetWebhook returns the Webhook field value
func (o *CraCheckReportCreateRequest) GetWebhook() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value
// and a boolean to check if the value has been set.
func (o *CraCheckReportCreateRequest) GetWebhookOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Webhook, true
}

// SetWebhook sets field value
func (o *CraCheckReportCreateRequest) SetWebhook(v string) {
	o.Webhook = v
}

// GetDaysRequested returns the DaysRequested field value
func (o *CraCheckReportCreateRequest) GetDaysRequested() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DaysRequested
}

// GetDaysRequestedOk returns a tuple with the DaysRequested field value
// and a boolean to check if the value has been set.
func (o *CraCheckReportCreateRequest) GetDaysRequestedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DaysRequested, true
}

// SetDaysRequested sets field value
func (o *CraCheckReportCreateRequest) SetDaysRequested(v int32) {
	o.DaysRequested = v
}

// GetDaysRequired returns the DaysRequired field value if set, zero value otherwise.
func (o *CraCheckReportCreateRequest) GetDaysRequired() int32 {
	if o == nil || o.DaysRequired == nil {
		var ret int32
		return ret
	}
	return *o.DaysRequired
}

// GetDaysRequiredOk returns a tuple with the DaysRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraCheckReportCreateRequest) GetDaysRequiredOk() (*int32, bool) {
	if o == nil || o.DaysRequired == nil {
		return nil, false
	}
	return o.DaysRequired, true
}

// HasDaysRequired returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasDaysRequired() bool {
	if o != nil && o.DaysRequired != nil {
		return true
	}

	return false
}

// SetDaysRequired gets a reference to the given int32 and assigns it to the DaysRequired field.
func (o *CraCheckReportCreateRequest) SetDaysRequired(v int32) {
	o.DaysRequired = &v
}

// GetClientReportId returns the ClientReportId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraCheckReportCreateRequest) GetClientReportId() string {
	if o == nil || o.ClientReportId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientReportId.Get()
}

// GetClientReportIdOk returns a tuple with the ClientReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraCheckReportCreateRequest) GetClientReportIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientReportId.Get(), o.ClientReportId.IsSet()
}

// HasClientReportId returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasClientReportId() bool {
	if o != nil && o.ClientReportId.IsSet() {
		return true
	}

	return false
}

// SetClientReportId gets a reference to the given NullableString and assigns it to the ClientReportId field.
func (o *CraCheckReportCreateRequest) SetClientReportId(v string) {
	o.ClientReportId.Set(&v)
}
// SetClientReportIdNil sets the value for ClientReportId to be an explicit nil
func (o *CraCheckReportCreateRequest) SetClientReportIdNil() {
	o.ClientReportId.Set(nil)
}

// UnsetClientReportId ensures that no value is present for ClientReportId, not even an explicit nil
func (o *CraCheckReportCreateRequest) UnsetClientReportId() {
	o.ClientReportId.Unset()
}

// GetProducts returns the Products field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraCheckReportCreateRequest) GetProducts() []Products {
	if o == nil  {
		var ret []Products
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraCheckReportCreateRequest) GetProductsOk() (*[]Products, bool) {
	if o == nil || o.Products == nil {
		return nil, false
	}
	return &o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasProducts() bool {
	if o != nil && o.Products != nil {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []Products and assigns it to the Products field.
func (o *CraCheckReportCreateRequest) SetProducts(v []Products) {
	o.Products = v
}

// GetBaseReport returns the BaseReport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraCheckReportCreateRequest) GetBaseReport() CraCheckReportCreateBaseReportOptions {
	if o == nil || o.BaseReport.Get() == nil {
		var ret CraCheckReportCreateBaseReportOptions
		return ret
	}
	return *o.BaseReport.Get()
}

// GetBaseReportOk returns a tuple with the BaseReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraCheckReportCreateRequest) GetBaseReportOk() (*CraCheckReportCreateBaseReportOptions, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BaseReport.Get(), o.BaseReport.IsSet()
}

// HasBaseReport returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasBaseReport() bool {
	if o != nil && o.BaseReport.IsSet() {
		return true
	}

	return false
}

// SetBaseReport gets a reference to the given NullableCraCheckReportCreateBaseReportOptions and assigns it to the BaseReport field.
func (o *CraCheckReportCreateRequest) SetBaseReport(v CraCheckReportCreateBaseReportOptions) {
	o.BaseReport.Set(&v)
}
// SetBaseReportNil sets the value for BaseReport to be an explicit nil
func (o *CraCheckReportCreateRequest) SetBaseReportNil() {
	o.BaseReport.Set(nil)
}

// UnsetBaseReport ensures that no value is present for BaseReport, not even an explicit nil
func (o *CraCheckReportCreateRequest) UnsetBaseReport() {
	o.BaseReport.Unset()
}

// GetCashflowInsights returns the CashflowInsights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraCheckReportCreateRequest) GetCashflowInsights() CraCheckReportCashflowInsightsGetOptions {
	if o == nil || o.CashflowInsights.Get() == nil {
		var ret CraCheckReportCashflowInsightsGetOptions
		return ret
	}
	return *o.CashflowInsights.Get()
}

// GetCashflowInsightsOk returns a tuple with the CashflowInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraCheckReportCreateRequest) GetCashflowInsightsOk() (*CraCheckReportCashflowInsightsGetOptions, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CashflowInsights.Get(), o.CashflowInsights.IsSet()
}

// HasCashflowInsights returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasCashflowInsights() bool {
	if o != nil && o.CashflowInsights.IsSet() {
		return true
	}

	return false
}

// SetCashflowInsights gets a reference to the given NullableCraCheckReportCashflowInsightsGetOptions and assigns it to the CashflowInsights field.
func (o *CraCheckReportCreateRequest) SetCashflowInsights(v CraCheckReportCashflowInsightsGetOptions) {
	o.CashflowInsights.Set(&v)
}
// SetCashflowInsightsNil sets the value for CashflowInsights to be an explicit nil
func (o *CraCheckReportCreateRequest) SetCashflowInsightsNil() {
	o.CashflowInsights.Set(nil)
}

// UnsetCashflowInsights ensures that no value is present for CashflowInsights, not even an explicit nil
func (o *CraCheckReportCreateRequest) UnsetCashflowInsights() {
	o.CashflowInsights.Unset()
}

// GetPartnerInsights returns the PartnerInsights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraCheckReportCreateRequest) GetPartnerInsights() CraCheckReportPartnerInsightsGetOptions {
	if o == nil || o.PartnerInsights.Get() == nil {
		var ret CraCheckReportPartnerInsightsGetOptions
		return ret
	}
	return *o.PartnerInsights.Get()
}

// GetPartnerInsightsOk returns a tuple with the PartnerInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraCheckReportCreateRequest) GetPartnerInsightsOk() (*CraCheckReportPartnerInsightsGetOptions, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerInsights.Get(), o.PartnerInsights.IsSet()
}

// HasPartnerInsights returns a boolean if a field has been set.
func (o *CraCheckReportCreateRequest) HasPartnerInsights() bool {
	if o != nil && o.PartnerInsights.IsSet() {
		return true
	}

	return false
}

// SetPartnerInsights gets a reference to the given NullableCraCheckReportPartnerInsightsGetOptions and assigns it to the PartnerInsights field.
func (o *CraCheckReportCreateRequest) SetPartnerInsights(v CraCheckReportPartnerInsightsGetOptions) {
	o.PartnerInsights.Set(&v)
}
// SetPartnerInsightsNil sets the value for PartnerInsights to be an explicit nil
func (o *CraCheckReportCreateRequest) SetPartnerInsightsNil() {
	o.PartnerInsights.Set(nil)
}

// UnsetPartnerInsights ensures that no value is present for PartnerInsights, not even an explicit nil
func (o *CraCheckReportCreateRequest) UnsetPartnerInsights() {
	o.PartnerInsights.Unset()
}

// GetConsumerReportPermissiblePurpose returns the ConsumerReportPermissiblePurpose field value
func (o *CraCheckReportCreateRequest) GetConsumerReportPermissiblePurpose() ConsumerReportPermissiblePurpose {
	if o == nil {
		var ret ConsumerReportPermissiblePurpose
		return ret
	}

	return o.ConsumerReportPermissiblePurpose
}

// GetConsumerReportPermissiblePurposeOk returns a tuple with the ConsumerReportPermissiblePurpose field value
// and a boolean to check if the value has been set.
func (o *CraCheckReportCreateRequest) GetConsumerReportPermissiblePurposeOk() (*ConsumerReportPermissiblePurpose, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConsumerReportPermissiblePurpose, true
}

// SetConsumerReportPermissiblePurpose sets field value
func (o *CraCheckReportCreateRequest) SetConsumerReportPermissiblePurpose(v ConsumerReportPermissiblePurpose) {
	o.ConsumerReportPermissiblePurpose = v
}

func (o CraCheckReportCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["user_token"] = o.UserToken
	}
	if true {
		toSerialize["webhook"] = o.Webhook
	}
	if true {
		toSerialize["days_requested"] = o.DaysRequested
	}
	if o.DaysRequired != nil {
		toSerialize["days_required"] = o.DaysRequired
	}
	if o.ClientReportId.IsSet() {
		toSerialize["client_report_id"] = o.ClientReportId.Get()
	}
	if o.Products != nil {
		toSerialize["products"] = o.Products
	}
	if o.BaseReport.IsSet() {
		toSerialize["base_report"] = o.BaseReport.Get()
	}
	if o.CashflowInsights.IsSet() {
		toSerialize["cashflow_insights"] = o.CashflowInsights.Get()
	}
	if o.PartnerInsights.IsSet() {
		toSerialize["partner_insights"] = o.PartnerInsights.Get()
	}
	if true {
		toSerialize["consumer_report_permissible_purpose"] = o.ConsumerReportPermissiblePurpose
	}
	return json.Marshal(toSerialize)
}

type NullableCraCheckReportCreateRequest struct {
	value *CraCheckReportCreateRequest
	isSet bool
}

func (v NullableCraCheckReportCreateRequest) Get() *CraCheckReportCreateRequest {
	return v.value
}

func (v *NullableCraCheckReportCreateRequest) Set(val *CraCheckReportCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCraCheckReportCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCraCheckReportCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraCheckReportCreateRequest(val *CraCheckReportCreateRequest) *NullableCraCheckReportCreateRequest {
	return &NullableCraCheckReportCreateRequest{value: val, isSet: true}
}

func (v NullableCraCheckReportCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraCheckReportCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


