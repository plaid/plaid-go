/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.635.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BusinessAccountAllOf struct for BusinessAccountAllOf
type BusinessAccountAllOf struct {
	// Data returned by the financial institution about the account owner or owners. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution. Multiple owners on a single account will be represented in the same owner object, not in multiple owner objects within the array.
	Owners *[]Owner `json:"owners,omitempty"`
}

// NewBusinessAccountAllOf instantiates a new BusinessAccountAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessAccountAllOf() *BusinessAccountAllOf {
	this := BusinessAccountAllOf{}
	return &this
}

// NewBusinessAccountAllOfWithDefaults instantiates a new BusinessAccountAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessAccountAllOfWithDefaults() *BusinessAccountAllOf {
	this := BusinessAccountAllOf{}
	return &this
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *BusinessAccountAllOf) GetOwners() []Owner {
	if o == nil || o.Owners == nil {
		var ret []Owner
		return ret
	}
	return *o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessAccountAllOf) GetOwnersOk() (*[]Owner, bool) {
	if o == nil || o.Owners == nil {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *BusinessAccountAllOf) HasOwners() bool {
	if o != nil && o.Owners != nil {
		return true
	}

	return false
}

// SetOwners gets a reference to the given []Owner and assigns it to the Owners field.
func (o *BusinessAccountAllOf) SetOwners(v []Owner) {
	o.Owners = &v
}

func (o BusinessAccountAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Owners != nil {
		toSerialize["owners"] = o.Owners
	}
	return json.Marshal(toSerialize)
}

type NullableBusinessAccountAllOf struct {
	value *BusinessAccountAllOf
	isSet bool
}

func (v NullableBusinessAccountAllOf) Get() *BusinessAccountAllOf {
	return v.value
}

func (v *NullableBusinessAccountAllOf) Set(val *BusinessAccountAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessAccountAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessAccountAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessAccountAllOf(val *BusinessAccountAllOf) *NullableBusinessAccountAllOf {
	return &NullableBusinessAccountAllOf{value: val, isSet: true}
}

func (v NullableBusinessAccountAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessAccountAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


