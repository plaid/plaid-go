/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferCapabilitiesGetRfP Contains the supported service types in RfP
type TransferCapabilitiesGetRfP struct {
	// When `true`, the linked Item's institution supports RfP debit transfer.
	Debit *bool `json:"debit,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransferCapabilitiesGetRfP TransferCapabilitiesGetRfP

// NewTransferCapabilitiesGetRfP instantiates a new TransferCapabilitiesGetRfP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferCapabilitiesGetRfP() *TransferCapabilitiesGetRfP {
	this := TransferCapabilitiesGetRfP{}
	var debit bool = false
	this.Debit = &debit
	return &this
}

// NewTransferCapabilitiesGetRfPWithDefaults instantiates a new TransferCapabilitiesGetRfP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferCapabilitiesGetRfPWithDefaults() *TransferCapabilitiesGetRfP {
	this := TransferCapabilitiesGetRfP{}
	var debit bool = false
	this.Debit = &debit
	return &this
}

// GetDebit returns the Debit field value if set, zero value otherwise.
func (o *TransferCapabilitiesGetRfP) GetDebit() bool {
	if o == nil || o.Debit == nil {
		var ret bool
		return ret
	}
	return *o.Debit
}

// GetDebitOk returns a tuple with the Debit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferCapabilitiesGetRfP) GetDebitOk() (*bool, bool) {
	if o == nil || o.Debit == nil {
		return nil, false
	}
	return o.Debit, true
}

// HasDebit returns a boolean if a field has been set.
func (o *TransferCapabilitiesGetRfP) HasDebit() bool {
	if o != nil && o.Debit != nil {
		return true
	}

	return false
}

// SetDebit gets a reference to the given bool and assigns it to the Debit field.
func (o *TransferCapabilitiesGetRfP) SetDebit(v bool) {
	o.Debit = &v
}

func (o TransferCapabilitiesGetRfP) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Debit != nil {
		toSerialize["debit"] = o.Debit
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransferCapabilitiesGetRfP) UnmarshalJSON(bytes []byte) (err error) {
	varTransferCapabilitiesGetRfP := _TransferCapabilitiesGetRfP{}

	if err = json.Unmarshal(bytes, &varTransferCapabilitiesGetRfP); err == nil {
		*o = TransferCapabilitiesGetRfP(varTransferCapabilitiesGetRfP)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "debit")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransferCapabilitiesGetRfP struct {
	value *TransferCapabilitiesGetRfP
	isSet bool
}

func (v NullableTransferCapabilitiesGetRfP) Get() *TransferCapabilitiesGetRfP {
	return v.value
}

func (v *NullableTransferCapabilitiesGetRfP) Set(val *TransferCapabilitiesGetRfP) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferCapabilitiesGetRfP) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferCapabilitiesGetRfP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferCapabilitiesGetRfP(val *TransferCapabilitiesGetRfP) *NullableTransferCapabilitiesGetRfP {
	return &NullableTransferCapabilitiesGetRfP{value: val, isSet: true}
}

func (v NullableTransferCapabilitiesGetRfP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferCapabilitiesGetRfP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


