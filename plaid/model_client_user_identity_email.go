/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ClientUserIdentityEmail User email information.
type ClientUserIdentityEmail struct {
	// User's email.
	Data string `json:"data"`
	// Indicates whether this is the primary email for the User.
	Primary bool `json:"primary"`
}

// NewClientUserIdentityEmail instantiates a new ClientUserIdentityEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientUserIdentityEmail(data string, primary bool) *ClientUserIdentityEmail {
	this := ClientUserIdentityEmail{}
	this.Data = data
	this.Primary = primary
	return &this
}

// NewClientUserIdentityEmailWithDefaults instantiates a new ClientUserIdentityEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientUserIdentityEmailWithDefaults() *ClientUserIdentityEmail {
	this := ClientUserIdentityEmail{}
	return &this
}

// GetData returns the Data field value
func (o *ClientUserIdentityEmail) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityEmail) GetDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ClientUserIdentityEmail) SetData(v string) {
	o.Data = v
}

// GetPrimary returns the Primary field value
func (o *ClientUserIdentityEmail) GetPrimary() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value
// and a boolean to check if the value has been set.
func (o *ClientUserIdentityEmail) GetPrimaryOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Primary, true
}

// SetPrimary sets field value
func (o *ClientUserIdentityEmail) SetPrimary(v bool) {
	o.Primary = v
}

func (o ClientUserIdentityEmail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["primary"] = o.Primary
	}
	return json.Marshal(toSerialize)
}

type NullableClientUserIdentityEmail struct {
	value *ClientUserIdentityEmail
	isSet bool
}

func (v NullableClientUserIdentityEmail) Get() *ClientUserIdentityEmail {
	return v.value
}

func (v *NullableClientUserIdentityEmail) Set(val *ClientUserIdentityEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUserIdentityEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUserIdentityEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUserIdentityEmail(val *ClientUserIdentityEmail) *NullableClientUserIdentityEmail {
	return &NullableClientUserIdentityEmail{value: val, isSet: true}
}

func (v NullableClientUserIdentityEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUserIdentityEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


