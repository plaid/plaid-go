/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.379.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// RiskCheckBehaviorUserInteractionsLabel Field describing the overall user interaction signals of a behavior risk check. This value represents how familiar the user is with the personal data they provide, based on a number of signals that are collected during their session.  `genuine` indicates the user has high familiarity with the data they are providing, and that fraud is unlikely.  `neutral` indicates some signals are present in between `risky` and `genuine`, but there are not enough clear signals to determine an outcome.  `risky` indicates the user has low familiarity with the data they are providing, and that fraud is likely.  `no_data` indicates there is not sufficient information to give an accurate signal.
type RiskCheckBehaviorUserInteractionsLabel string

var _ = fmt.Printf

// List of RiskCheckBehaviorUserInteractionsLabel
const (
	RISKCHECKBEHAVIORUSERINTERACTIONSLABEL_GENUINE RiskCheckBehaviorUserInteractionsLabel = "genuine"
	RISKCHECKBEHAVIORUSERINTERACTIONSLABEL_NEUTRAL RiskCheckBehaviorUserInteractionsLabel = "neutral"
	RISKCHECKBEHAVIORUSERINTERACTIONSLABEL_RISKY RiskCheckBehaviorUserInteractionsLabel = "risky"
	RISKCHECKBEHAVIORUSERINTERACTIONSLABEL_NO_DATA RiskCheckBehaviorUserInteractionsLabel = "no_data"
)

var allowedRiskCheckBehaviorUserInteractionsLabelEnumValues = []RiskCheckBehaviorUserInteractionsLabel{
	"genuine",
	"neutral",
	"risky",
	"no_data",
}

func (v *RiskCheckBehaviorUserInteractionsLabel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := RiskCheckBehaviorUserInteractionsLabel(value)


	*v = enumTypeValue
	return nil
}

// NewRiskCheckBehaviorUserInteractionsLabelFromValue returns a pointer to a valid RiskCheckBehaviorUserInteractionsLabel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRiskCheckBehaviorUserInteractionsLabelFromValue(v string) (*RiskCheckBehaviorUserInteractionsLabel, error) {
	ev := RiskCheckBehaviorUserInteractionsLabel(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RiskCheckBehaviorUserInteractionsLabel) IsValid() bool {
	for _, existing := range allowedRiskCheckBehaviorUserInteractionsLabelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RiskCheckBehaviorUserInteractionsLabel value
func (v RiskCheckBehaviorUserInteractionsLabel) Ptr() *RiskCheckBehaviorUserInteractionsLabel {
	return &v
}

type NullableRiskCheckBehaviorUserInteractionsLabel struct {
	value *RiskCheckBehaviorUserInteractionsLabel
	isSet bool
}

func (v NullableRiskCheckBehaviorUserInteractionsLabel) Get() *RiskCheckBehaviorUserInteractionsLabel {
	return v.value
}

func (v *NullableRiskCheckBehaviorUserInteractionsLabel) Set(val *RiskCheckBehaviorUserInteractionsLabel) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskCheckBehaviorUserInteractionsLabel) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskCheckBehaviorUserInteractionsLabel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskCheckBehaviorUserInteractionsLabel(val *RiskCheckBehaviorUserInteractionsLabel) *NullableRiskCheckBehaviorUserInteractionsLabel {
	return &NullableRiskCheckBehaviorUserInteractionsLabel{value: val, isSet: true}
}

func (v NullableRiskCheckBehaviorUserInteractionsLabel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskCheckBehaviorUserInteractionsLabel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

