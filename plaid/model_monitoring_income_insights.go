/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// MonitoringIncomeInsights An object representing the income subcategory of the report
type MonitoringIncomeInsights struct {
	TotalMonthlyIncome TotalMonthlyIncomeInsights `json:"total_monthly_income"`
	IncomeSourcesCounts IncomeSourcesCounts `json:"income_sources_counts"`
	ForecastedMonthlyIncome ForecastedMonthlyIncome `json:"forecasted_monthly_income"`
	HistoricalAnnualIncome HistoricalAnnualIncome `json:"historical_annual_income"`
	// The income sources for this Item. Each entry in the array is a single income source
	IncomeSources []MonitoringIncomeSource `json:"income_sources"`
	AdditionalProperties map[string]interface{}
}

type _MonitoringIncomeInsights MonitoringIncomeInsights

// NewMonitoringIncomeInsights instantiates a new MonitoringIncomeInsights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringIncomeInsights(totalMonthlyIncome TotalMonthlyIncomeInsights, incomeSourcesCounts IncomeSourcesCounts, forecastedMonthlyIncome ForecastedMonthlyIncome, historicalAnnualIncome HistoricalAnnualIncome, incomeSources []MonitoringIncomeSource) *MonitoringIncomeInsights {
	this := MonitoringIncomeInsights{}
	this.TotalMonthlyIncome = totalMonthlyIncome
	this.IncomeSourcesCounts = incomeSourcesCounts
	this.ForecastedMonthlyIncome = forecastedMonthlyIncome
	this.HistoricalAnnualIncome = historicalAnnualIncome
	this.IncomeSources = incomeSources
	return &this
}

// NewMonitoringIncomeInsightsWithDefaults instantiates a new MonitoringIncomeInsights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringIncomeInsightsWithDefaults() *MonitoringIncomeInsights {
	this := MonitoringIncomeInsights{}
	return &this
}

// GetTotalMonthlyIncome returns the TotalMonthlyIncome field value
func (o *MonitoringIncomeInsights) GetTotalMonthlyIncome() TotalMonthlyIncomeInsights {
	if o == nil {
		var ret TotalMonthlyIncomeInsights
		return ret
	}

	return o.TotalMonthlyIncome
}

// GetTotalMonthlyIncomeOk returns a tuple with the TotalMonthlyIncome field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeInsights) GetTotalMonthlyIncomeOk() (*TotalMonthlyIncomeInsights, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalMonthlyIncome, true
}

// SetTotalMonthlyIncome sets field value
func (o *MonitoringIncomeInsights) SetTotalMonthlyIncome(v TotalMonthlyIncomeInsights) {
	o.TotalMonthlyIncome = v
}

// GetIncomeSourcesCounts returns the IncomeSourcesCounts field value
func (o *MonitoringIncomeInsights) GetIncomeSourcesCounts() IncomeSourcesCounts {
	if o == nil {
		var ret IncomeSourcesCounts
		return ret
	}

	return o.IncomeSourcesCounts
}

// GetIncomeSourcesCountsOk returns a tuple with the IncomeSourcesCounts field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeInsights) GetIncomeSourcesCountsOk() (*IncomeSourcesCounts, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncomeSourcesCounts, true
}

// SetIncomeSourcesCounts sets field value
func (o *MonitoringIncomeInsights) SetIncomeSourcesCounts(v IncomeSourcesCounts) {
	o.IncomeSourcesCounts = v
}

// GetForecastedMonthlyIncome returns the ForecastedMonthlyIncome field value
func (o *MonitoringIncomeInsights) GetForecastedMonthlyIncome() ForecastedMonthlyIncome {
	if o == nil {
		var ret ForecastedMonthlyIncome
		return ret
	}

	return o.ForecastedMonthlyIncome
}

// GetForecastedMonthlyIncomeOk returns a tuple with the ForecastedMonthlyIncome field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeInsights) GetForecastedMonthlyIncomeOk() (*ForecastedMonthlyIncome, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ForecastedMonthlyIncome, true
}

// SetForecastedMonthlyIncome sets field value
func (o *MonitoringIncomeInsights) SetForecastedMonthlyIncome(v ForecastedMonthlyIncome) {
	o.ForecastedMonthlyIncome = v
}

// GetHistoricalAnnualIncome returns the HistoricalAnnualIncome field value
func (o *MonitoringIncomeInsights) GetHistoricalAnnualIncome() HistoricalAnnualIncome {
	if o == nil {
		var ret HistoricalAnnualIncome
		return ret
	}

	return o.HistoricalAnnualIncome
}

// GetHistoricalAnnualIncomeOk returns a tuple with the HistoricalAnnualIncome field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeInsights) GetHistoricalAnnualIncomeOk() (*HistoricalAnnualIncome, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HistoricalAnnualIncome, true
}

// SetHistoricalAnnualIncome sets field value
func (o *MonitoringIncomeInsights) SetHistoricalAnnualIncome(v HistoricalAnnualIncome) {
	o.HistoricalAnnualIncome = v
}

// GetIncomeSources returns the IncomeSources field value
func (o *MonitoringIncomeInsights) GetIncomeSources() []MonitoringIncomeSource {
	if o == nil {
		var ret []MonitoringIncomeSource
		return ret
	}

	return o.IncomeSources
}

// GetIncomeSourcesOk returns a tuple with the IncomeSources field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeInsights) GetIncomeSourcesOk() (*[]MonitoringIncomeSource, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncomeSources, true
}

// SetIncomeSources sets field value
func (o *MonitoringIncomeInsights) SetIncomeSources(v []MonitoringIncomeSource) {
	o.IncomeSources = v
}

func (o MonitoringIncomeInsights) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total_monthly_income"] = o.TotalMonthlyIncome
	}
	if true {
		toSerialize["income_sources_counts"] = o.IncomeSourcesCounts
	}
	if true {
		toSerialize["forecasted_monthly_income"] = o.ForecastedMonthlyIncome
	}
	if true {
		toSerialize["historical_annual_income"] = o.HistoricalAnnualIncome
	}
	if true {
		toSerialize["income_sources"] = o.IncomeSources
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MonitoringIncomeInsights) UnmarshalJSON(bytes []byte) (err error) {
	varMonitoringIncomeInsights := _MonitoringIncomeInsights{}

	if err = json.Unmarshal(bytes, &varMonitoringIncomeInsights); err == nil {
		*o = MonitoringIncomeInsights(varMonitoringIncomeInsights)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "total_monthly_income")
		delete(additionalProperties, "income_sources_counts")
		delete(additionalProperties, "forecasted_monthly_income")
		delete(additionalProperties, "historical_annual_income")
		delete(additionalProperties, "income_sources")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMonitoringIncomeInsights struct {
	value *MonitoringIncomeInsights
	isSet bool
}

func (v NullableMonitoringIncomeInsights) Get() *MonitoringIncomeInsights {
	return v.value
}

func (v *NullableMonitoringIncomeInsights) Set(val *MonitoringIncomeInsights) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringIncomeInsights) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringIncomeInsights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringIncomeInsights(val *MonitoringIncomeInsights) *NullableMonitoringIncomeInsights {
	return &NullableMonitoringIncomeInsights{value: val, isSet: true}
}

func (v NullableMonitoringIncomeInsights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringIncomeInsights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


