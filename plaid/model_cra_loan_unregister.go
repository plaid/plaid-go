/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.534.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraLoanUnregister Contains loan data for the loan being unregistered.
type CraLoanUnregister struct {
	// A unique identifier for the loan.  Personally identifiable information, such as an email address or phone number, should not be used in the `loan_id`.
	LoanId string `json:"loan_id"`
	ClosedWithStatus CraLoanClosedStatus `json:"closed_with_status"`
	AdditionalProperties map[string]interface{}
}

type _CraLoanUnregister CraLoanUnregister

// NewCraLoanUnregister instantiates a new CraLoanUnregister object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraLoanUnregister(loanId string, closedWithStatus CraLoanClosedStatus) *CraLoanUnregister {
	this := CraLoanUnregister{}
	this.LoanId = loanId
	this.ClosedWithStatus = closedWithStatus
	return &this
}

// NewCraLoanUnregisterWithDefaults instantiates a new CraLoanUnregister object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraLoanUnregisterWithDefaults() *CraLoanUnregister {
	this := CraLoanUnregister{}
	return &this
}

// GetLoanId returns the LoanId field value
func (o *CraLoanUnregister) GetLoanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoanId
}

// GetLoanIdOk returns a tuple with the LoanId field value
// and a boolean to check if the value has been set.
func (o *CraLoanUnregister) GetLoanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoanId, true
}

// SetLoanId sets field value
func (o *CraLoanUnregister) SetLoanId(v string) {
	o.LoanId = v
}

// GetClosedWithStatus returns the ClosedWithStatus field value
func (o *CraLoanUnregister) GetClosedWithStatus() CraLoanClosedStatus {
	if o == nil {
		var ret CraLoanClosedStatus
		return ret
	}

	return o.ClosedWithStatus
}

// GetClosedWithStatusOk returns a tuple with the ClosedWithStatus field value
// and a boolean to check if the value has been set.
func (o *CraLoanUnregister) GetClosedWithStatusOk() (*CraLoanClosedStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClosedWithStatus, true
}

// SetClosedWithStatus sets field value
func (o *CraLoanUnregister) SetClosedWithStatus(v CraLoanClosedStatus) {
	o.ClosedWithStatus = v
}

func (o CraLoanUnregister) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["loan_id"] = o.LoanId
	}
	if true {
		toSerialize["closed_with_status"] = o.ClosedWithStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraLoanUnregister) UnmarshalJSON(bytes []byte) (err error) {
	varCraLoanUnregister := _CraLoanUnregister{}

	if err = json.Unmarshal(bytes, &varCraLoanUnregister); err == nil {
		*o = CraLoanUnregister(varCraLoanUnregister)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "loan_id")
		delete(additionalProperties, "closed_with_status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraLoanUnregister struct {
	value *CraLoanUnregister
	isSet bool
}

func (v NullableCraLoanUnregister) Get() *CraLoanUnregister {
	return v.value
}

func (v *NullableCraLoanUnregister) Set(val *CraLoanUnregister) {
	v.value = val
	v.isSet = true
}

func (v NullableCraLoanUnregister) IsSet() bool {
	return v.isSet
}

func (v *NullableCraLoanUnregister) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraLoanUnregister(val *CraLoanUnregister) *NullableCraLoanUnregister {
	return &NullableCraLoanUnregister{value: val, isSet: true}
}

func (v NullableCraLoanUnregister) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraLoanUnregister) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


