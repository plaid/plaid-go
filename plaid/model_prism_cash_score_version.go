/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// PrismCashScoreVersion The version of Prism CashScore. If not specified, will default to v3.
type PrismCashScoreVersion string

var _ = fmt.Printf

// List of PrismCashScoreVersion
const (
	PRISMCASHSCOREVERSION__3 PrismCashScoreVersion = "3"
	PRISMCASHSCOREVERSION_NULL PrismCashScoreVersion = "null"
)

var allowedPrismCashScoreVersionEnumValues = []PrismCashScoreVersion{
	"3",
	"null",
}

func (v *PrismCashScoreVersion) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := PrismCashScoreVersion(value)


	*v = enumTypeValue
	return nil
}

// NewPrismCashScoreVersionFromValue returns a pointer to a valid PrismCashScoreVersion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrismCashScoreVersionFromValue(v string) (*PrismCashScoreVersion, error) {
	ev := PrismCashScoreVersion(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrismCashScoreVersion) IsValid() bool {
	for _, existing := range allowedPrismCashScoreVersionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrismCashScoreVersion value
func (v PrismCashScoreVersion) Ptr() *PrismCashScoreVersion {
	return &v
}

type NullablePrismCashScoreVersion struct {
	value *PrismCashScoreVersion
	isSet bool
}

func (v NullablePrismCashScoreVersion) Get() *PrismCashScoreVersion {
	return v.value
}

func (v *NullablePrismCashScoreVersion) Set(val *PrismCashScoreVersion) {
	v.value = val
	v.isSet = true
}

func (v NullablePrismCashScoreVersion) IsSet() bool {
	return v.isSet
}

func (v *NullablePrismCashScoreVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrismCashScoreVersion(val *PrismCashScoreVersion) *NullablePrismCashScoreVersion {
	return &NullablePrismCashScoreVersion{value: val, isSet: true}
}

func (v NullablePrismCashScoreVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrismCashScoreVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

