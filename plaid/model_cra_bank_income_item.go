/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.410.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// CraBankIncomeItem The details and metadata for an end user's Item.
type CraBankIncomeItem struct {
	// The Item's accounts that have Bank Income data.
	BankIncomeAccounts *[]CraBankIncomeAccount `json:"bank_income_accounts,omitempty"`
	// The income sources for this Item. Each entry in the array is a single income source.
	BankIncomeSources *[]CraBankIncomeSource `json:"bank_income_sources,omitempty"`
	// The time when this Item's data was last retrieved from the financial institution.
	LastUpdatedTime *time.Time `json:"last_updated_time,omitempty"`
	// The unique identifier of the institution associated with the Item.
	InstitutionId *string `json:"institution_id,omitempty"`
	// The name of the institution associated with the Item.
	InstitutionName *string `json:"institution_name,omitempty"`
}

// NewCraBankIncomeItem instantiates a new CraBankIncomeItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraBankIncomeItem() *CraBankIncomeItem {
	this := CraBankIncomeItem{}
	return &this
}

// NewCraBankIncomeItemWithDefaults instantiates a new CraBankIncomeItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraBankIncomeItemWithDefaults() *CraBankIncomeItem {
	this := CraBankIncomeItem{}
	return &this
}

// GetBankIncomeAccounts returns the BankIncomeAccounts field value if set, zero value otherwise.
func (o *CraBankIncomeItem) GetBankIncomeAccounts() []CraBankIncomeAccount {
	if o == nil || o.BankIncomeAccounts == nil {
		var ret []CraBankIncomeAccount
		return ret
	}
	return *o.BankIncomeAccounts
}

// GetBankIncomeAccountsOk returns a tuple with the BankIncomeAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeItem) GetBankIncomeAccountsOk() (*[]CraBankIncomeAccount, bool) {
	if o == nil || o.BankIncomeAccounts == nil {
		return nil, false
	}
	return o.BankIncomeAccounts, true
}

// HasBankIncomeAccounts returns a boolean if a field has been set.
func (o *CraBankIncomeItem) HasBankIncomeAccounts() bool {
	if o != nil && o.BankIncomeAccounts != nil {
		return true
	}

	return false
}

// SetBankIncomeAccounts gets a reference to the given []CraBankIncomeAccount and assigns it to the BankIncomeAccounts field.
func (o *CraBankIncomeItem) SetBankIncomeAccounts(v []CraBankIncomeAccount) {
	o.BankIncomeAccounts = &v
}

// GetBankIncomeSources returns the BankIncomeSources field value if set, zero value otherwise.
func (o *CraBankIncomeItem) GetBankIncomeSources() []CraBankIncomeSource {
	if o == nil || o.BankIncomeSources == nil {
		var ret []CraBankIncomeSource
		return ret
	}
	return *o.BankIncomeSources
}

// GetBankIncomeSourcesOk returns a tuple with the BankIncomeSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeItem) GetBankIncomeSourcesOk() (*[]CraBankIncomeSource, bool) {
	if o == nil || o.BankIncomeSources == nil {
		return nil, false
	}
	return o.BankIncomeSources, true
}

// HasBankIncomeSources returns a boolean if a field has been set.
func (o *CraBankIncomeItem) HasBankIncomeSources() bool {
	if o != nil && o.BankIncomeSources != nil {
		return true
	}

	return false
}

// SetBankIncomeSources gets a reference to the given []CraBankIncomeSource and assigns it to the BankIncomeSources field.
func (o *CraBankIncomeItem) SetBankIncomeSources(v []CraBankIncomeSource) {
	o.BankIncomeSources = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *CraBankIncomeItem) GetLastUpdatedTime() time.Time {
	if o == nil || o.LastUpdatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeItem) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastUpdatedTime == nil {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *CraBankIncomeItem) HasLastUpdatedTime() bool {
	if o != nil && o.LastUpdatedTime != nil {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given time.Time and assigns it to the LastUpdatedTime field.
func (o *CraBankIncomeItem) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = &v
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise.
func (o *CraBankIncomeItem) GetInstitutionId() string {
	if o == nil || o.InstitutionId == nil {
		var ret string
		return ret
	}
	return *o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeItem) GetInstitutionIdOk() (*string, bool) {
	if o == nil || o.InstitutionId == nil {
		return nil, false
	}
	return o.InstitutionId, true
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *CraBankIncomeItem) HasInstitutionId() bool {
	if o != nil && o.InstitutionId != nil {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given string and assigns it to the InstitutionId field.
func (o *CraBankIncomeItem) SetInstitutionId(v string) {
	o.InstitutionId = &v
}

// GetInstitutionName returns the InstitutionName field value if set, zero value otherwise.
func (o *CraBankIncomeItem) GetInstitutionName() string {
	if o == nil || o.InstitutionName == nil {
		var ret string
		return ret
	}
	return *o.InstitutionName
}

// GetInstitutionNameOk returns a tuple with the InstitutionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeItem) GetInstitutionNameOk() (*string, bool) {
	if o == nil || o.InstitutionName == nil {
		return nil, false
	}
	return o.InstitutionName, true
}

// HasInstitutionName returns a boolean if a field has been set.
func (o *CraBankIncomeItem) HasInstitutionName() bool {
	if o != nil && o.InstitutionName != nil {
		return true
	}

	return false
}

// SetInstitutionName gets a reference to the given string and assigns it to the InstitutionName field.
func (o *CraBankIncomeItem) SetInstitutionName(v string) {
	o.InstitutionName = &v
}

func (o CraBankIncomeItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BankIncomeAccounts != nil {
		toSerialize["bank_income_accounts"] = o.BankIncomeAccounts
	}
	if o.BankIncomeSources != nil {
		toSerialize["bank_income_sources"] = o.BankIncomeSources
	}
	if o.LastUpdatedTime != nil {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if o.InstitutionId != nil {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if o.InstitutionName != nil {
		toSerialize["institution_name"] = o.InstitutionName
	}
	return json.Marshal(toSerialize)
}

type NullableCraBankIncomeItem struct {
	value *CraBankIncomeItem
	isSet bool
}

func (v NullableCraBankIncomeItem) Get() *CraBankIncomeItem {
	return v.value
}

func (v *NullableCraBankIncomeItem) Set(val *CraBankIncomeItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCraBankIncomeItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCraBankIncomeItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraBankIncomeItem(val *CraBankIncomeItem) *NullableCraBankIncomeItem {
	return &NullableCraBankIncomeItem{value: val, isSet: true}
}

func (v NullableCraBankIncomeItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraBankIncomeItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


