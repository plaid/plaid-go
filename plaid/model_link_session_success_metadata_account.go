/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// LinkSessionSuccessMetadataAccount An account attached to the connected Item.
type LinkSessionSuccessMetadataAccount struct {
	// The Plaid `account_id` 
	Id *string `json:"id,omitempty"`
	// The official account name
	Name *string `json:"name,omitempty"`
	// The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts. It may also not match the mask that the bank displays to the user.
	Mask NullableString `json:"mask,omitempty"`
	// The account type. See the [Account schema](/docs/api/accounts#account-type-schema) for a full list of possible values
	Type *string `json:"type,omitempty"`
	// The account subtype. See the [Account schema](/docs/api/accounts#account-type-schema) for a full list of possible values
	Subtype *string `json:"subtype,omitempty"`
	// Indicates an Item's micro-deposit-based verification status. Possible values are:  `pending_automatic_verification`: The Item is pending automatic verification  `pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.  `automatically_verified`: The Item has successfully been automatically verified  `manually_verified`: The Item has successfully been manually verified  `verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.  `verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.  `null`: micro-deposit-based verification is not being used for the Item. 
	VerificationStatus NullableString `json:"verification_status,omitempty"`
	// If micro-deposit verification is being used, indicates whether the account being verified is a `business` or `personal` account.
	ClassType NullableString `json:"class_type,omitempty"`
}

// NewLinkSessionSuccessMetadataAccount instantiates a new LinkSessionSuccessMetadataAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkSessionSuccessMetadataAccount() *LinkSessionSuccessMetadataAccount {
	this := LinkSessionSuccessMetadataAccount{}
	return &this
}

// NewLinkSessionSuccessMetadataAccountWithDefaults instantiates a new LinkSessionSuccessMetadataAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkSessionSuccessMetadataAccountWithDefaults() *LinkSessionSuccessMetadataAccount {
	this := LinkSessionSuccessMetadataAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LinkSessionSuccessMetadataAccount) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSessionSuccessMetadataAccount) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadataAccount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LinkSessionSuccessMetadataAccount) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LinkSessionSuccessMetadataAccount) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSessionSuccessMetadataAccount) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadataAccount) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LinkSessionSuccessMetadataAccount) SetName(v string) {
	o.Name = &v
}

// GetMask returns the Mask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkSessionSuccessMetadataAccount) GetMask() string {
	if o == nil || o.Mask.Get() == nil {
		var ret string
		return ret
	}
	return *o.Mask.Get()
}

// GetMaskOk returns a tuple with the Mask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkSessionSuccessMetadataAccount) GetMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mask.Get(), o.Mask.IsSet()
}

// HasMask returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadataAccount) HasMask() bool {
	if o != nil && o.Mask.IsSet() {
		return true
	}

	return false
}

// SetMask gets a reference to the given NullableString and assigns it to the Mask field.
func (o *LinkSessionSuccessMetadataAccount) SetMask(v string) {
	o.Mask.Set(&v)
}
// SetMaskNil sets the value for Mask to be an explicit nil
func (o *LinkSessionSuccessMetadataAccount) SetMaskNil() {
	o.Mask.Set(nil)
}

// UnsetMask ensures that no value is present for Mask, not even an explicit nil
func (o *LinkSessionSuccessMetadataAccount) UnsetMask() {
	o.Mask.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LinkSessionSuccessMetadataAccount) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSessionSuccessMetadataAccount) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadataAccount) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LinkSessionSuccessMetadataAccount) SetType(v string) {
	o.Type = &v
}

// GetSubtype returns the Subtype field value if set, zero value otherwise.
func (o *LinkSessionSuccessMetadataAccount) GetSubtype() string {
	if o == nil || o.Subtype == nil {
		var ret string
		return ret
	}
	return *o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSessionSuccessMetadataAccount) GetSubtypeOk() (*string, bool) {
	if o == nil || o.Subtype == nil {
		return nil, false
	}
	return o.Subtype, true
}

// HasSubtype returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadataAccount) HasSubtype() bool {
	if o != nil && o.Subtype != nil {
		return true
	}

	return false
}

// SetSubtype gets a reference to the given string and assigns it to the Subtype field.
func (o *LinkSessionSuccessMetadataAccount) SetSubtype(v string) {
	o.Subtype = &v
}

// GetVerificationStatus returns the VerificationStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkSessionSuccessMetadataAccount) GetVerificationStatus() string {
	if o == nil || o.VerificationStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.VerificationStatus.Get()
}

// GetVerificationStatusOk returns a tuple with the VerificationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkSessionSuccessMetadataAccount) GetVerificationStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VerificationStatus.Get(), o.VerificationStatus.IsSet()
}

// HasVerificationStatus returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadataAccount) HasVerificationStatus() bool {
	if o != nil && o.VerificationStatus.IsSet() {
		return true
	}

	return false
}

// SetVerificationStatus gets a reference to the given NullableString and assigns it to the VerificationStatus field.
func (o *LinkSessionSuccessMetadataAccount) SetVerificationStatus(v string) {
	o.VerificationStatus.Set(&v)
}
// SetVerificationStatusNil sets the value for VerificationStatus to be an explicit nil
func (o *LinkSessionSuccessMetadataAccount) SetVerificationStatusNil() {
	o.VerificationStatus.Set(nil)
}

// UnsetVerificationStatus ensures that no value is present for VerificationStatus, not even an explicit nil
func (o *LinkSessionSuccessMetadataAccount) UnsetVerificationStatus() {
	o.VerificationStatus.Unset()
}

// GetClassType returns the ClassType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkSessionSuccessMetadataAccount) GetClassType() string {
	if o == nil || o.ClassType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClassType.Get()
}

// GetClassTypeOk returns a tuple with the ClassType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkSessionSuccessMetadataAccount) GetClassTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClassType.Get(), o.ClassType.IsSet()
}

// HasClassType returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadataAccount) HasClassType() bool {
	if o != nil && o.ClassType.IsSet() {
		return true
	}

	return false
}

// SetClassType gets a reference to the given NullableString and assigns it to the ClassType field.
func (o *LinkSessionSuccessMetadataAccount) SetClassType(v string) {
	o.ClassType.Set(&v)
}
// SetClassTypeNil sets the value for ClassType to be an explicit nil
func (o *LinkSessionSuccessMetadataAccount) SetClassTypeNil() {
	o.ClassType.Set(nil)
}

// UnsetClassType ensures that no value is present for ClassType, not even an explicit nil
func (o *LinkSessionSuccessMetadataAccount) UnsetClassType() {
	o.ClassType.Unset()
}

func (o LinkSessionSuccessMetadataAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Mask.IsSet() {
		toSerialize["mask"] = o.Mask.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Subtype != nil {
		toSerialize["subtype"] = o.Subtype
	}
	if o.VerificationStatus.IsSet() {
		toSerialize["verification_status"] = o.VerificationStatus.Get()
	}
	if o.ClassType.IsSet() {
		toSerialize["class_type"] = o.ClassType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLinkSessionSuccessMetadataAccount struct {
	value *LinkSessionSuccessMetadataAccount
	isSet bool
}

func (v NullableLinkSessionSuccessMetadataAccount) Get() *LinkSessionSuccessMetadataAccount {
	return v.value
}

func (v *NullableLinkSessionSuccessMetadataAccount) Set(val *LinkSessionSuccessMetadataAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkSessionSuccessMetadataAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkSessionSuccessMetadataAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkSessionSuccessMetadataAccount(val *LinkSessionSuccessMetadataAccount) *NullableLinkSessionSuccessMetadataAccount {
	return &NullableLinkSessionSuccessMetadataAccount{value: val, isSet: true}
}

func (v NullableLinkSessionSuccessMetadataAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkSessionSuccessMetadataAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


