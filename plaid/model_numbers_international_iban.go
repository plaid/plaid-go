/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.379.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// NumbersInternationalIBAN Account numbers using the International Bank Account Number and BIC/SWIFT code format.
type NumbersInternationalIBAN struct {
	// International Bank Account Number (IBAN).
	Iban string `json:"iban"`
	// The Business Identifier Code, also known as SWIFT code, for this bank account.
	Bic string `json:"bic"`
	AdditionalProperties map[string]interface{}
}

type _NumbersInternationalIBAN NumbersInternationalIBAN

// NewNumbersInternationalIBAN instantiates a new NumbersInternationalIBAN object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNumbersInternationalIBAN(iban string, bic string) *NumbersInternationalIBAN {
	this := NumbersInternationalIBAN{}
	this.Iban = iban
	this.Bic = bic
	return &this
}

// NewNumbersInternationalIBANWithDefaults instantiates a new NumbersInternationalIBAN object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNumbersInternationalIBANWithDefaults() *NumbersInternationalIBAN {
	this := NumbersInternationalIBAN{}
	return &this
}

// GetIban returns the Iban field value
func (o *NumbersInternationalIBAN) GetIban() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Iban
}

// GetIbanOk returns a tuple with the Iban field value
// and a boolean to check if the value has been set.
func (o *NumbersInternationalIBAN) GetIbanOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Iban, true
}

// SetIban sets field value
func (o *NumbersInternationalIBAN) SetIban(v string) {
	o.Iban = v
}

// GetBic returns the Bic field value
func (o *NumbersInternationalIBAN) GetBic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bic
}

// GetBicOk returns a tuple with the Bic field value
// and a boolean to check if the value has been set.
func (o *NumbersInternationalIBAN) GetBicOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bic, true
}

// SetBic sets field value
func (o *NumbersInternationalIBAN) SetBic(v string) {
	o.Bic = v
}

func (o NumbersInternationalIBAN) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["iban"] = o.Iban
	}
	if true {
		toSerialize["bic"] = o.Bic
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *NumbersInternationalIBAN) UnmarshalJSON(bytes []byte) (err error) {
	varNumbersInternationalIBAN := _NumbersInternationalIBAN{}

	if err = json.Unmarshal(bytes, &varNumbersInternationalIBAN); err == nil {
		*o = NumbersInternationalIBAN(varNumbersInternationalIBAN)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "iban")
		delete(additionalProperties, "bic")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNumbersInternationalIBAN struct {
	value *NumbersInternationalIBAN
	isSet bool
}

func (v NullableNumbersInternationalIBAN) Get() *NumbersInternationalIBAN {
	return v.value
}

func (v *NullableNumbersInternationalIBAN) Set(val *NumbersInternationalIBAN) {
	v.value = val
	v.isSet = true
}

func (v NullableNumbersInternationalIBAN) IsSet() bool {
	return v.isSet
}

func (v *NullableNumbersInternationalIBAN) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNumbersInternationalIBAN(val *NumbersInternationalIBAN) *NullableNumbersInternationalIBAN {
	return &NullableNumbersInternationalIBAN{value: val, isSet: true}
}

func (v NullableNumbersInternationalIBAN) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNumbersInternationalIBAN) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


