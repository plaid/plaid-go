/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.379.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// LinkTokenCreateRequestEmployment Specifies options for initializing Link for use with the Employment product. This field is required if `employment` is included in the `products` array.
type LinkTokenCreateRequestEmployment struct {
	// The types of source employment data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
	EmploymentSourceTypes *[]EmploymentSourceType `json:"employment_source_types,omitempty"`
	BankEmployment *LinkTokenCreateRequestEmploymentBankIncome `json:"bank_employment,omitempty"`
}

// NewLinkTokenCreateRequestEmployment instantiates a new LinkTokenCreateRequestEmployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkTokenCreateRequestEmployment() *LinkTokenCreateRequestEmployment {
	this := LinkTokenCreateRequestEmployment{}
	return &this
}

// NewLinkTokenCreateRequestEmploymentWithDefaults instantiates a new LinkTokenCreateRequestEmployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkTokenCreateRequestEmploymentWithDefaults() *LinkTokenCreateRequestEmployment {
	this := LinkTokenCreateRequestEmployment{}
	return &this
}

// GetEmploymentSourceTypes returns the EmploymentSourceTypes field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestEmployment) GetEmploymentSourceTypes() []EmploymentSourceType {
	if o == nil || o.EmploymentSourceTypes == nil {
		var ret []EmploymentSourceType
		return ret
	}
	return *o.EmploymentSourceTypes
}

// GetEmploymentSourceTypesOk returns a tuple with the EmploymentSourceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestEmployment) GetEmploymentSourceTypesOk() (*[]EmploymentSourceType, bool) {
	if o == nil || o.EmploymentSourceTypes == nil {
		return nil, false
	}
	return o.EmploymentSourceTypes, true
}

// HasEmploymentSourceTypes returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestEmployment) HasEmploymentSourceTypes() bool {
	if o != nil && o.EmploymentSourceTypes != nil {
		return true
	}

	return false
}

// SetEmploymentSourceTypes gets a reference to the given []EmploymentSourceType and assigns it to the EmploymentSourceTypes field.
func (o *LinkTokenCreateRequestEmployment) SetEmploymentSourceTypes(v []EmploymentSourceType) {
	o.EmploymentSourceTypes = &v
}

// GetBankEmployment returns the BankEmployment field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestEmployment) GetBankEmployment() LinkTokenCreateRequestEmploymentBankIncome {
	if o == nil || o.BankEmployment == nil {
		var ret LinkTokenCreateRequestEmploymentBankIncome
		return ret
	}
	return *o.BankEmployment
}

// GetBankEmploymentOk returns a tuple with the BankEmployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestEmployment) GetBankEmploymentOk() (*LinkTokenCreateRequestEmploymentBankIncome, bool) {
	if o == nil || o.BankEmployment == nil {
		return nil, false
	}
	return o.BankEmployment, true
}

// HasBankEmployment returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestEmployment) HasBankEmployment() bool {
	if o != nil && o.BankEmployment != nil {
		return true
	}

	return false
}

// SetBankEmployment gets a reference to the given LinkTokenCreateRequestEmploymentBankIncome and assigns it to the BankEmployment field.
func (o *LinkTokenCreateRequestEmployment) SetBankEmployment(v LinkTokenCreateRequestEmploymentBankIncome) {
	o.BankEmployment = &v
}

func (o LinkTokenCreateRequestEmployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmploymentSourceTypes != nil {
		toSerialize["employment_source_types"] = o.EmploymentSourceTypes
	}
	if o.BankEmployment != nil {
		toSerialize["bank_employment"] = o.BankEmployment
	}
	return json.Marshal(toSerialize)
}

type NullableLinkTokenCreateRequestEmployment struct {
	value *LinkTokenCreateRequestEmployment
	isSet bool
}

func (v NullableLinkTokenCreateRequestEmployment) Get() *LinkTokenCreateRequestEmployment {
	return v.value
}

func (v *NullableLinkTokenCreateRequestEmployment) Set(val *LinkTokenCreateRequestEmployment) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkTokenCreateRequestEmployment) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkTokenCreateRequestEmployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkTokenCreateRequestEmployment(val *LinkTokenCreateRequestEmployment) *NullableLinkTokenCreateRequestEmployment {
	return &NullableLinkTokenCreateRequestEmployment{value: val, isSet: true}
}

func (v NullableLinkTokenCreateRequestEmployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkTokenCreateRequestEmployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


