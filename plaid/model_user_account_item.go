/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.525.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// UserAccountItem UserAccountItem defines an Item created during a Layer authorization session.
type UserAccountItem struct {
	// The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
	ItemId *string `json:"item_id,omitempty"`
	// The access token associated with the Item data is being requested for.
	AccessToken *string `json:"access_token,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserAccountItem UserAccountItem

// NewUserAccountItem instantiates a new UserAccountItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAccountItem() *UserAccountItem {
	this := UserAccountItem{}
	return &this
}

// NewUserAccountItemWithDefaults instantiates a new UserAccountItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAccountItemWithDefaults() *UserAccountItem {
	this := UserAccountItem{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *UserAccountItem) GetItemId() string {
	if o == nil || o.ItemId == nil {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountItem) GetItemIdOk() (*string, bool) {
	if o == nil || o.ItemId == nil {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *UserAccountItem) HasItemId() bool {
	if o != nil && o.ItemId != nil {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *UserAccountItem) SetItemId(v string) {
	o.ItemId = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *UserAccountItem) GetAccessToken() string {
	if o == nil || o.AccessToken == nil {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountItem) GetAccessTokenOk() (*string, bool) {
	if o == nil || o.AccessToken == nil {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *UserAccountItem) HasAccessToken() bool {
	if o != nil && o.AccessToken != nil {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *UserAccountItem) SetAccessToken(v string) {
	o.AccessToken = &v
}

func (o UserAccountItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ItemId != nil {
		toSerialize["item_id"] = o.ItemId
	}
	if o.AccessToken != nil {
		toSerialize["access_token"] = o.AccessToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UserAccountItem) UnmarshalJSON(bytes []byte) (err error) {
	varUserAccountItem := _UserAccountItem{}

	if err = json.Unmarshal(bytes, &varUserAccountItem); err == nil {
		*o = UserAccountItem(varUserAccountItem)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "access_token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserAccountItem struct {
	value *UserAccountItem
	isSet bool
}

func (v NullableUserAccountItem) Get() *UserAccountItem {
	return v.value
}

func (v *NullableUserAccountItem) Set(val *UserAccountItem) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAccountItem) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAccountItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAccountItem(val *UserAccountItem) *NullableUserAccountItem {
	return &NullableUserAccountItem{value: val, isSet: true}
}

func (v NullableUserAccountItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAccountItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


