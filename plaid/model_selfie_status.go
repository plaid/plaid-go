/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.385.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// SelfieStatus An outcome status for this specific selfie. Distinct from the overall `selfie_check.status` that summarizes the verification outcome from one or more selfies.
type SelfieStatus string

var _ = fmt.Printf

// List of SelfieStatus
const (
	SELFIESTATUS_SUCCESS SelfieStatus = "success"
	SELFIESTATUS_FAILED SelfieStatus = "failed"
)

var allowedSelfieStatusEnumValues = []SelfieStatus{
	"success",
	"failed",
}

func (v *SelfieStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := SelfieStatus(value)


	*v = enumTypeValue
	return nil
}

// NewSelfieStatusFromValue returns a pointer to a valid SelfieStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSelfieStatusFromValue(v string) (*SelfieStatus, error) {
	ev := SelfieStatus(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SelfieStatus) IsValid() bool {
	for _, existing := range allowedSelfieStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SelfieStatus value
func (v SelfieStatus) Ptr() *SelfieStatus {
	return &v
}

type NullableSelfieStatus struct {
	value *SelfieStatus
	isSet bool
}

func (v NullableSelfieStatus) Get() *SelfieStatus {
	return v.value
}

func (v *NullableSelfieStatus) Set(val *SelfieStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfieStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfieStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfieStatus(val *SelfieStatus) *NullableSelfieStatus {
	return &NullableSelfieStatus{value: val, isSet: true}
}

func (v NullableSelfieStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfieStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

