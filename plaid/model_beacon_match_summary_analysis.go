/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconMatchSummaryAnalysis Analysis of which fields matched between one Beacon User and another.
type BeaconMatchSummaryAnalysis struct {
	Address BeaconMatchSummaryCode `json:"address"`
	DateOfBirth BeaconMatchSummaryCode `json:"date_of_birth"`
	EmailAddress BeaconMatchSummaryCode `json:"email_address"`
	Name BeaconMatchSummaryCode `json:"name"`
	IdNumber BeaconMatchSummaryCode `json:"id_number"`
	IpAddress BeaconMatchSummaryCode `json:"ip_address"`
	PhoneNumber BeaconMatchSummaryCode `json:"phone_number"`
	AdditionalProperties map[string]interface{}
}

type _BeaconMatchSummaryAnalysis BeaconMatchSummaryAnalysis

// NewBeaconMatchSummaryAnalysis instantiates a new BeaconMatchSummaryAnalysis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconMatchSummaryAnalysis(address BeaconMatchSummaryCode, dateOfBirth BeaconMatchSummaryCode, emailAddress BeaconMatchSummaryCode, name BeaconMatchSummaryCode, idNumber BeaconMatchSummaryCode, ipAddress BeaconMatchSummaryCode, phoneNumber BeaconMatchSummaryCode) *BeaconMatchSummaryAnalysis {
	this := BeaconMatchSummaryAnalysis{}
	this.Address = address
	this.DateOfBirth = dateOfBirth
	this.EmailAddress = emailAddress
	this.Name = name
	this.IdNumber = idNumber
	this.IpAddress = ipAddress
	this.PhoneNumber = phoneNumber
	return &this
}

// NewBeaconMatchSummaryAnalysisWithDefaults instantiates a new BeaconMatchSummaryAnalysis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconMatchSummaryAnalysisWithDefaults() *BeaconMatchSummaryAnalysis {
	this := BeaconMatchSummaryAnalysis{}
	return &this
}

// GetAddress returns the Address field value
func (o *BeaconMatchSummaryAnalysis) GetAddress() BeaconMatchSummaryCode {
	if o == nil {
		var ret BeaconMatchSummaryCode
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *BeaconMatchSummaryAnalysis) GetAddressOk() (*BeaconMatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *BeaconMatchSummaryAnalysis) SetAddress(v BeaconMatchSummaryCode) {
	o.Address = v
}

// GetDateOfBirth returns the DateOfBirth field value
func (o *BeaconMatchSummaryAnalysis) GetDateOfBirth() BeaconMatchSummaryCode {
	if o == nil {
		var ret BeaconMatchSummaryCode
		return ret
	}

	return o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value
// and a boolean to check if the value has been set.
func (o *BeaconMatchSummaryAnalysis) GetDateOfBirthOk() (*BeaconMatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateOfBirth, true
}

// SetDateOfBirth sets field value
func (o *BeaconMatchSummaryAnalysis) SetDateOfBirth(v BeaconMatchSummaryCode) {
	o.DateOfBirth = v
}

// GetEmailAddress returns the EmailAddress field value
func (o *BeaconMatchSummaryAnalysis) GetEmailAddress() BeaconMatchSummaryCode {
	if o == nil {
		var ret BeaconMatchSummaryCode
		return ret
	}

	return o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value
// and a boolean to check if the value has been set.
func (o *BeaconMatchSummaryAnalysis) GetEmailAddressOk() (*BeaconMatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EmailAddress, true
}

// SetEmailAddress sets field value
func (o *BeaconMatchSummaryAnalysis) SetEmailAddress(v BeaconMatchSummaryCode) {
	o.EmailAddress = v
}

// GetName returns the Name field value
func (o *BeaconMatchSummaryAnalysis) GetName() BeaconMatchSummaryCode {
	if o == nil {
		var ret BeaconMatchSummaryCode
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BeaconMatchSummaryAnalysis) GetNameOk() (*BeaconMatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BeaconMatchSummaryAnalysis) SetName(v BeaconMatchSummaryCode) {
	o.Name = v
}

// GetIdNumber returns the IdNumber field value
func (o *BeaconMatchSummaryAnalysis) GetIdNumber() BeaconMatchSummaryCode {
	if o == nil {
		var ret BeaconMatchSummaryCode
		return ret
	}

	return o.IdNumber
}

// GetIdNumberOk returns a tuple with the IdNumber field value
// and a boolean to check if the value has been set.
func (o *BeaconMatchSummaryAnalysis) GetIdNumberOk() (*BeaconMatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IdNumber, true
}

// SetIdNumber sets field value
func (o *BeaconMatchSummaryAnalysis) SetIdNumber(v BeaconMatchSummaryCode) {
	o.IdNumber = v
}

// GetIpAddress returns the IpAddress field value
func (o *BeaconMatchSummaryAnalysis) GetIpAddress() BeaconMatchSummaryCode {
	if o == nil {
		var ret BeaconMatchSummaryCode
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *BeaconMatchSummaryAnalysis) GetIpAddressOk() (*BeaconMatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *BeaconMatchSummaryAnalysis) SetIpAddress(v BeaconMatchSummaryCode) {
	o.IpAddress = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *BeaconMatchSummaryAnalysis) GetPhoneNumber() BeaconMatchSummaryCode {
	if o == nil {
		var ret BeaconMatchSummaryCode
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *BeaconMatchSummaryAnalysis) GetPhoneNumberOk() (*BeaconMatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *BeaconMatchSummaryAnalysis) SetPhoneNumber(v BeaconMatchSummaryCode) {
	o.PhoneNumber = v
}

func (o BeaconMatchSummaryAnalysis) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if true {
		toSerialize["email_address"] = o.EmailAddress
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["id_number"] = o.IdNumber
	}
	if true {
		toSerialize["ip_address"] = o.IpAddress
	}
	if true {
		toSerialize["phone_number"] = o.PhoneNumber
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconMatchSummaryAnalysis) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconMatchSummaryAnalysis := _BeaconMatchSummaryAnalysis{}

	if err = json.Unmarshal(bytes, &varBeaconMatchSummaryAnalysis); err == nil {
		*o = BeaconMatchSummaryAnalysis(varBeaconMatchSummaryAnalysis)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "date_of_birth")
		delete(additionalProperties, "email_address")
		delete(additionalProperties, "name")
		delete(additionalProperties, "id_number")
		delete(additionalProperties, "ip_address")
		delete(additionalProperties, "phone_number")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconMatchSummaryAnalysis struct {
	value *BeaconMatchSummaryAnalysis
	isSet bool
}

func (v NullableBeaconMatchSummaryAnalysis) Get() *BeaconMatchSummaryAnalysis {
	return v.value
}

func (v *NullableBeaconMatchSummaryAnalysis) Set(val *BeaconMatchSummaryAnalysis) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconMatchSummaryAnalysis) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconMatchSummaryAnalysis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconMatchSummaryAnalysis(val *BeaconMatchSummaryAnalysis) *NullableBeaconMatchSummaryAnalysis {
	return &NullableBeaconMatchSummaryAnalysis{value: val, isSet: true}
}

func (v NullableBeaconMatchSummaryAnalysis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconMatchSummaryAnalysis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


