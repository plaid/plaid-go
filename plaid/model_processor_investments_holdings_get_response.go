/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.635.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ProcessorInvestmentsHoldingsGetResponse ProcessorInvestmentsHoldingsGetResponse defines the response schema for `/processor/invesments/holdings/get`
type ProcessorInvestmentsHoldingsGetResponse struct {
	Account AccountBase `json:"account"`
	// The holdings belonging to investment accounts associated with the Item. Details of the securities in the holdings are provided in the `securities` field. 
	Holdings []Holding `json:"holdings"`
	// Objects describing the securities held in the account.
	Securities []Security `json:"securities"`
	// When true, this field indicates that the Item's portfolio was manually created with the Investments Fallback flow.
	IsInvestmentsFallbackItem bool `json:"is_investments_fallback_item"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId *string `json:"request_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProcessorInvestmentsHoldingsGetResponse ProcessorInvestmentsHoldingsGetResponse

// NewProcessorInvestmentsHoldingsGetResponse instantiates a new ProcessorInvestmentsHoldingsGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessorInvestmentsHoldingsGetResponse(account AccountBase, holdings []Holding, securities []Security, isInvestmentsFallbackItem bool) *ProcessorInvestmentsHoldingsGetResponse {
	this := ProcessorInvestmentsHoldingsGetResponse{}
	this.Account = account
	this.Holdings = holdings
	this.Securities = securities
	this.IsInvestmentsFallbackItem = isInvestmentsFallbackItem
	return &this
}

// NewProcessorInvestmentsHoldingsGetResponseWithDefaults instantiates a new ProcessorInvestmentsHoldingsGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessorInvestmentsHoldingsGetResponseWithDefaults() *ProcessorInvestmentsHoldingsGetResponse {
	this := ProcessorInvestmentsHoldingsGetResponse{}
	return &this
}

// GetAccount returns the Account field value
func (o *ProcessorInvestmentsHoldingsGetResponse) GetAccount() AccountBase {
	if o == nil {
		var ret AccountBase
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsHoldingsGetResponse) GetAccountOk() (*AccountBase, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *ProcessorInvestmentsHoldingsGetResponse) SetAccount(v AccountBase) {
	o.Account = v
}

// GetHoldings returns the Holdings field value
func (o *ProcessorInvestmentsHoldingsGetResponse) GetHoldings() []Holding {
	if o == nil {
		var ret []Holding
		return ret
	}

	return o.Holdings
}

// GetHoldingsOk returns a tuple with the Holdings field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsHoldingsGetResponse) GetHoldingsOk() (*[]Holding, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Holdings, true
}

// SetHoldings sets field value
func (o *ProcessorInvestmentsHoldingsGetResponse) SetHoldings(v []Holding) {
	o.Holdings = v
}

// GetSecurities returns the Securities field value
func (o *ProcessorInvestmentsHoldingsGetResponse) GetSecurities() []Security {
	if o == nil {
		var ret []Security
		return ret
	}

	return o.Securities
}

// GetSecuritiesOk returns a tuple with the Securities field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsHoldingsGetResponse) GetSecuritiesOk() (*[]Security, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Securities, true
}

// SetSecurities sets field value
func (o *ProcessorInvestmentsHoldingsGetResponse) SetSecurities(v []Security) {
	o.Securities = v
}

// GetIsInvestmentsFallbackItem returns the IsInvestmentsFallbackItem field value
func (o *ProcessorInvestmentsHoldingsGetResponse) GetIsInvestmentsFallbackItem() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsInvestmentsFallbackItem
}

// GetIsInvestmentsFallbackItemOk returns a tuple with the IsInvestmentsFallbackItem field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsHoldingsGetResponse) GetIsInvestmentsFallbackItemOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsInvestmentsFallbackItem, true
}

// SetIsInvestmentsFallbackItem sets field value
func (o *ProcessorInvestmentsHoldingsGetResponse) SetIsInvestmentsFallbackItem(v bool) {
	o.IsInvestmentsFallbackItem = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ProcessorInvestmentsHoldingsGetResponse) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsHoldingsGetResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ProcessorInvestmentsHoldingsGetResponse) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ProcessorInvestmentsHoldingsGetResponse) SetRequestId(v string) {
	o.RequestId = &v
}

func (o ProcessorInvestmentsHoldingsGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account"] = o.Account
	}
	if true {
		toSerialize["holdings"] = o.Holdings
	}
	if true {
		toSerialize["securities"] = o.Securities
	}
	if true {
		toSerialize["is_investments_fallback_item"] = o.IsInvestmentsFallbackItem
	}
	if o.RequestId != nil {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProcessorInvestmentsHoldingsGetResponse) UnmarshalJSON(bytes []byte) (err error) {
	varProcessorInvestmentsHoldingsGetResponse := _ProcessorInvestmentsHoldingsGetResponse{}

	if err = json.Unmarshal(bytes, &varProcessorInvestmentsHoldingsGetResponse); err == nil {
		*o = ProcessorInvestmentsHoldingsGetResponse(varProcessorInvestmentsHoldingsGetResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account")
		delete(additionalProperties, "holdings")
		delete(additionalProperties, "securities")
		delete(additionalProperties, "is_investments_fallback_item")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProcessorInvestmentsHoldingsGetResponse struct {
	value *ProcessorInvestmentsHoldingsGetResponse
	isSet bool
}

func (v NullableProcessorInvestmentsHoldingsGetResponse) Get() *ProcessorInvestmentsHoldingsGetResponse {
	return v.value
}

func (v *NullableProcessorInvestmentsHoldingsGetResponse) Set(val *ProcessorInvestmentsHoldingsGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessorInvestmentsHoldingsGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessorInvestmentsHoldingsGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessorInvestmentsHoldingsGetResponse(val *ProcessorInvestmentsHoldingsGetResponse) *NullableProcessorInvestmentsHoldingsGetResponse {
	return &NullableProcessorInvestmentsHoldingsGetResponse{value: val, isSet: true}
}

func (v NullableProcessorInvestmentsHoldingsGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessorInvestmentsHoldingsGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


