/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.128.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// UpdateEntityScreeningRequestResettableField The name of a field that can be reset back to null
type UpdateEntityScreeningRequestResettableField string

// List of UpdateEntityScreeningRequestResettableField
const (
	UPDATEENTITYSCREENINGREQUESTRESETTABLEFIELD_ASSIGNEE UpdateEntityScreeningRequestResettableField = "assignee"
)

var allowedUpdateEntityScreeningRequestResettableFieldEnumValues = []UpdateEntityScreeningRequestResettableField{
	"assignee",
}

func (v *UpdateEntityScreeningRequestResettableField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UpdateEntityScreeningRequestResettableField(value)
	for _, existing := range allowedUpdateEntityScreeningRequestResettableFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UpdateEntityScreeningRequestResettableField", value)
}

// NewUpdateEntityScreeningRequestResettableFieldFromValue returns a pointer to a valid UpdateEntityScreeningRequestResettableField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUpdateEntityScreeningRequestResettableFieldFromValue(v string) (*UpdateEntityScreeningRequestResettableField, error) {
	ev := UpdateEntityScreeningRequestResettableField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for UpdateEntityScreeningRequestResettableField: valid values are %v", v, allowedUpdateEntityScreeningRequestResettableFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UpdateEntityScreeningRequestResettableField) IsValid() bool {
	for _, existing := range allowedUpdateEntityScreeningRequestResettableFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to UpdateEntityScreeningRequestResettableField value
func (v UpdateEntityScreeningRequestResettableField) Ptr() *UpdateEntityScreeningRequestResettableField {
	return &v
}

type NullableUpdateEntityScreeningRequestResettableField struct {
	value *UpdateEntityScreeningRequestResettableField
	isSet bool
}

func (v NullableUpdateEntityScreeningRequestResettableField) Get() *UpdateEntityScreeningRequestResettableField {
	return v.value
}

func (v *NullableUpdateEntityScreeningRequestResettableField) Set(val *UpdateEntityScreeningRequestResettableField) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEntityScreeningRequestResettableField) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEntityScreeningRequestResettableField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEntityScreeningRequestResettableField(val *UpdateEntityScreeningRequestResettableField) *NullableUpdateEntityScreeningRequestResettableField {
	return &NullableUpdateEntityScreeningRequestResettableField{value: val, isSet: true}
}

func (v NullableUpdateEntityScreeningRequestResettableField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEntityScreeningRequestResettableField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

