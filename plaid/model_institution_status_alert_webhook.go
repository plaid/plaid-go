/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.474.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// InstitutionStatusAlertWebhook Fired when institution status meets the conditions configured in the developer dashboard.
type InstitutionStatusAlertWebhook struct {
	// `DASHBOARD_CONFIGURED_ALERT`
	WebhookType string `json:"webhook_type"`
	// `INSTITUTION_STATUS_ALERT_TRIGGERED`
	WebhookCode string `json:"webhook_code"`
	// The ID of the associated institution.
	InstitutionId string `json:"institution_id"`
	// The global success rate of the institution, calculated based on item add health.
	InstitutionOverallSuccessRate float64 `json:"institution_overall_success_rate"`
	Environment WebhookEnvironmentValues `json:"environment"`
	AdditionalProperties map[string]interface{}
}

type _InstitutionStatusAlertWebhook InstitutionStatusAlertWebhook

// NewInstitutionStatusAlertWebhook instantiates a new InstitutionStatusAlertWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstitutionStatusAlertWebhook(webhookType string, webhookCode string, institutionId string, institutionOverallSuccessRate float64, environment WebhookEnvironmentValues) *InstitutionStatusAlertWebhook {
	this := InstitutionStatusAlertWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.InstitutionId = institutionId
	this.InstitutionOverallSuccessRate = institutionOverallSuccessRate
	this.Environment = environment
	return &this
}

// NewInstitutionStatusAlertWebhookWithDefaults instantiates a new InstitutionStatusAlertWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstitutionStatusAlertWebhookWithDefaults() *InstitutionStatusAlertWebhook {
	this := InstitutionStatusAlertWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *InstitutionStatusAlertWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *InstitutionStatusAlertWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *InstitutionStatusAlertWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *InstitutionStatusAlertWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *InstitutionStatusAlertWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *InstitutionStatusAlertWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetInstitutionId returns the InstitutionId field value
func (o *InstitutionStatusAlertWebhook) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *InstitutionStatusAlertWebhook) GetInstitutionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *InstitutionStatusAlertWebhook) SetInstitutionId(v string) {
	o.InstitutionId = v
}

// GetInstitutionOverallSuccessRate returns the InstitutionOverallSuccessRate field value
func (o *InstitutionStatusAlertWebhook) GetInstitutionOverallSuccessRate() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.InstitutionOverallSuccessRate
}

// GetInstitutionOverallSuccessRateOk returns a tuple with the InstitutionOverallSuccessRate field value
// and a boolean to check if the value has been set.
func (o *InstitutionStatusAlertWebhook) GetInstitutionOverallSuccessRateOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstitutionOverallSuccessRate, true
}

// SetInstitutionOverallSuccessRate sets field value
func (o *InstitutionStatusAlertWebhook) SetInstitutionOverallSuccessRate(v float64) {
	o.InstitutionOverallSuccessRate = v
}

// GetEnvironment returns the Environment field value
func (o *InstitutionStatusAlertWebhook) GetEnvironment() WebhookEnvironmentValues {
	if o == nil {
		var ret WebhookEnvironmentValues
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *InstitutionStatusAlertWebhook) GetEnvironmentOk() (*WebhookEnvironmentValues, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *InstitutionStatusAlertWebhook) SetEnvironment(v WebhookEnvironmentValues) {
	o.Environment = v
}

func (o InstitutionStatusAlertWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if true {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if true {
		toSerialize["institution_overall_success_rate"] = o.InstitutionOverallSuccessRate
	}
	if true {
		toSerialize["environment"] = o.Environment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *InstitutionStatusAlertWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varInstitutionStatusAlertWebhook := _InstitutionStatusAlertWebhook{}

	if err = json.Unmarshal(bytes, &varInstitutionStatusAlertWebhook); err == nil {
		*o = InstitutionStatusAlertWebhook(varInstitutionStatusAlertWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "institution_id")
		delete(additionalProperties, "institution_overall_success_rate")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInstitutionStatusAlertWebhook struct {
	value *InstitutionStatusAlertWebhook
	isSet bool
}

func (v NullableInstitutionStatusAlertWebhook) Get() *InstitutionStatusAlertWebhook {
	return v.value
}

func (v *NullableInstitutionStatusAlertWebhook) Set(val *InstitutionStatusAlertWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableInstitutionStatusAlertWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableInstitutionStatusAlertWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstitutionStatusAlertWebhook(val *InstitutionStatusAlertWebhook) *NullableInstitutionStatusAlertWebhook {
	return &NullableInstitutionStatusAlertWebhook{value: val, isSet: true}
}

func (v NullableInstitutionStatusAlertWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstitutionStatusAlertWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


