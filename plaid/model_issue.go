/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// Issue Information on an issue encountered with financial institutions interactions with financial institutions during Linking.
type Issue struct {
	// The unique identifier of the issue.
	IssueId *string `json:"issue_id,omitempty"`
	// A list of names of the financial institutions affected.
	InstitutionNames *[]string `json:"institution_names,omitempty"`
	// A list of ids of the financial institutions affected.
	InstitutionIds *[]string `json:"institution_ids,omitempty"`
	// The creation time of the record tracking this issue.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A simple summary of the error for the end user.
	Summary *string `json:"summary,omitempty"`
	// A more detailed description for the customer.
	DetailedDescription *string `json:"detailed_description,omitempty"`
	Status *IssuesStatus `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Issue Issue

// NewIssue instantiates a new Issue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssue() *Issue {
	this := Issue{}
	return &this
}

// NewIssueWithDefaults instantiates a new Issue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueWithDefaults() *Issue {
	this := Issue{}
	return &this
}

// GetIssueId returns the IssueId field value if set, zero value otherwise.
func (o *Issue) GetIssueId() string {
	if o == nil || o.IssueId == nil {
		var ret string
		return ret
	}
	return *o.IssueId
}

// GetIssueIdOk returns a tuple with the IssueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issue) GetIssueIdOk() (*string, bool) {
	if o == nil || o.IssueId == nil {
		return nil, false
	}
	return o.IssueId, true
}

// HasIssueId returns a boolean if a field has been set.
func (o *Issue) HasIssueId() bool {
	if o != nil && o.IssueId != nil {
		return true
	}

	return false
}

// SetIssueId gets a reference to the given string and assigns it to the IssueId field.
func (o *Issue) SetIssueId(v string) {
	o.IssueId = &v
}

// GetInstitutionNames returns the InstitutionNames field value if set, zero value otherwise.
func (o *Issue) GetInstitutionNames() []string {
	if o == nil || o.InstitutionNames == nil {
		var ret []string
		return ret
	}
	return *o.InstitutionNames
}

// GetInstitutionNamesOk returns a tuple with the InstitutionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issue) GetInstitutionNamesOk() (*[]string, bool) {
	if o == nil || o.InstitutionNames == nil {
		return nil, false
	}
	return o.InstitutionNames, true
}

// HasInstitutionNames returns a boolean if a field has been set.
func (o *Issue) HasInstitutionNames() bool {
	if o != nil && o.InstitutionNames != nil {
		return true
	}

	return false
}

// SetInstitutionNames gets a reference to the given []string and assigns it to the InstitutionNames field.
func (o *Issue) SetInstitutionNames(v []string) {
	o.InstitutionNames = &v
}

// GetInstitutionIds returns the InstitutionIds field value if set, zero value otherwise.
func (o *Issue) GetInstitutionIds() []string {
	if o == nil || o.InstitutionIds == nil {
		var ret []string
		return ret
	}
	return *o.InstitutionIds
}

// GetInstitutionIdsOk returns a tuple with the InstitutionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issue) GetInstitutionIdsOk() (*[]string, bool) {
	if o == nil || o.InstitutionIds == nil {
		return nil, false
	}
	return o.InstitutionIds, true
}

// HasInstitutionIds returns a boolean if a field has been set.
func (o *Issue) HasInstitutionIds() bool {
	if o != nil && o.InstitutionIds != nil {
		return true
	}

	return false
}

// SetInstitutionIds gets a reference to the given []string and assigns it to the InstitutionIds field.
func (o *Issue) SetInstitutionIds(v []string) {
	o.InstitutionIds = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Issue) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issue) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Issue) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Issue) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *Issue) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issue) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *Issue) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *Issue) SetSummary(v string) {
	o.Summary = &v
}

// GetDetailedDescription returns the DetailedDescription field value if set, zero value otherwise.
func (o *Issue) GetDetailedDescription() string {
	if o == nil || o.DetailedDescription == nil {
		var ret string
		return ret
	}
	return *o.DetailedDescription
}

// GetDetailedDescriptionOk returns a tuple with the DetailedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issue) GetDetailedDescriptionOk() (*string, bool) {
	if o == nil || o.DetailedDescription == nil {
		return nil, false
	}
	return o.DetailedDescription, true
}

// HasDetailedDescription returns a boolean if a field has been set.
func (o *Issue) HasDetailedDescription() bool {
	if o != nil && o.DetailedDescription != nil {
		return true
	}

	return false
}

// SetDetailedDescription gets a reference to the given string and assigns it to the DetailedDescription field.
func (o *Issue) SetDetailedDescription(v string) {
	o.DetailedDescription = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Issue) GetStatus() IssuesStatus {
	if o == nil || o.Status == nil {
		var ret IssuesStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issue) GetStatusOk() (*IssuesStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Issue) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given IssuesStatus and assigns it to the Status field.
func (o *Issue) SetStatus(v IssuesStatus) {
	o.Status = &v
}

func (o Issue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IssueId != nil {
		toSerialize["issue_id"] = o.IssueId
	}
	if o.InstitutionNames != nil {
		toSerialize["institution_names"] = o.InstitutionNames
	}
	if o.InstitutionIds != nil {
		toSerialize["institution_ids"] = o.InstitutionIds
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.DetailedDescription != nil {
		toSerialize["detailed_description"] = o.DetailedDescription
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *Issue) UnmarshalJSON(bytes []byte) (err error) {
	varIssue := _Issue{}

	if err = json.Unmarshal(bytes, &varIssue); err == nil {
		*o = Issue(varIssue)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "issue_id")
		delete(additionalProperties, "institution_names")
		delete(additionalProperties, "institution_ids")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "summary")
		delete(additionalProperties, "detailed_description")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIssue struct {
	value *Issue
	isSet bool
}

func (v NullableIssue) Get() *Issue {
	return v.value
}

func (v *NullableIssue) Set(val *Issue) {
	v.value = val
	v.isSet = true
}

func (v NullableIssue) IsSet() bool {
	return v.isSet
}

func (v *NullableIssue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssue(val *Issue) *NullableIssue {
	return &NullableIssue{value: val, isSet: true}
}

func (v NullableIssue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


