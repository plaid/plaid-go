/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.610.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// NetworkStatusGetResponseNetworkStatus Enum representing the overall network status of the user.
type NetworkStatusGetResponseNetworkStatus string

var _ = fmt.Printf

// List of NetworkStatusGetResponseNetworkStatus
const (
	NETWORKSTATUSGETRESPONSENETWORKSTATUS_UNKNOWN NetworkStatusGetResponseNetworkStatus = "UNKNOWN"
	NETWORKSTATUSGETRESPONSENETWORKSTATUS_RETURNING_USER NetworkStatusGetResponseNetworkStatus = "RETURNING_USER"
)

var allowedNetworkStatusGetResponseNetworkStatusEnumValues = []NetworkStatusGetResponseNetworkStatus{
	"UNKNOWN",
	"RETURNING_USER",
}

func (v *NetworkStatusGetResponseNetworkStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := NetworkStatusGetResponseNetworkStatus(value)


	*v = enumTypeValue
	return nil
}

// NewNetworkStatusGetResponseNetworkStatusFromValue returns a pointer to a valid NetworkStatusGetResponseNetworkStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkStatusGetResponseNetworkStatusFromValue(v string) (*NetworkStatusGetResponseNetworkStatus, error) {
	ev := NetworkStatusGetResponseNetworkStatus(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkStatusGetResponseNetworkStatus) IsValid() bool {
	for _, existing := range allowedNetworkStatusGetResponseNetworkStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NetworkStatusGetResponseNetworkStatus value
func (v NetworkStatusGetResponseNetworkStatus) Ptr() *NetworkStatusGetResponseNetworkStatus {
	return &v
}

type NullableNetworkStatusGetResponseNetworkStatus struct {
	value *NetworkStatusGetResponseNetworkStatus
	isSet bool
}

func (v NullableNetworkStatusGetResponseNetworkStatus) Get() *NetworkStatusGetResponseNetworkStatus {
	return v.value
}

func (v *NullableNetworkStatusGetResponseNetworkStatus) Set(val *NetworkStatusGetResponseNetworkStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkStatusGetResponseNetworkStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkStatusGetResponseNetworkStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkStatusGetResponseNetworkStatus(val *NetworkStatusGetResponseNetworkStatus) *NullableNetworkStatusGetResponseNetworkStatus {
	return &NullableNetworkStatusGetResponseNetworkStatus{value: val, isSet: true}
}

func (v NullableNetworkStatusGetResponseNetworkStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkStatusGetResponseNetworkStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

