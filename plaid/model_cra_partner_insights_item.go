/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraPartnerInsightsItem The details and metadata for an end user's Item.
type CraPartnerInsightsItem struct {
	// The ID for the institution that the user linked.
	InstitutionId *string `json:"institution_id,omitempty"`
	// The name of the institution the user linked.
	InstitutionName *string `json:"institution_name,omitempty"`
	// The identifier for the item.
	ItemId *string `json:"item_id,omitempty"`
	// A list of accounts in the item
	Accounts *[]CraPartnerInsightsItemAccount `json:"accounts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CraPartnerInsightsItem CraPartnerInsightsItem

// NewCraPartnerInsightsItem instantiates a new CraPartnerInsightsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraPartnerInsightsItem() *CraPartnerInsightsItem {
	this := CraPartnerInsightsItem{}
	return &this
}

// NewCraPartnerInsightsItemWithDefaults instantiates a new CraPartnerInsightsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraPartnerInsightsItemWithDefaults() *CraPartnerInsightsItem {
	this := CraPartnerInsightsItem{}
	return &this
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise.
func (o *CraPartnerInsightsItem) GetInstitutionId() string {
	if o == nil || o.InstitutionId == nil {
		var ret string
		return ret
	}
	return *o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItem) GetInstitutionIdOk() (*string, bool) {
	if o == nil || o.InstitutionId == nil {
		return nil, false
	}
	return o.InstitutionId, true
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *CraPartnerInsightsItem) HasInstitutionId() bool {
	if o != nil && o.InstitutionId != nil {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given string and assigns it to the InstitutionId field.
func (o *CraPartnerInsightsItem) SetInstitutionId(v string) {
	o.InstitutionId = &v
}

// GetInstitutionName returns the InstitutionName field value if set, zero value otherwise.
func (o *CraPartnerInsightsItem) GetInstitutionName() string {
	if o == nil || o.InstitutionName == nil {
		var ret string
		return ret
	}
	return *o.InstitutionName
}

// GetInstitutionNameOk returns a tuple with the InstitutionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItem) GetInstitutionNameOk() (*string, bool) {
	if o == nil || o.InstitutionName == nil {
		return nil, false
	}
	return o.InstitutionName, true
}

// HasInstitutionName returns a boolean if a field has been set.
func (o *CraPartnerInsightsItem) HasInstitutionName() bool {
	if o != nil && o.InstitutionName != nil {
		return true
	}

	return false
}

// SetInstitutionName gets a reference to the given string and assigns it to the InstitutionName field.
func (o *CraPartnerInsightsItem) SetInstitutionName(v string) {
	o.InstitutionName = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *CraPartnerInsightsItem) GetItemId() string {
	if o == nil || o.ItemId == nil {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItem) GetItemIdOk() (*string, bool) {
	if o == nil || o.ItemId == nil {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *CraPartnerInsightsItem) HasItemId() bool {
	if o != nil && o.ItemId != nil {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *CraPartnerInsightsItem) SetItemId(v string) {
	o.ItemId = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *CraPartnerInsightsItem) GetAccounts() []CraPartnerInsightsItemAccount {
	if o == nil || o.Accounts == nil {
		var ret []CraPartnerInsightsItemAccount
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraPartnerInsightsItem) GetAccountsOk() (*[]CraPartnerInsightsItemAccount, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *CraPartnerInsightsItem) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []CraPartnerInsightsItemAccount and assigns it to the Accounts field.
func (o *CraPartnerInsightsItem) SetAccounts(v []CraPartnerInsightsItemAccount) {
	o.Accounts = &v
}

func (o CraPartnerInsightsItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstitutionId != nil {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if o.InstitutionName != nil {
		toSerialize["institution_name"] = o.InstitutionName
	}
	if o.ItemId != nil {
		toSerialize["item_id"] = o.ItemId
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraPartnerInsightsItem) UnmarshalJSON(bytes []byte) (err error) {
	varCraPartnerInsightsItem := _CraPartnerInsightsItem{}

	if err = json.Unmarshal(bytes, &varCraPartnerInsightsItem); err == nil {
		*o = CraPartnerInsightsItem(varCraPartnerInsightsItem)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "institution_id")
		delete(additionalProperties, "institution_name")
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "accounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraPartnerInsightsItem struct {
	value *CraPartnerInsightsItem
	isSet bool
}

func (v NullableCraPartnerInsightsItem) Get() *CraPartnerInsightsItem {
	return v.value
}

func (v *NullableCraPartnerInsightsItem) Set(val *CraPartnerInsightsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCraPartnerInsightsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCraPartnerInsightsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraPartnerInsightsItem(val *CraPartnerInsightsItem) *NullableCraPartnerInsightsItem {
	return &NullableCraPartnerInsightsItem{value: val, isSet: true}
}

func (v NullableCraPartnerInsightsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraPartnerInsightsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


