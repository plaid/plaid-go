/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TrustedDeviceData Trusted Device data associated with the previous Link session.
type TrustedDeviceData struct {
	TrustLevel *int32 `json:"trust_level,omitempty"`
	DeviceId *DeviceId `json:"device_id,omitempty"`
}

// NewTrustedDeviceData instantiates a new TrustedDeviceData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrustedDeviceData() *TrustedDeviceData {
	this := TrustedDeviceData{}
	return &this
}

// NewTrustedDeviceDataWithDefaults instantiates a new TrustedDeviceData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustedDeviceDataWithDefaults() *TrustedDeviceData {
	this := TrustedDeviceData{}
	return &this
}

// GetTrustLevel returns the TrustLevel field value if set, zero value otherwise.
func (o *TrustedDeviceData) GetTrustLevel() int32 {
	if o == nil || o.TrustLevel == nil {
		var ret int32
		return ret
	}
	return *o.TrustLevel
}

// GetTrustLevelOk returns a tuple with the TrustLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustedDeviceData) GetTrustLevelOk() (*int32, bool) {
	if o == nil || o.TrustLevel == nil {
		return nil, false
	}
	return o.TrustLevel, true
}

// HasTrustLevel returns a boolean if a field has been set.
func (o *TrustedDeviceData) HasTrustLevel() bool {
	if o != nil && o.TrustLevel != nil {
		return true
	}

	return false
}

// SetTrustLevel gets a reference to the given int32 and assigns it to the TrustLevel field.
func (o *TrustedDeviceData) SetTrustLevel(v int32) {
	o.TrustLevel = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *TrustedDeviceData) GetDeviceId() DeviceId {
	if o == nil || o.DeviceId == nil {
		var ret DeviceId
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustedDeviceData) GetDeviceIdOk() (*DeviceId, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *TrustedDeviceData) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given DeviceId and assigns it to the DeviceId field.
func (o *TrustedDeviceData) SetDeviceId(v DeviceId) {
	o.DeviceId = &v
}

func (o TrustedDeviceData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TrustLevel != nil {
		toSerialize["trust_level"] = o.TrustLevel
	}
	if o.DeviceId != nil {
		toSerialize["device_id"] = o.DeviceId
	}
	return json.Marshal(toSerialize)
}

type NullableTrustedDeviceData struct {
	value *TrustedDeviceData
	isSet bool
}

func (v NullableTrustedDeviceData) Get() *TrustedDeviceData {
	return v.value
}

func (v *NullableTrustedDeviceData) Set(val *TrustedDeviceData) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustedDeviceData) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustedDeviceData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustedDeviceData(val *TrustedDeviceData) *NullableTrustedDeviceData {
	return &NullableTrustedDeviceData{value: val, isSet: true}
}

func (v NullableTrustedDeviceData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustedDeviceData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


