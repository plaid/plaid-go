/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// SMSVerificationStatus The outcome status for the individual SMS verification.
type SMSVerificationStatus string

var _ = fmt.Printf

// List of SMSVerificationStatus
const (
	SMSVERIFICATIONSTATUS_PENDING SMSVerificationStatus = "pending"
	SMSVERIFICATIONSTATUS_SUCCESS SMSVerificationStatus = "success"
	SMSVERIFICATIONSTATUS_FAILED SMSVerificationStatus = "failed"
	SMSVERIFICATIONSTATUS_CANCELED SMSVerificationStatus = "canceled"
)

var allowedSMSVerificationStatusEnumValues = []SMSVerificationStatus{
	"pending",
	"success",
	"failed",
	"canceled",
}

func (v *SMSVerificationStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := SMSVerificationStatus(value)


	*v = enumTypeValue
	return nil
}

// NewSMSVerificationStatusFromValue returns a pointer to a valid SMSVerificationStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSMSVerificationStatusFromValue(v string) (*SMSVerificationStatus, error) {
	ev := SMSVerificationStatus(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SMSVerificationStatus) IsValid() bool {
	for _, existing := range allowedSMSVerificationStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SMSVerificationStatus value
func (v SMSVerificationStatus) Ptr() *SMSVerificationStatus {
	return &v
}

type NullableSMSVerificationStatus struct {
	value *SMSVerificationStatus
	isSet bool
}

func (v NullableSMSVerificationStatus) Get() *SMSVerificationStatus {
	return v.value
}

func (v *NullableSMSVerificationStatus) Set(val *SMSVerificationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSMSVerificationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSMSVerificationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSMSVerificationStatus(val *SMSVerificationStatus) *NullableSMSVerificationStatus {
	return &NullableSMSVerificationStatus{value: val, isSet: true}
}

func (v NullableSMSVerificationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSMSVerificationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

