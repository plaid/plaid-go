/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.21.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferAuthorizationProposedTransfer Details regarding the proposed transfer.
type TransferAuthorizationProposedTransfer struct {
	AchClass *ACHClass `json:"ach_class,omitempty"`
	// The Plaid `account_id` for the account that will be debited or credited.
	AccountId *string `json:"account_id,omitempty"`
	Type *TransferType `json:"type,omitempty"`
	User *TransferUser `json:"user,omitempty"`
	// The amount of the transfer (decimal string with two digits of precision e.g. “10.00”).
	Amount *string `json:"amount,omitempty"`
	// The currency of the transfer amount.
	IsoCurrencyCode *string `json:"iso_currency_code,omitempty"`
	// A description of the proposed transfer.
	Description *string `json:"description,omitempty"`
	// The network or rails used for the transfer.
	Network *string `json:"network,omitempty"`
	// Plaid's unique identifier for the origination account that was used for this transfer.
	OriginationAccountId *string `json:"origination_account_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransferAuthorizationProposedTransfer TransferAuthorizationProposedTransfer

// NewTransferAuthorizationProposedTransfer instantiates a new TransferAuthorizationProposedTransfer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferAuthorizationProposedTransfer() *TransferAuthorizationProposedTransfer {
	this := TransferAuthorizationProposedTransfer{}
	return &this
}

// NewTransferAuthorizationProposedTransferWithDefaults instantiates a new TransferAuthorizationProposedTransfer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferAuthorizationProposedTransferWithDefaults() *TransferAuthorizationProposedTransfer {
	this := TransferAuthorizationProposedTransfer{}
	return &this
}

// GetAchClass returns the AchClass field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetAchClass() ACHClass {
	if o == nil || o.AchClass == nil {
		var ret ACHClass
		return ret
	}
	return *o.AchClass
}

// GetAchClassOk returns a tuple with the AchClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetAchClassOk() (*ACHClass, bool) {
	if o == nil || o.AchClass == nil {
		return nil, false
	}
	return o.AchClass, true
}

// HasAchClass returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasAchClass() bool {
	if o != nil && o.AchClass != nil {
		return true
	}

	return false
}

// SetAchClass gets a reference to the given ACHClass and assigns it to the AchClass field.
func (o *TransferAuthorizationProposedTransfer) SetAchClass(v ACHClass) {
	o.AchClass = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *TransferAuthorizationProposedTransfer) SetAccountId(v string) {
	o.AccountId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetType() TransferType {
	if o == nil || o.Type == nil {
		var ret TransferType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetTypeOk() (*TransferType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given TransferType and assigns it to the Type field.
func (o *TransferAuthorizationProposedTransfer) SetType(v TransferType) {
	o.Type = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetUser() TransferUser {
	if o == nil || o.User == nil {
		var ret TransferUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetUserOk() (*TransferUser, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given TransferUser and assigns it to the User field.
func (o *TransferAuthorizationProposedTransfer) SetUser(v TransferUser) {
	o.User = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *TransferAuthorizationProposedTransfer) SetAmount(v string) {
	o.Amount = &v
}

// GetIsoCurrencyCode returns the IsoCurrencyCode field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetIsoCurrencyCode() string {
	if o == nil || o.IsoCurrencyCode == nil {
		var ret string
		return ret
	}
	return *o.IsoCurrencyCode
}

// GetIsoCurrencyCodeOk returns a tuple with the IsoCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetIsoCurrencyCodeOk() (*string, bool) {
	if o == nil || o.IsoCurrencyCode == nil {
		return nil, false
	}
	return o.IsoCurrencyCode, true
}

// HasIsoCurrencyCode returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasIsoCurrencyCode() bool {
	if o != nil && o.IsoCurrencyCode != nil {
		return true
	}

	return false
}

// SetIsoCurrencyCode gets a reference to the given string and assigns it to the IsoCurrencyCode field.
func (o *TransferAuthorizationProposedTransfer) SetIsoCurrencyCode(v string) {
	o.IsoCurrencyCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TransferAuthorizationProposedTransfer) SetDescription(v string) {
	o.Description = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *TransferAuthorizationProposedTransfer) SetNetwork(v string) {
	o.Network = &v
}

// GetOriginationAccountId returns the OriginationAccountId field value if set, zero value otherwise.
func (o *TransferAuthorizationProposedTransfer) GetOriginationAccountId() string {
	if o == nil || o.OriginationAccountId == nil {
		var ret string
		return ret
	}
	return *o.OriginationAccountId
}

// GetOriginationAccountIdOk returns a tuple with the OriginationAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferAuthorizationProposedTransfer) GetOriginationAccountIdOk() (*string, bool) {
	if o == nil || o.OriginationAccountId == nil {
		return nil, false
	}
	return o.OriginationAccountId, true
}

// HasOriginationAccountId returns a boolean if a field has been set.
func (o *TransferAuthorizationProposedTransfer) HasOriginationAccountId() bool {
	if o != nil && o.OriginationAccountId != nil {
		return true
	}

	return false
}

// SetOriginationAccountId gets a reference to the given string and assigns it to the OriginationAccountId field.
func (o *TransferAuthorizationProposedTransfer) SetOriginationAccountId(v string) {
	o.OriginationAccountId = &v
}

func (o TransferAuthorizationProposedTransfer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AchClass != nil {
		toSerialize["ach_class"] = o.AchClass
	}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.IsoCurrencyCode != nil {
		toSerialize["iso_currency_code"] = o.IsoCurrencyCode
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.OriginationAccountId != nil {
		toSerialize["origination_account_id"] = o.OriginationAccountId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransferAuthorizationProposedTransfer) UnmarshalJSON(bytes []byte) (err error) {
	varTransferAuthorizationProposedTransfer := _TransferAuthorizationProposedTransfer{}

	if err = json.Unmarshal(bytes, &varTransferAuthorizationProposedTransfer); err == nil {
		*o = TransferAuthorizationProposedTransfer(varTransferAuthorizationProposedTransfer)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ach_class")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "user")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "iso_currency_code")
		delete(additionalProperties, "description")
		delete(additionalProperties, "network")
		delete(additionalProperties, "origination_account_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransferAuthorizationProposedTransfer struct {
	value *TransferAuthorizationProposedTransfer
	isSet bool
}

func (v NullableTransferAuthorizationProposedTransfer) Get() *TransferAuthorizationProposedTransfer {
	return v.value
}

func (v *NullableTransferAuthorizationProposedTransfer) Set(val *TransferAuthorizationProposedTransfer) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferAuthorizationProposedTransfer) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferAuthorizationProposedTransfer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferAuthorizationProposedTransfer(val *TransferAuthorizationProposedTransfer) *NullableTransferAuthorizationProposedTransfer {
	return &NullableTransferAuthorizationProposedTransfer{value: val, isSet: true}
}

func (v NullableTransferAuthorizationProposedTransfer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferAuthorizationProposedTransfer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


