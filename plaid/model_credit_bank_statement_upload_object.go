/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.391.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CreditBankStatementUploadObject An object containing data that has been parsed from a user-uploaded bank statement.
type CreditBankStatementUploadObject struct {
	// An array of transactions appearing on the bank statement.
	Transactions []CreditBankStatementUploadTransaction `json:"transactions"`
	DocumentMetadata CreditDocumentMetadata `json:"document_metadata"`
	// An identifier of the document referenced by the document metadata.
	DocumentId NullableString `json:"document_id"`
	// An array of bank accounts associated with the uploaded bank statement.
	BankAccounts []CreditBankStatementUploadBankAccount `json:"bank_accounts"`
	AdditionalProperties map[string]interface{}
}

type _CreditBankStatementUploadObject CreditBankStatementUploadObject

// NewCreditBankStatementUploadObject instantiates a new CreditBankStatementUploadObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditBankStatementUploadObject(transactions []CreditBankStatementUploadTransaction, documentMetadata CreditDocumentMetadata, documentId NullableString, bankAccounts []CreditBankStatementUploadBankAccount) *CreditBankStatementUploadObject {
	this := CreditBankStatementUploadObject{}
	this.Transactions = transactions
	this.DocumentMetadata = documentMetadata
	this.DocumentId = documentId
	this.BankAccounts = bankAccounts
	return &this
}

// NewCreditBankStatementUploadObjectWithDefaults instantiates a new CreditBankStatementUploadObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditBankStatementUploadObjectWithDefaults() *CreditBankStatementUploadObject {
	this := CreditBankStatementUploadObject{}
	return &this
}

// GetTransactions returns the Transactions field value
func (o *CreditBankStatementUploadObject) GetTransactions() []CreditBankStatementUploadTransaction {
	if o == nil {
		var ret []CreditBankStatementUploadTransaction
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *CreditBankStatementUploadObject) GetTransactionsOk() (*[]CreditBankStatementUploadTransaction, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Transactions, true
}

// SetTransactions sets field value
func (o *CreditBankStatementUploadObject) SetTransactions(v []CreditBankStatementUploadTransaction) {
	o.Transactions = v
}

// GetDocumentMetadata returns the DocumentMetadata field value
func (o *CreditBankStatementUploadObject) GetDocumentMetadata() CreditDocumentMetadata {
	if o == nil {
		var ret CreditDocumentMetadata
		return ret
	}

	return o.DocumentMetadata
}

// GetDocumentMetadataOk returns a tuple with the DocumentMetadata field value
// and a boolean to check if the value has been set.
func (o *CreditBankStatementUploadObject) GetDocumentMetadataOk() (*CreditDocumentMetadata, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DocumentMetadata, true
}

// SetDocumentMetadata sets field value
func (o *CreditBankStatementUploadObject) SetDocumentMetadata(v CreditDocumentMetadata) {
	o.DocumentMetadata = v
}

// GetDocumentId returns the DocumentId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreditBankStatementUploadObject) GetDocumentId() string {
	if o == nil || o.DocumentId.Get() == nil {
		var ret string
		return ret
	}

	return *o.DocumentId.Get()
}

// GetDocumentIdOk returns a tuple with the DocumentId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditBankStatementUploadObject) GetDocumentIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DocumentId.Get(), o.DocumentId.IsSet()
}

// SetDocumentId sets field value
func (o *CreditBankStatementUploadObject) SetDocumentId(v string) {
	o.DocumentId.Set(&v)
}

// GetBankAccounts returns the BankAccounts field value
func (o *CreditBankStatementUploadObject) GetBankAccounts() []CreditBankStatementUploadBankAccount {
	if o == nil {
		var ret []CreditBankStatementUploadBankAccount
		return ret
	}

	return o.BankAccounts
}

// GetBankAccountsOk returns a tuple with the BankAccounts field value
// and a boolean to check if the value has been set.
func (o *CreditBankStatementUploadObject) GetBankAccountsOk() (*[]CreditBankStatementUploadBankAccount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankAccounts, true
}

// SetBankAccounts sets field value
func (o *CreditBankStatementUploadObject) SetBankAccounts(v []CreditBankStatementUploadBankAccount) {
	o.BankAccounts = v
}

func (o CreditBankStatementUploadObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transactions"] = o.Transactions
	}
	if true {
		toSerialize["document_metadata"] = o.DocumentMetadata
	}
	if true {
		toSerialize["document_id"] = o.DocumentId.Get()
	}
	if true {
		toSerialize["bank_accounts"] = o.BankAccounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreditBankStatementUploadObject) UnmarshalJSON(bytes []byte) (err error) {
	varCreditBankStatementUploadObject := _CreditBankStatementUploadObject{}

	if err = json.Unmarshal(bytes, &varCreditBankStatementUploadObject); err == nil {
		*o = CreditBankStatementUploadObject(varCreditBankStatementUploadObject)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "transactions")
		delete(additionalProperties, "document_metadata")
		delete(additionalProperties, "document_id")
		delete(additionalProperties, "bank_accounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreditBankStatementUploadObject struct {
	value *CreditBankStatementUploadObject
	isSet bool
}

func (v NullableCreditBankStatementUploadObject) Get() *CreditBankStatementUploadObject {
	return v.value
}

func (v *NullableCreditBankStatementUploadObject) Set(val *CreditBankStatementUploadObject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditBankStatementUploadObject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditBankStatementUploadObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditBankStatementUploadObject(val *CreditBankStatementUploadObject) *NullableCreditBankStatementUploadObject {
	return &NullableCreditBankStatementUploadObject{value: val, isSet: true}
}

func (v NullableCreditBankStatementUploadObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditBankStatementUploadObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


