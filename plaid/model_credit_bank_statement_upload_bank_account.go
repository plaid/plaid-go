/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.391.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CreditBankStatementUploadBankAccount An object containing data about a user's bank account related to an uploaded bank statement.
type CreditBankStatementUploadBankAccount struct {
	// The name of the bank account
	Name NullableString `json:"name"`
	// The name of the bank institution.
	BankName NullableString `json:"bank_name"`
	// The type of the bank account.
	AccountType NullableString `json:"account_type"`
	// The bank account number.
	AccountNumber NullableString `json:"account_number"`
	Owner CreditBankStatementUploadAccountOwner `json:"owner"`
	// An array of period objects, containing more data on the overall period of the statement.
	Periods []CreditBankStatementUploadBankAccountPeriod `json:"periods"`
	// The unique id of the bank account
	AccountId NullableString `json:"account_id"`
	AdditionalProperties map[string]interface{}
}

type _CreditBankStatementUploadBankAccount CreditBankStatementUploadBankAccount

// NewCreditBankStatementUploadBankAccount instantiates a new CreditBankStatementUploadBankAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditBankStatementUploadBankAccount(name NullableString, bankName NullableString, accountType NullableString, accountNumber NullableString, owner CreditBankStatementUploadAccountOwner, periods []CreditBankStatementUploadBankAccountPeriod, accountId NullableString) *CreditBankStatementUploadBankAccount {
	this := CreditBankStatementUploadBankAccount{}
	this.Name = name
	this.BankName = bankName
	this.AccountType = accountType
	this.AccountNumber = accountNumber
	this.Owner = owner
	this.Periods = periods
	this.AccountId = accountId
	return &this
}

// NewCreditBankStatementUploadBankAccountWithDefaults instantiates a new CreditBankStatementUploadBankAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditBankStatementUploadBankAccountWithDefaults() *CreditBankStatementUploadBankAccount {
	this := CreditBankStatementUploadBankAccount{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreditBankStatementUploadBankAccount) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditBankStatementUploadBankAccount) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreditBankStatementUploadBankAccount) SetName(v string) {
	o.Name.Set(&v)
}

// GetBankName returns the BankName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreditBankStatementUploadBankAccount) GetBankName() string {
	if o == nil || o.BankName.Get() == nil {
		var ret string
		return ret
	}

	return *o.BankName.Get()
}

// GetBankNameOk returns a tuple with the BankName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditBankStatementUploadBankAccount) GetBankNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BankName.Get(), o.BankName.IsSet()
}

// SetBankName sets field value
func (o *CreditBankStatementUploadBankAccount) SetBankName(v string) {
	o.BankName.Set(&v)
}

// GetAccountType returns the AccountType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreditBankStatementUploadBankAccount) GetAccountType() string {
	if o == nil || o.AccountType.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountType.Get()
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditBankStatementUploadBankAccount) GetAccountTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountType.Get(), o.AccountType.IsSet()
}

// SetAccountType sets field value
func (o *CreditBankStatementUploadBankAccount) SetAccountType(v string) {
	o.AccountType.Set(&v)
}

// GetAccountNumber returns the AccountNumber field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreditBankStatementUploadBankAccount) GetAccountNumber() string {
	if o == nil || o.AccountNumber.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountNumber.Get()
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditBankStatementUploadBankAccount) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountNumber.Get(), o.AccountNumber.IsSet()
}

// SetAccountNumber sets field value
func (o *CreditBankStatementUploadBankAccount) SetAccountNumber(v string) {
	o.AccountNumber.Set(&v)
}

// GetOwner returns the Owner field value
func (o *CreditBankStatementUploadBankAccount) GetOwner() CreditBankStatementUploadAccountOwner {
	if o == nil {
		var ret CreditBankStatementUploadAccountOwner
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *CreditBankStatementUploadBankAccount) GetOwnerOk() (*CreditBankStatementUploadAccountOwner, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *CreditBankStatementUploadBankAccount) SetOwner(v CreditBankStatementUploadAccountOwner) {
	o.Owner = v
}

// GetPeriods returns the Periods field value
func (o *CreditBankStatementUploadBankAccount) GetPeriods() []CreditBankStatementUploadBankAccountPeriod {
	if o == nil {
		var ret []CreditBankStatementUploadBankAccountPeriod
		return ret
	}

	return o.Periods
}

// GetPeriodsOk returns a tuple with the Periods field value
// and a boolean to check if the value has been set.
func (o *CreditBankStatementUploadBankAccount) GetPeriodsOk() (*[]CreditBankStatementUploadBankAccountPeriod, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Periods, true
}

// SetPeriods sets field value
func (o *CreditBankStatementUploadBankAccount) SetPeriods(v []CreditBankStatementUploadBankAccountPeriod) {
	o.Periods = v
}

// GetAccountId returns the AccountId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreditBankStatementUploadBankAccount) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditBankStatementUploadBankAccount) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// SetAccountId sets field value
func (o *CreditBankStatementUploadBankAccount) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

func (o CreditBankStatementUploadBankAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["bank_name"] = o.BankName.Get()
	}
	if true {
		toSerialize["account_type"] = o.AccountType.Get()
	}
	if true {
		toSerialize["account_number"] = o.AccountNumber.Get()
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["periods"] = o.Periods
	}
	if true {
		toSerialize["account_id"] = o.AccountId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreditBankStatementUploadBankAccount) UnmarshalJSON(bytes []byte) (err error) {
	varCreditBankStatementUploadBankAccount := _CreditBankStatementUploadBankAccount{}

	if err = json.Unmarshal(bytes, &varCreditBankStatementUploadBankAccount); err == nil {
		*o = CreditBankStatementUploadBankAccount(varCreditBankStatementUploadBankAccount)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "bank_name")
		delete(additionalProperties, "account_type")
		delete(additionalProperties, "account_number")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "periods")
		delete(additionalProperties, "account_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreditBankStatementUploadBankAccount struct {
	value *CreditBankStatementUploadBankAccount
	isSet bool
}

func (v NullableCreditBankStatementUploadBankAccount) Get() *CreditBankStatementUploadBankAccount {
	return v.value
}

func (v *NullableCreditBankStatementUploadBankAccount) Set(val *CreditBankStatementUploadBankAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditBankStatementUploadBankAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditBankStatementUploadBankAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditBankStatementUploadBankAccount(val *CreditBankStatementUploadBankAccount) *NullableCreditBankStatementUploadBankAccount {
	return &NullableCreditBankStatementUploadBankAccount{value: val, isSet: true}
}

func (v NullableCreditBankStatementUploadBankAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditBankStatementUploadBankAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


