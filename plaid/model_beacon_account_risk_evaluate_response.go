/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconAccountRiskEvaluateResponse BeaconAccountRiskEvaluateResponse defines the response schema for `/beacon/account_risk/v1/evaluate`
type BeaconAccountRiskEvaluateResponse struct {
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	// The accounts for which a risk evaluation has been requested.
	Accounts []BeaconAccountRiskEvaluateAccount `json:"accounts"`
	AdditionalProperties map[string]interface{}
}

type _BeaconAccountRiskEvaluateResponse BeaconAccountRiskEvaluateResponse

// NewBeaconAccountRiskEvaluateResponse instantiates a new BeaconAccountRiskEvaluateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconAccountRiskEvaluateResponse(requestId string, accounts []BeaconAccountRiskEvaluateAccount) *BeaconAccountRiskEvaluateResponse {
	this := BeaconAccountRiskEvaluateResponse{}
	this.RequestId = requestId
	this.Accounts = accounts
	return &this
}

// NewBeaconAccountRiskEvaluateResponseWithDefaults instantiates a new BeaconAccountRiskEvaluateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconAccountRiskEvaluateResponseWithDefaults() *BeaconAccountRiskEvaluateResponse {
	this := BeaconAccountRiskEvaluateResponse{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *BeaconAccountRiskEvaluateResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *BeaconAccountRiskEvaluateResponse) SetRequestId(v string) {
	o.RequestId = v
}

// GetAccounts returns the Accounts field value
func (o *BeaconAccountRiskEvaluateResponse) GetAccounts() []BeaconAccountRiskEvaluateAccount {
	if o == nil {
		var ret []BeaconAccountRiskEvaluateAccount
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *BeaconAccountRiskEvaluateResponse) GetAccountsOk() (*[]BeaconAccountRiskEvaluateAccount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Accounts, true
}

// SetAccounts sets field value
func (o *BeaconAccountRiskEvaluateResponse) SetAccounts(v []BeaconAccountRiskEvaluateAccount) {
	o.Accounts = v
}

func (o BeaconAccountRiskEvaluateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["request_id"] = o.RequestId
	}
	if true {
		toSerialize["accounts"] = o.Accounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconAccountRiskEvaluateResponse) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconAccountRiskEvaluateResponse := _BeaconAccountRiskEvaluateResponse{}

	if err = json.Unmarshal(bytes, &varBeaconAccountRiskEvaluateResponse); err == nil {
		*o = BeaconAccountRiskEvaluateResponse(varBeaconAccountRiskEvaluateResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "request_id")
		delete(additionalProperties, "accounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconAccountRiskEvaluateResponse struct {
	value *BeaconAccountRiskEvaluateResponse
	isSet bool
}

func (v NullableBeaconAccountRiskEvaluateResponse) Get() *BeaconAccountRiskEvaluateResponse {
	return v.value
}

func (v *NullableBeaconAccountRiskEvaluateResponse) Set(val *BeaconAccountRiskEvaluateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconAccountRiskEvaluateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconAccountRiskEvaluateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconAccountRiskEvaluateResponse(val *BeaconAccountRiskEvaluateResponse) *NullableBeaconAccountRiskEvaluateResponse {
	return &NullableBeaconAccountRiskEvaluateResponse{value: val, isSet: true}
}

func (v NullableBeaconAccountRiskEvaluateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconAccountRiskEvaluateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


