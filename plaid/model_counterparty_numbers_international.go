/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.658.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CounterpartyNumbersInternational Account numbers using the International Bank Account Number and BIC/SWIFT code format.
type CounterpartyNumbersInternational struct {
	Iban NullableNumbersIBANNullable `json:"iban,omitempty"`
	// Bank identifier code (BIC) for this counterparty.
	Bic NullableString `json:"bic,omitempty"`
}

// NewCounterpartyNumbersInternational instantiates a new CounterpartyNumbersInternational object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCounterpartyNumbersInternational() *CounterpartyNumbersInternational {
	this := CounterpartyNumbersInternational{}
	return &this
}

// NewCounterpartyNumbersInternationalWithDefaults instantiates a new CounterpartyNumbersInternational object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCounterpartyNumbersInternationalWithDefaults() *CounterpartyNumbersInternational {
	this := CounterpartyNumbersInternational{}
	return &this
}

// GetIban returns the Iban field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CounterpartyNumbersInternational) GetIban() NumbersIBANNullable {
	if o == nil || o.Iban.Get() == nil {
		var ret NumbersIBANNullable
		return ret
	}
	return *o.Iban.Get()
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CounterpartyNumbersInternational) GetIbanOk() (*NumbersIBANNullable, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Iban.Get(), o.Iban.IsSet()
}

// HasIban returns a boolean if a field has been set.
func (o *CounterpartyNumbersInternational) HasIban() bool {
	if o != nil && o.Iban.IsSet() {
		return true
	}

	return false
}

// SetIban gets a reference to the given NullableNumbersIBANNullable and assigns it to the Iban field.
func (o *CounterpartyNumbersInternational) SetIban(v NumbersIBANNullable) {
	o.Iban.Set(&v)
}
// SetIbanNil sets the value for Iban to be an explicit nil
func (o *CounterpartyNumbersInternational) SetIbanNil() {
	o.Iban.Set(nil)
}

// UnsetIban ensures that no value is present for Iban, not even an explicit nil
func (o *CounterpartyNumbersInternational) UnsetIban() {
	o.Iban.Unset()
}

// GetBic returns the Bic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CounterpartyNumbersInternational) GetBic() string {
	if o == nil || o.Bic.Get() == nil {
		var ret string
		return ret
	}
	return *o.Bic.Get()
}

// GetBicOk returns a tuple with the Bic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CounterpartyNumbersInternational) GetBicOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Bic.Get(), o.Bic.IsSet()
}

// HasBic returns a boolean if a field has been set.
func (o *CounterpartyNumbersInternational) HasBic() bool {
	if o != nil && o.Bic.IsSet() {
		return true
	}

	return false
}

// SetBic gets a reference to the given NullableString and assigns it to the Bic field.
func (o *CounterpartyNumbersInternational) SetBic(v string) {
	o.Bic.Set(&v)
}
// SetBicNil sets the value for Bic to be an explicit nil
func (o *CounterpartyNumbersInternational) SetBicNil() {
	o.Bic.Set(nil)
}

// UnsetBic ensures that no value is present for Bic, not even an explicit nil
func (o *CounterpartyNumbersInternational) UnsetBic() {
	o.Bic.Unset()
}

func (o CounterpartyNumbersInternational) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Iban.IsSet() {
		toSerialize["iban"] = o.Iban.Get()
	}
	if o.Bic.IsSet() {
		toSerialize["bic"] = o.Bic.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCounterpartyNumbersInternational struct {
	value *CounterpartyNumbersInternational
	isSet bool
}

func (v NullableCounterpartyNumbersInternational) Get() *CounterpartyNumbersInternational {
	return v.value
}

func (v *NullableCounterpartyNumbersInternational) Set(val *CounterpartyNumbersInternational) {
	v.value = val
	v.isSet = true
}

func (v NullableCounterpartyNumbersInternational) IsSet() bool {
	return v.isSet
}

func (v *NullableCounterpartyNumbersInternational) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCounterpartyNumbersInternational(val *CounterpartyNumbersInternational) *NullableCounterpartyNumbersInternational {
	return &NullableCounterpartyNumbersInternational{value: val, isSet: true}
}

func (v NullableCounterpartyNumbersInternational) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCounterpartyNumbersInternational) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


