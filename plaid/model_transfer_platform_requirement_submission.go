/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferPlatformRequirementSubmission A single requirement submission
type TransferPlatformRequirementSubmission struct {
	// The type of requirement being submitted
	RequirementType string `json:"requirement_type"`
	// The value of the requirement, which can be a string or an object depending on the `requirement_type`. If it is an object, the object should be JSON marshaled into a string. See the documentation on this endpoint for more information and examples.
	Value string `json:"value"`
	// The `person_id` of the person the requirement submission is related to. A `person_id` is returned by `/transfer/platform/person/create`. This field should not be included for requirements that are not related to a person.
	PersonId *string `json:"person_id,omitempty"`
}

// NewTransferPlatformRequirementSubmission instantiates a new TransferPlatformRequirementSubmission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferPlatformRequirementSubmission(requirementType string, value string) *TransferPlatformRequirementSubmission {
	this := TransferPlatformRequirementSubmission{}
	this.RequirementType = requirementType
	this.Value = value
	return &this
}

// NewTransferPlatformRequirementSubmissionWithDefaults instantiates a new TransferPlatformRequirementSubmission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferPlatformRequirementSubmissionWithDefaults() *TransferPlatformRequirementSubmission {
	this := TransferPlatformRequirementSubmission{}
	return &this
}

// GetRequirementType returns the RequirementType field value
func (o *TransferPlatformRequirementSubmission) GetRequirementType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequirementType
}

// GetRequirementTypeOk returns a tuple with the RequirementType field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformRequirementSubmission) GetRequirementTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequirementType, true
}

// SetRequirementType sets field value
func (o *TransferPlatformRequirementSubmission) SetRequirementType(v string) {
	o.RequirementType = v
}

// GetValue returns the Value field value
func (o *TransferPlatformRequirementSubmission) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformRequirementSubmission) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *TransferPlatformRequirementSubmission) SetValue(v string) {
	o.Value = v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *TransferPlatformRequirementSubmission) GetPersonId() string {
	if o == nil || o.PersonId == nil {
		var ret string
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferPlatformRequirementSubmission) GetPersonIdOk() (*string, bool) {
	if o == nil || o.PersonId == nil {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *TransferPlatformRequirementSubmission) HasPersonId() bool {
	if o != nil && o.PersonId != nil {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given string and assigns it to the PersonId field.
func (o *TransferPlatformRequirementSubmission) SetPersonId(v string) {
	o.PersonId = &v
}

func (o TransferPlatformRequirementSubmission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["requirement_type"] = o.RequirementType
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if o.PersonId != nil {
		toSerialize["person_id"] = o.PersonId
	}
	return json.Marshal(toSerialize)
}

type NullableTransferPlatformRequirementSubmission struct {
	value *TransferPlatformRequirementSubmission
	isSet bool
}

func (v NullableTransferPlatformRequirementSubmission) Get() *TransferPlatformRequirementSubmission {
	return v.value
}

func (v *NullableTransferPlatformRequirementSubmission) Set(val *TransferPlatformRequirementSubmission) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferPlatformRequirementSubmission) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferPlatformRequirementSubmission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferPlatformRequirementSubmission(val *TransferPlatformRequirementSubmission) *NullableTransferPlatformRequirementSubmission {
	return &NullableTransferPlatformRequirementSubmission{value: val, isSet: true}
}

func (v NullableTransferPlatformRequirementSubmission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferPlatformRequirementSubmission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


