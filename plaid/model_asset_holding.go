/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.664.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// AssetHolding Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
type AssetHolding struct {
	// Unique id of investment position
	AssetHoldingID NullableString `json:"AssetHoldingID"`
	// US Dollar
	Currency NullableString `json:"Currency"`
	// Description of holding
	AssetHoldingDescription NullableString `json:"AssetHoldingDescription"`
	// Investment position's market ticker symbol
	AssetHoldingSymbol NullableString `json:"AssetHoldingSymbol"`
	// Security name of investment holding
	AssetHoldingSecurityName NullableString `json:"AssetHoldingSecurityName"`
	// Number of units of holding
	AssetHoldingUnits NullableFloat32 `json:"AssetHoldingUnits"`
	// market value of investment position
	AssetHoldingMarketValueAmount NullableFloat32 `json:"AssetHoldingMarketValueAmount"`
	// current price of investment holding
	AssetHoldingCurrentPriceAmount NullableFloat32 `json:"AssetHoldingCurrentPriceAmount"`
	// Type of holding (e.g. bond, stock, crypto, other)
	AssetHoldingType NullableString `json:"AssetHoldingType"`
	// Whether or not the stock is restricted, i.e. \"Restricted\" or \"Not Restricted\"
	AssetHoldingRestrictedIndicator NullableString `json:"AssetHoldingRestrictedIndicator"`
	// Amount of holding vested
	AssetHoldingVestedAmount NullableFloat32 `json:"AssetHoldingVestedAmount"`
	AdditionalProperties map[string]interface{}
}

type _AssetHolding AssetHolding

// NewAssetHolding instantiates a new AssetHolding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetHolding(assetHoldingID NullableString, currency NullableString, assetHoldingDescription NullableString, assetHoldingSymbol NullableString, assetHoldingSecurityName NullableString, assetHoldingUnits NullableFloat32, assetHoldingMarketValueAmount NullableFloat32, assetHoldingCurrentPriceAmount NullableFloat32, assetHoldingType NullableString, assetHoldingRestrictedIndicator NullableString, assetHoldingVestedAmount NullableFloat32) *AssetHolding {
	this := AssetHolding{}
	this.AssetHoldingID = assetHoldingID
	this.Currency = currency
	this.AssetHoldingDescription = assetHoldingDescription
	this.AssetHoldingSymbol = assetHoldingSymbol
	this.AssetHoldingSecurityName = assetHoldingSecurityName
	this.AssetHoldingUnits = assetHoldingUnits
	this.AssetHoldingMarketValueAmount = assetHoldingMarketValueAmount
	this.AssetHoldingCurrentPriceAmount = assetHoldingCurrentPriceAmount
	this.AssetHoldingType = assetHoldingType
	this.AssetHoldingRestrictedIndicator = assetHoldingRestrictedIndicator
	this.AssetHoldingVestedAmount = assetHoldingVestedAmount
	return &this
}

// NewAssetHoldingWithDefaults instantiates a new AssetHolding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetHoldingWithDefaults() *AssetHolding {
	this := AssetHolding{}
	return &this
}

// GetAssetHoldingID returns the AssetHoldingID field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetHolding) GetAssetHoldingID() string {
	if o == nil || o.AssetHoldingID.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetHoldingID.Get()
}

// GetAssetHoldingIDOk returns a tuple with the AssetHoldingID field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingID.Get(), o.AssetHoldingID.IsSet()
}

// SetAssetHoldingID sets field value
func (o *AssetHolding) SetAssetHoldingID(v string) {
	o.AssetHoldingID.Set(&v)
}

// GetCurrency returns the Currency field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetHolding) GetCurrency() string {
	if o == nil || o.Currency.Get() == nil {
		var ret string
		return ret
	}

	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// SetCurrency sets field value
func (o *AssetHolding) SetCurrency(v string) {
	o.Currency.Set(&v)
}

// GetAssetHoldingDescription returns the AssetHoldingDescription field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetHolding) GetAssetHoldingDescription() string {
	if o == nil || o.AssetHoldingDescription.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetHoldingDescription.Get()
}

// GetAssetHoldingDescriptionOk returns a tuple with the AssetHoldingDescription field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingDescription.Get(), o.AssetHoldingDescription.IsSet()
}

// SetAssetHoldingDescription sets field value
func (o *AssetHolding) SetAssetHoldingDescription(v string) {
	o.AssetHoldingDescription.Set(&v)
}

// GetAssetHoldingSymbol returns the AssetHoldingSymbol field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetHolding) GetAssetHoldingSymbol() string {
	if o == nil || o.AssetHoldingSymbol.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetHoldingSymbol.Get()
}

// GetAssetHoldingSymbolOk returns a tuple with the AssetHoldingSymbol field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingSymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingSymbol.Get(), o.AssetHoldingSymbol.IsSet()
}

// SetAssetHoldingSymbol sets field value
func (o *AssetHolding) SetAssetHoldingSymbol(v string) {
	o.AssetHoldingSymbol.Set(&v)
}

// GetAssetHoldingSecurityName returns the AssetHoldingSecurityName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetHolding) GetAssetHoldingSecurityName() string {
	if o == nil || o.AssetHoldingSecurityName.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetHoldingSecurityName.Get()
}

// GetAssetHoldingSecurityNameOk returns a tuple with the AssetHoldingSecurityName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingSecurityNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingSecurityName.Get(), o.AssetHoldingSecurityName.IsSet()
}

// SetAssetHoldingSecurityName sets field value
func (o *AssetHolding) SetAssetHoldingSecurityName(v string) {
	o.AssetHoldingSecurityName.Set(&v)
}

// GetAssetHoldingUnits returns the AssetHoldingUnits field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *AssetHolding) GetAssetHoldingUnits() float32 {
	if o == nil || o.AssetHoldingUnits.Get() == nil {
		var ret float32
		return ret
	}

	return *o.AssetHoldingUnits.Get()
}

// GetAssetHoldingUnitsOk returns a tuple with the AssetHoldingUnits field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingUnitsOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingUnits.Get(), o.AssetHoldingUnits.IsSet()
}

// SetAssetHoldingUnits sets field value
func (o *AssetHolding) SetAssetHoldingUnits(v float32) {
	o.AssetHoldingUnits.Set(&v)
}

// GetAssetHoldingMarketValueAmount returns the AssetHoldingMarketValueAmount field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *AssetHolding) GetAssetHoldingMarketValueAmount() float32 {
	if o == nil || o.AssetHoldingMarketValueAmount.Get() == nil {
		var ret float32
		return ret
	}

	return *o.AssetHoldingMarketValueAmount.Get()
}

// GetAssetHoldingMarketValueAmountOk returns a tuple with the AssetHoldingMarketValueAmount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingMarketValueAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingMarketValueAmount.Get(), o.AssetHoldingMarketValueAmount.IsSet()
}

// SetAssetHoldingMarketValueAmount sets field value
func (o *AssetHolding) SetAssetHoldingMarketValueAmount(v float32) {
	o.AssetHoldingMarketValueAmount.Set(&v)
}

// GetAssetHoldingCurrentPriceAmount returns the AssetHoldingCurrentPriceAmount field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *AssetHolding) GetAssetHoldingCurrentPriceAmount() float32 {
	if o == nil || o.AssetHoldingCurrentPriceAmount.Get() == nil {
		var ret float32
		return ret
	}

	return *o.AssetHoldingCurrentPriceAmount.Get()
}

// GetAssetHoldingCurrentPriceAmountOk returns a tuple with the AssetHoldingCurrentPriceAmount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingCurrentPriceAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingCurrentPriceAmount.Get(), o.AssetHoldingCurrentPriceAmount.IsSet()
}

// SetAssetHoldingCurrentPriceAmount sets field value
func (o *AssetHolding) SetAssetHoldingCurrentPriceAmount(v float32) {
	o.AssetHoldingCurrentPriceAmount.Set(&v)
}

// GetAssetHoldingType returns the AssetHoldingType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetHolding) GetAssetHoldingType() string {
	if o == nil || o.AssetHoldingType.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetHoldingType.Get()
}

// GetAssetHoldingTypeOk returns a tuple with the AssetHoldingType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingType.Get(), o.AssetHoldingType.IsSet()
}

// SetAssetHoldingType sets field value
func (o *AssetHolding) SetAssetHoldingType(v string) {
	o.AssetHoldingType.Set(&v)
}

// GetAssetHoldingRestrictedIndicator returns the AssetHoldingRestrictedIndicator field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetHolding) GetAssetHoldingRestrictedIndicator() string {
	if o == nil || o.AssetHoldingRestrictedIndicator.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetHoldingRestrictedIndicator.Get()
}

// GetAssetHoldingRestrictedIndicatorOk returns a tuple with the AssetHoldingRestrictedIndicator field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingRestrictedIndicatorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingRestrictedIndicator.Get(), o.AssetHoldingRestrictedIndicator.IsSet()
}

// SetAssetHoldingRestrictedIndicator sets field value
func (o *AssetHolding) SetAssetHoldingRestrictedIndicator(v string) {
	o.AssetHoldingRestrictedIndicator.Set(&v)
}

// GetAssetHoldingVestedAmount returns the AssetHoldingVestedAmount field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *AssetHolding) GetAssetHoldingVestedAmount() float32 {
	if o == nil || o.AssetHoldingVestedAmount.Get() == nil {
		var ret float32
		return ret
	}

	return *o.AssetHoldingVestedAmount.Get()
}

// GetAssetHoldingVestedAmountOk returns a tuple with the AssetHoldingVestedAmount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetHolding) GetAssetHoldingVestedAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetHoldingVestedAmount.Get(), o.AssetHoldingVestedAmount.IsSet()
}

// SetAssetHoldingVestedAmount sets field value
func (o *AssetHolding) SetAssetHoldingVestedAmount(v float32) {
	o.AssetHoldingVestedAmount.Set(&v)
}

func (o AssetHolding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AssetHoldingID"] = o.AssetHoldingID.Get()
	}
	if true {
		toSerialize["Currency"] = o.Currency.Get()
	}
	if true {
		toSerialize["AssetHoldingDescription"] = o.AssetHoldingDescription.Get()
	}
	if true {
		toSerialize["AssetHoldingSymbol"] = o.AssetHoldingSymbol.Get()
	}
	if true {
		toSerialize["AssetHoldingSecurityName"] = o.AssetHoldingSecurityName.Get()
	}
	if true {
		toSerialize["AssetHoldingUnits"] = o.AssetHoldingUnits.Get()
	}
	if true {
		toSerialize["AssetHoldingMarketValueAmount"] = o.AssetHoldingMarketValueAmount.Get()
	}
	if true {
		toSerialize["AssetHoldingCurrentPriceAmount"] = o.AssetHoldingCurrentPriceAmount.Get()
	}
	if true {
		toSerialize["AssetHoldingType"] = o.AssetHoldingType.Get()
	}
	if true {
		toSerialize["AssetHoldingRestrictedIndicator"] = o.AssetHoldingRestrictedIndicator.Get()
	}
	if true {
		toSerialize["AssetHoldingVestedAmount"] = o.AssetHoldingVestedAmount.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AssetHolding) UnmarshalJSON(bytes []byte) (err error) {
	varAssetHolding := _AssetHolding{}

	if err = json.Unmarshal(bytes, &varAssetHolding); err == nil {
		*o = AssetHolding(varAssetHolding)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "AssetHoldingID")
		delete(additionalProperties, "Currency")
		delete(additionalProperties, "AssetHoldingDescription")
		delete(additionalProperties, "AssetHoldingSymbol")
		delete(additionalProperties, "AssetHoldingSecurityName")
		delete(additionalProperties, "AssetHoldingUnits")
		delete(additionalProperties, "AssetHoldingMarketValueAmount")
		delete(additionalProperties, "AssetHoldingCurrentPriceAmount")
		delete(additionalProperties, "AssetHoldingType")
		delete(additionalProperties, "AssetHoldingRestrictedIndicator")
		delete(additionalProperties, "AssetHoldingVestedAmount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetHolding struct {
	value *AssetHolding
	isSet bool
}

func (v NullableAssetHolding) Get() *AssetHolding {
	return v.value
}

func (v *NullableAssetHolding) Set(val *AssetHolding) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetHolding) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetHolding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetHolding(val *AssetHolding) *NullableAssetHolding {
	return &NullableAssetHolding{value: val, isSet: true}
}

func (v NullableAssetHolding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetHolding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


