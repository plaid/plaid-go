/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.641.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// NetworkStatusGetResponse NetworkStatusGetResponse defines the response schema for `/network/status/get`
type NetworkStatusGetResponse struct {
	NetworkStatus NetworkStatusGetResponseNetworkStatus `json:"network_status"`
	Layer NullableNetworkStatusGetResponseLayer `json:"layer,omitempty"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _NetworkStatusGetResponse NetworkStatusGetResponse

// NewNetworkStatusGetResponse instantiates a new NetworkStatusGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkStatusGetResponse(networkStatus NetworkStatusGetResponseNetworkStatus, requestId string) *NetworkStatusGetResponse {
	this := NetworkStatusGetResponse{}
	this.NetworkStatus = networkStatus
	this.RequestId = requestId
	return &this
}

// NewNetworkStatusGetResponseWithDefaults instantiates a new NetworkStatusGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkStatusGetResponseWithDefaults() *NetworkStatusGetResponse {
	this := NetworkStatusGetResponse{}
	return &this
}

// GetNetworkStatus returns the NetworkStatus field value
func (o *NetworkStatusGetResponse) GetNetworkStatus() NetworkStatusGetResponseNetworkStatus {
	if o == nil {
		var ret NetworkStatusGetResponseNetworkStatus
		return ret
	}

	return o.NetworkStatus
}

// GetNetworkStatusOk returns a tuple with the NetworkStatus field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusGetResponse) GetNetworkStatusOk() (*NetworkStatusGetResponseNetworkStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkStatus, true
}

// SetNetworkStatus sets field value
func (o *NetworkStatusGetResponse) SetNetworkStatus(v NetworkStatusGetResponseNetworkStatus) {
	o.NetworkStatus = v
}

// GetLayer returns the Layer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkStatusGetResponse) GetLayer() NetworkStatusGetResponseLayer {
	if o == nil || o.Layer.Get() == nil {
		var ret NetworkStatusGetResponseLayer
		return ret
	}
	return *o.Layer.Get()
}

// GetLayerOk returns a tuple with the Layer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkStatusGetResponse) GetLayerOk() (*NetworkStatusGetResponseLayer, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Layer.Get(), o.Layer.IsSet()
}

// HasLayer returns a boolean if a field has been set.
func (o *NetworkStatusGetResponse) HasLayer() bool {
	if o != nil && o.Layer.IsSet() {
		return true
	}

	return false
}

// SetLayer gets a reference to the given NullableNetworkStatusGetResponseLayer and assigns it to the Layer field.
func (o *NetworkStatusGetResponse) SetLayer(v NetworkStatusGetResponseLayer) {
	o.Layer.Set(&v)
}
// SetLayerNil sets the value for Layer to be an explicit nil
func (o *NetworkStatusGetResponse) SetLayerNil() {
	o.Layer.Set(nil)
}

// UnsetLayer ensures that no value is present for Layer, not even an explicit nil
func (o *NetworkStatusGetResponse) UnsetLayer() {
	o.Layer.Unset()
}

// GetRequestId returns the RequestId field value
func (o *NetworkStatusGetResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusGetResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *NetworkStatusGetResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o NetworkStatusGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["network_status"] = o.NetworkStatus
	}
	if o.Layer.IsSet() {
		toSerialize["layer"] = o.Layer.Get()
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *NetworkStatusGetResponse) UnmarshalJSON(bytes []byte) (err error) {
	varNetworkStatusGetResponse := _NetworkStatusGetResponse{}

	if err = json.Unmarshal(bytes, &varNetworkStatusGetResponse); err == nil {
		*o = NetworkStatusGetResponse(varNetworkStatusGetResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "network_status")
		delete(additionalProperties, "layer")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkStatusGetResponse struct {
	value *NetworkStatusGetResponse
	isSet bool
}

func (v NullableNetworkStatusGetResponse) Get() *NetworkStatusGetResponse {
	return v.value
}

func (v *NullableNetworkStatusGetResponse) Set(val *NetworkStatusGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkStatusGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkStatusGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkStatusGetResponse(val *NetworkStatusGetResponse) *NullableNetworkStatusGetResponse {
	return &NullableNetworkStatusGetResponse{value: val, isSet: true}
}

func (v NullableNetworkStatusGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkStatusGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


