/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// BeaconReportSyndicationOriginalReport A subset of information from a Beacon Report that has been syndicated to a matching Beacon User in your program.  The `id` field in the response is the ID of the original report that was syndicated. If the original report was created by your organization, the field will be filled with the ID of the report. Otherwise, the field will be `null` indicating that the original report was created by another Beacon customer.
type BeaconReportSyndicationOriginalReport struct {
	// ID of the associated Beacon Report.
	Id NullableString `json:"id"`
	// An ISO8601 formatted timestamp.
	CreatedAt time.Time `json:"created_at"`
	Type BeaconReportType `json:"type"`
	// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
	FraudDate NullableString `json:"fraud_date"`
	// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
	EventDate string `json:"event_date"`
	AdditionalProperties map[string]interface{}
}

type _BeaconReportSyndicationOriginalReport BeaconReportSyndicationOriginalReport

// NewBeaconReportSyndicationOriginalReport instantiates a new BeaconReportSyndicationOriginalReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconReportSyndicationOriginalReport(id NullableString, createdAt time.Time, type_ BeaconReportType, fraudDate NullableString, eventDate string) *BeaconReportSyndicationOriginalReport {
	this := BeaconReportSyndicationOriginalReport{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Type = type_
	this.FraudDate = fraudDate
	this.EventDate = eventDate
	return &this
}

// NewBeaconReportSyndicationOriginalReportWithDefaults instantiates a new BeaconReportSyndicationOriginalReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconReportSyndicationOriginalReportWithDefaults() *BeaconReportSyndicationOriginalReport {
	this := BeaconReportSyndicationOriginalReport{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BeaconReportSyndicationOriginalReport) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BeaconReportSyndicationOriginalReport) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *BeaconReportSyndicationOriginalReport) SetId(v string) {
	o.Id.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *BeaconReportSyndicationOriginalReport) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BeaconReportSyndicationOriginalReport) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BeaconReportSyndicationOriginalReport) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetType returns the Type field value
func (o *BeaconReportSyndicationOriginalReport) GetType() BeaconReportType {
	if o == nil {
		var ret BeaconReportType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BeaconReportSyndicationOriginalReport) GetTypeOk() (*BeaconReportType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BeaconReportSyndicationOriginalReport) SetType(v BeaconReportType) {
	o.Type = v
}

// GetFraudDate returns the FraudDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BeaconReportSyndicationOriginalReport) GetFraudDate() string {
	if o == nil || o.FraudDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.FraudDate.Get()
}

// GetFraudDateOk returns a tuple with the FraudDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BeaconReportSyndicationOriginalReport) GetFraudDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FraudDate.Get(), o.FraudDate.IsSet()
}

// SetFraudDate sets field value
func (o *BeaconReportSyndicationOriginalReport) SetFraudDate(v string) {
	o.FraudDate.Set(&v)
}

// GetEventDate returns the EventDate field value
func (o *BeaconReportSyndicationOriginalReport) GetEventDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventDate
}

// GetEventDateOk returns a tuple with the EventDate field value
// and a boolean to check if the value has been set.
func (o *BeaconReportSyndicationOriginalReport) GetEventDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EventDate, true
}

// SetEventDate sets field value
func (o *BeaconReportSyndicationOriginalReport) SetEventDate(v string) {
	o.EventDate = v
}

func (o BeaconReportSyndicationOriginalReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id.Get()
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["fraud_date"] = o.FraudDate.Get()
	}
	if true {
		toSerialize["event_date"] = o.EventDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconReportSyndicationOriginalReport) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconReportSyndicationOriginalReport := _BeaconReportSyndicationOriginalReport{}

	if err = json.Unmarshal(bytes, &varBeaconReportSyndicationOriginalReport); err == nil {
		*o = BeaconReportSyndicationOriginalReport(varBeaconReportSyndicationOriginalReport)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "type")
		delete(additionalProperties, "fraud_date")
		delete(additionalProperties, "event_date")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconReportSyndicationOriginalReport struct {
	value *BeaconReportSyndicationOriginalReport
	isSet bool
}

func (v NullableBeaconReportSyndicationOriginalReport) Get() *BeaconReportSyndicationOriginalReport {
	return v.value
}

func (v *NullableBeaconReportSyndicationOriginalReport) Set(val *BeaconReportSyndicationOriginalReport) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconReportSyndicationOriginalReport) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconReportSyndicationOriginalReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconReportSyndicationOriginalReport(val *BeaconReportSyndicationOriginalReport) *NullableBeaconReportSyndicationOriginalReport {
	return &NullableBeaconReportSyndicationOriginalReport{value: val, isSet: true}
}

func (v NullableBeaconReportSyndicationOriginalReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconReportSyndicationOriginalReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


