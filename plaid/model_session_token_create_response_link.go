/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.641.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// SessionTokenCreateResponseLink Response data for `/session/token/create` intended for use with the Link SDK.
type SessionTokenCreateResponseLink struct {
	// A Link token, which can be supplied to Link in order to initialize it and receive a `public_token`.
	LinkToken string `json:"link_token"`
	// The expiration date for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `link_token` created to generate a `public_token` that will be exchanged for a new `access_token` expires after 4 hours. A `link_token` created for an existing Item (such as when updating an existing `access_token` by launching Link in update mode) expires after 30 minutes.
	Expiration time.Time `json:"expiration"`
	// A unique `user_id` generated by Plaid for the client-provided `client_user_id`. This field is currently in beta.
	UserId *string `json:"user_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SessionTokenCreateResponseLink SessionTokenCreateResponseLink

// NewSessionTokenCreateResponseLink instantiates a new SessionTokenCreateResponseLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionTokenCreateResponseLink(linkToken string, expiration time.Time) *SessionTokenCreateResponseLink {
	this := SessionTokenCreateResponseLink{}
	this.LinkToken = linkToken
	this.Expiration = expiration
	return &this
}

// NewSessionTokenCreateResponseLinkWithDefaults instantiates a new SessionTokenCreateResponseLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionTokenCreateResponseLinkWithDefaults() *SessionTokenCreateResponseLink {
	this := SessionTokenCreateResponseLink{}
	return &this
}

// GetLinkToken returns the LinkToken field value
func (o *SessionTokenCreateResponseLink) GetLinkToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkToken
}

// GetLinkTokenOk returns a tuple with the LinkToken field value
// and a boolean to check if the value has been set.
func (o *SessionTokenCreateResponseLink) GetLinkTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkToken, true
}

// SetLinkToken sets field value
func (o *SessionTokenCreateResponseLink) SetLinkToken(v string) {
	o.LinkToken = v
}

// GetExpiration returns the Expiration field value
func (o *SessionTokenCreateResponseLink) GetExpiration() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *SessionTokenCreateResponseLink) GetExpirationOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *SessionTokenCreateResponseLink) SetExpiration(v time.Time) {
	o.Expiration = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SessionTokenCreateResponseLink) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionTokenCreateResponseLink) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SessionTokenCreateResponseLink) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SessionTokenCreateResponseLink) SetUserId(v string) {
	o.UserId = &v
}

func (o SessionTokenCreateResponseLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["link_token"] = o.LinkToken
	}
	if true {
		toSerialize["expiration"] = o.Expiration
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SessionTokenCreateResponseLink) UnmarshalJSON(bytes []byte) (err error) {
	varSessionTokenCreateResponseLink := _SessionTokenCreateResponseLink{}

	if err = json.Unmarshal(bytes, &varSessionTokenCreateResponseLink); err == nil {
		*o = SessionTokenCreateResponseLink(varSessionTokenCreateResponseLink)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "link_token")
		delete(additionalProperties, "expiration")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSessionTokenCreateResponseLink struct {
	value *SessionTokenCreateResponseLink
	isSet bool
}

func (v NullableSessionTokenCreateResponseLink) Get() *SessionTokenCreateResponseLink {
	return v.value
}

func (v *NullableSessionTokenCreateResponseLink) Set(val *SessionTokenCreateResponseLink) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTokenCreateResponseLink) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTokenCreateResponseLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTokenCreateResponseLink(val *SessionTokenCreateResponseLink) *NullableSessionTokenCreateResponseLink {
	return &NullableSessionTokenCreateResponseLink{value: val, isSet: true}
}

func (v NullableSessionTokenCreateResponseLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTokenCreateResponseLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


