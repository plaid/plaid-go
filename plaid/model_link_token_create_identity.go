/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.496.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// LinkTokenCreateIdentity Identity object used to specify document upload
type LinkTokenCreateIdentity struct {
	// Used to specify whether the Link session is Identity Document Upload
	IsDocumentUpload *bool `json:"is_document_upload,omitempty"`
	// An array of `account_ids`
	AccountIds *[]string `json:"account_ids,omitempty"`
}

// NewLinkTokenCreateIdentity instantiates a new LinkTokenCreateIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkTokenCreateIdentity() *LinkTokenCreateIdentity {
	this := LinkTokenCreateIdentity{}
	return &this
}

// NewLinkTokenCreateIdentityWithDefaults instantiates a new LinkTokenCreateIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkTokenCreateIdentityWithDefaults() *LinkTokenCreateIdentity {
	this := LinkTokenCreateIdentity{}
	return &this
}

// GetIsDocumentUpload returns the IsDocumentUpload field value if set, zero value otherwise.
func (o *LinkTokenCreateIdentity) GetIsDocumentUpload() bool {
	if o == nil || o.IsDocumentUpload == nil {
		var ret bool
		return ret
	}
	return *o.IsDocumentUpload
}

// GetIsDocumentUploadOk returns a tuple with the IsDocumentUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateIdentity) GetIsDocumentUploadOk() (*bool, bool) {
	if o == nil || o.IsDocumentUpload == nil {
		return nil, false
	}
	return o.IsDocumentUpload, true
}

// HasIsDocumentUpload returns a boolean if a field has been set.
func (o *LinkTokenCreateIdentity) HasIsDocumentUpload() bool {
	if o != nil && o.IsDocumentUpload != nil {
		return true
	}

	return false
}

// SetIsDocumentUpload gets a reference to the given bool and assigns it to the IsDocumentUpload field.
func (o *LinkTokenCreateIdentity) SetIsDocumentUpload(v bool) {
	o.IsDocumentUpload = &v
}

// GetAccountIds returns the AccountIds field value if set, zero value otherwise.
func (o *LinkTokenCreateIdentity) GetAccountIds() []string {
	if o == nil || o.AccountIds == nil {
		var ret []string
		return ret
	}
	return *o.AccountIds
}

// GetAccountIdsOk returns a tuple with the AccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateIdentity) GetAccountIdsOk() (*[]string, bool) {
	if o == nil || o.AccountIds == nil {
		return nil, false
	}
	return o.AccountIds, true
}

// HasAccountIds returns a boolean if a field has been set.
func (o *LinkTokenCreateIdentity) HasAccountIds() bool {
	if o != nil && o.AccountIds != nil {
		return true
	}

	return false
}

// SetAccountIds gets a reference to the given []string and assigns it to the AccountIds field.
func (o *LinkTokenCreateIdentity) SetAccountIds(v []string) {
	o.AccountIds = &v
}

func (o LinkTokenCreateIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsDocumentUpload != nil {
		toSerialize["is_document_upload"] = o.IsDocumentUpload
	}
	if o.AccountIds != nil {
		toSerialize["account_ids"] = o.AccountIds
	}
	return json.Marshal(toSerialize)
}

type NullableLinkTokenCreateIdentity struct {
	value *LinkTokenCreateIdentity
	isSet bool
}

func (v NullableLinkTokenCreateIdentity) Get() *LinkTokenCreateIdentity {
	return v.value
}

func (v *NullableLinkTokenCreateIdentity) Set(val *LinkTokenCreateIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkTokenCreateIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkTokenCreateIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkTokenCreateIdentity(val *LinkTokenCreateIdentity) *NullableLinkTokenCreateIdentity {
	return &NullableLinkTokenCreateIdentity{value: val, isSet: true}
}

func (v NullableLinkTokenCreateIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkTokenCreateIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


