/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PaymentInitiationConsentPayerNumbers The counterparty's bank account numbers. Exactly one of IBAN or BACS data is required.
type PaymentInitiationConsentPayerNumbers struct {
	Bacs NullablePaymentInitiationOptionalRestrictionBacs `json:"bacs,omitempty"`
	Iban NullableNumbersIBANNullable `json:"iban,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentInitiationConsentPayerNumbers PaymentInitiationConsentPayerNumbers

// NewPaymentInitiationConsentPayerNumbers instantiates a new PaymentInitiationConsentPayerNumbers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentInitiationConsentPayerNumbers() *PaymentInitiationConsentPayerNumbers {
	this := PaymentInitiationConsentPayerNumbers{}
	return &this
}

// NewPaymentInitiationConsentPayerNumbersWithDefaults instantiates a new PaymentInitiationConsentPayerNumbers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentInitiationConsentPayerNumbersWithDefaults() *PaymentInitiationConsentPayerNumbers {
	this := PaymentInitiationConsentPayerNumbers{}
	return &this
}

// GetBacs returns the Bacs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentInitiationConsentPayerNumbers) GetBacs() PaymentInitiationOptionalRestrictionBacs {
	if o == nil || o.Bacs.Get() == nil {
		var ret PaymentInitiationOptionalRestrictionBacs
		return ret
	}
	return *o.Bacs.Get()
}

// GetBacsOk returns a tuple with the Bacs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentInitiationConsentPayerNumbers) GetBacsOk() (*PaymentInitiationOptionalRestrictionBacs, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Bacs.Get(), o.Bacs.IsSet()
}

// HasBacs returns a boolean if a field has been set.
func (o *PaymentInitiationConsentPayerNumbers) HasBacs() bool {
	if o != nil && o.Bacs.IsSet() {
		return true
	}

	return false
}

// SetBacs gets a reference to the given NullablePaymentInitiationOptionalRestrictionBacs and assigns it to the Bacs field.
func (o *PaymentInitiationConsentPayerNumbers) SetBacs(v PaymentInitiationOptionalRestrictionBacs) {
	o.Bacs.Set(&v)
}
// SetBacsNil sets the value for Bacs to be an explicit nil
func (o *PaymentInitiationConsentPayerNumbers) SetBacsNil() {
	o.Bacs.Set(nil)
}

// UnsetBacs ensures that no value is present for Bacs, not even an explicit nil
func (o *PaymentInitiationConsentPayerNumbers) UnsetBacs() {
	o.Bacs.Unset()
}

// GetIban returns the Iban field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentInitiationConsentPayerNumbers) GetIban() NumbersIBANNullable {
	if o == nil || o.Iban.Get() == nil {
		var ret NumbersIBANNullable
		return ret
	}
	return *o.Iban.Get()
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentInitiationConsentPayerNumbers) GetIbanOk() (*NumbersIBANNullable, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Iban.Get(), o.Iban.IsSet()
}

// HasIban returns a boolean if a field has been set.
func (o *PaymentInitiationConsentPayerNumbers) HasIban() bool {
	if o != nil && o.Iban.IsSet() {
		return true
	}

	return false
}

// SetIban gets a reference to the given NullableNumbersIBANNullable and assigns it to the Iban field.
func (o *PaymentInitiationConsentPayerNumbers) SetIban(v NumbersIBANNullable) {
	o.Iban.Set(&v)
}
// SetIbanNil sets the value for Iban to be an explicit nil
func (o *PaymentInitiationConsentPayerNumbers) SetIbanNil() {
	o.Iban.Set(nil)
}

// UnsetIban ensures that no value is present for Iban, not even an explicit nil
func (o *PaymentInitiationConsentPayerNumbers) UnsetIban() {
	o.Iban.Unset()
}

func (o PaymentInitiationConsentPayerNumbers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bacs.IsSet() {
		toSerialize["bacs"] = o.Bacs.Get()
	}
	if o.Iban.IsSet() {
		toSerialize["iban"] = o.Iban.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PaymentInitiationConsentPayerNumbers) UnmarshalJSON(bytes []byte) (err error) {
	varPaymentInitiationConsentPayerNumbers := _PaymentInitiationConsentPayerNumbers{}

	if err = json.Unmarshal(bytes, &varPaymentInitiationConsentPayerNumbers); err == nil {
		*o = PaymentInitiationConsentPayerNumbers(varPaymentInitiationConsentPayerNumbers)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "bacs")
		delete(additionalProperties, "iban")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentInitiationConsentPayerNumbers struct {
	value *PaymentInitiationConsentPayerNumbers
	isSet bool
}

func (v NullablePaymentInitiationConsentPayerNumbers) Get() *PaymentInitiationConsentPayerNumbers {
	return v.value
}

func (v *NullablePaymentInitiationConsentPayerNumbers) Set(val *PaymentInitiationConsentPayerNumbers) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentInitiationConsentPayerNumbers) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentInitiationConsentPayerNumbers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentInitiationConsentPayerNumbers(val *PaymentInitiationConsentPayerNumbers) *NullablePaymentInitiationConsentPayerNumbers {
	return &NullablePaymentInitiationConsentPayerNumbers{value: val, isSet: true}
}

func (v NullablePaymentInitiationConsentPayerNumbers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentInitiationConsentPayerNumbers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


