/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// CraBankIncomeWarningCode The warning code identifies a specific kind of warning. `IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item `TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item `REPORT_DELETED`: Report deleted due to customer or consumer request `DATA_UNAVAILABLE`: No relevant data was found for the Item
type CraBankIncomeWarningCode string

var _ = fmt.Printf

// List of CraBankIncomeWarningCode
const (
	CRABANKINCOMEWARNINGCODE_IDENTITY_UNAVAILABLE CraBankIncomeWarningCode = "IDENTITY_UNAVAILABLE"
	CRABANKINCOMEWARNINGCODE_TRANSACTIONS_UNAVAILABLE CraBankIncomeWarningCode = "TRANSACTIONS_UNAVAILABLE"
	CRABANKINCOMEWARNINGCODE_REPORT_DELETED CraBankIncomeWarningCode = "REPORT_DELETED"
	CRABANKINCOMEWARNINGCODE_DATA_UNAVAILABLE CraBankIncomeWarningCode = "DATA_UNAVAILABLE"
)

var allowedCraBankIncomeWarningCodeEnumValues = []CraBankIncomeWarningCode{
	"IDENTITY_UNAVAILABLE",
	"TRANSACTIONS_UNAVAILABLE",
	"REPORT_DELETED",
	"DATA_UNAVAILABLE",
}

func (v *CraBankIncomeWarningCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := CraBankIncomeWarningCode(value)


	*v = enumTypeValue
	return nil
}

// NewCraBankIncomeWarningCodeFromValue returns a pointer to a valid CraBankIncomeWarningCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCraBankIncomeWarningCodeFromValue(v string) (*CraBankIncomeWarningCode, error) {
	ev := CraBankIncomeWarningCode(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CraBankIncomeWarningCode) IsValid() bool {
	for _, existing := range allowedCraBankIncomeWarningCodeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CraBankIncomeWarningCode value
func (v CraBankIncomeWarningCode) Ptr() *CraBankIncomeWarningCode {
	return &v
}

type NullableCraBankIncomeWarningCode struct {
	value *CraBankIncomeWarningCode
	isSet bool
}

func (v NullableCraBankIncomeWarningCode) Get() *CraBankIncomeWarningCode {
	return v.value
}

func (v *NullableCraBankIncomeWarningCode) Set(val *CraBankIncomeWarningCode) {
	v.value = val
	v.isSet = true
}

func (v NullableCraBankIncomeWarningCode) IsSet() bool {
	return v.isSet
}

func (v *NullableCraBankIncomeWarningCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraBankIncomeWarningCode(val *CraBankIncomeWarningCode) *NullableCraBankIncomeWarningCode {
	return &NullableCraBankIncomeWarningCode{value: val, isSet: true}
}

func (v NullableCraBankIncomeWarningCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraBankIncomeWarningCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

