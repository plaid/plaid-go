/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TrustIndexSubscores Contains sub-score metadata.
type TrustIndexSubscores struct {
	DeviceAndConnection NullableTrustIndexSubscore `json:"device_and_connection,omitempty"`
	BankAccountInsights NullableTrustIndexSubscore `json:"bank_account_insights,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TrustIndexSubscores TrustIndexSubscores

// NewTrustIndexSubscores instantiates a new TrustIndexSubscores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrustIndexSubscores() *TrustIndexSubscores {
	this := TrustIndexSubscores{}
	return &this
}

// NewTrustIndexSubscoresWithDefaults instantiates a new TrustIndexSubscores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustIndexSubscoresWithDefaults() *TrustIndexSubscores {
	this := TrustIndexSubscores{}
	return &this
}

// GetDeviceAndConnection returns the DeviceAndConnection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrustIndexSubscores) GetDeviceAndConnection() TrustIndexSubscore {
	if o == nil || o.DeviceAndConnection.Get() == nil {
		var ret TrustIndexSubscore
		return ret
	}
	return *o.DeviceAndConnection.Get()
}

// GetDeviceAndConnectionOk returns a tuple with the DeviceAndConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrustIndexSubscores) GetDeviceAndConnectionOk() (*TrustIndexSubscore, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeviceAndConnection.Get(), o.DeviceAndConnection.IsSet()
}

// HasDeviceAndConnection returns a boolean if a field has been set.
func (o *TrustIndexSubscores) HasDeviceAndConnection() bool {
	if o != nil && o.DeviceAndConnection.IsSet() {
		return true
	}

	return false
}

// SetDeviceAndConnection gets a reference to the given NullableTrustIndexSubscore and assigns it to the DeviceAndConnection field.
func (o *TrustIndexSubscores) SetDeviceAndConnection(v TrustIndexSubscore) {
	o.DeviceAndConnection.Set(&v)
}
// SetDeviceAndConnectionNil sets the value for DeviceAndConnection to be an explicit nil
func (o *TrustIndexSubscores) SetDeviceAndConnectionNil() {
	o.DeviceAndConnection.Set(nil)
}

// UnsetDeviceAndConnection ensures that no value is present for DeviceAndConnection, not even an explicit nil
func (o *TrustIndexSubscores) UnsetDeviceAndConnection() {
	o.DeviceAndConnection.Unset()
}

// GetBankAccountInsights returns the BankAccountInsights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrustIndexSubscores) GetBankAccountInsights() TrustIndexSubscore {
	if o == nil || o.BankAccountInsights.Get() == nil {
		var ret TrustIndexSubscore
		return ret
	}
	return *o.BankAccountInsights.Get()
}

// GetBankAccountInsightsOk returns a tuple with the BankAccountInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrustIndexSubscores) GetBankAccountInsightsOk() (*TrustIndexSubscore, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BankAccountInsights.Get(), o.BankAccountInsights.IsSet()
}

// HasBankAccountInsights returns a boolean if a field has been set.
func (o *TrustIndexSubscores) HasBankAccountInsights() bool {
	if o != nil && o.BankAccountInsights.IsSet() {
		return true
	}

	return false
}

// SetBankAccountInsights gets a reference to the given NullableTrustIndexSubscore and assigns it to the BankAccountInsights field.
func (o *TrustIndexSubscores) SetBankAccountInsights(v TrustIndexSubscore) {
	o.BankAccountInsights.Set(&v)
}
// SetBankAccountInsightsNil sets the value for BankAccountInsights to be an explicit nil
func (o *TrustIndexSubscores) SetBankAccountInsightsNil() {
	o.BankAccountInsights.Set(nil)
}

// UnsetBankAccountInsights ensures that no value is present for BankAccountInsights, not even an explicit nil
func (o *TrustIndexSubscores) UnsetBankAccountInsights() {
	o.BankAccountInsights.Unset()
}

func (o TrustIndexSubscores) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceAndConnection.IsSet() {
		toSerialize["device_and_connection"] = o.DeviceAndConnection.Get()
	}
	if o.BankAccountInsights.IsSet() {
		toSerialize["bank_account_insights"] = o.BankAccountInsights.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TrustIndexSubscores) UnmarshalJSON(bytes []byte) (err error) {
	varTrustIndexSubscores := _TrustIndexSubscores{}

	if err = json.Unmarshal(bytes, &varTrustIndexSubscores); err == nil {
		*o = TrustIndexSubscores(varTrustIndexSubscores)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "device_and_connection")
		delete(additionalProperties, "bank_account_insights")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTrustIndexSubscores struct {
	value *TrustIndexSubscores
	isSet bool
}

func (v NullableTrustIndexSubscores) Get() *TrustIndexSubscores {
	return v.value
}

func (v *NullableTrustIndexSubscores) Set(val *TrustIndexSubscores) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustIndexSubscores) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustIndexSubscores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustIndexSubscores(val *TrustIndexSubscores) *NullableTrustIndexSubscores {
	return &NullableTrustIndexSubscores{value: val, isSet: true}
}

func (v NullableTrustIndexSubscores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustIndexSubscores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


