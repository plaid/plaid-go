/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.410.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// FraudAmountNullable The amount and currency of the fraud or attempted fraud. `fraud_amount` should be omitted to indicate an unknown fraud amount.
type FraudAmountNullable struct {
	IsoCurrencyCode ISOCurrencyCode `json:"iso_currency_code"`
	// The amount value. This value can be 0 to indicate no money was lost. Must not contain more than two digits of precision (e.g., `1.23`).
	Value float64 `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _FraudAmountNullable FraudAmountNullable

// NewFraudAmountNullable instantiates a new FraudAmountNullable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFraudAmountNullable(isoCurrencyCode ISOCurrencyCode, value float64) *FraudAmountNullable {
	this := FraudAmountNullable{}
	this.IsoCurrencyCode = isoCurrencyCode
	this.Value = value
	return &this
}

// NewFraudAmountNullableWithDefaults instantiates a new FraudAmountNullable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFraudAmountNullableWithDefaults() *FraudAmountNullable {
	this := FraudAmountNullable{}
	return &this
}

// GetIsoCurrencyCode returns the IsoCurrencyCode field value
func (o *FraudAmountNullable) GetIsoCurrencyCode() ISOCurrencyCode {
	if o == nil {
		var ret ISOCurrencyCode
		return ret
	}

	return o.IsoCurrencyCode
}

// GetIsoCurrencyCodeOk returns a tuple with the IsoCurrencyCode field value
// and a boolean to check if the value has been set.
func (o *FraudAmountNullable) GetIsoCurrencyCodeOk() (*ISOCurrencyCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsoCurrencyCode, true
}

// SetIsoCurrencyCode sets field value
func (o *FraudAmountNullable) SetIsoCurrencyCode(v ISOCurrencyCode) {
	o.IsoCurrencyCode = v
}

// GetValue returns the Value field value
func (o *FraudAmountNullable) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FraudAmountNullable) GetValueOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FraudAmountNullable) SetValue(v float64) {
	o.Value = v
}

func (o FraudAmountNullable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["iso_currency_code"] = o.IsoCurrencyCode
	}
	if true {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *FraudAmountNullable) UnmarshalJSON(bytes []byte) (err error) {
	varFraudAmountNullable := _FraudAmountNullable{}

	if err = json.Unmarshal(bytes, &varFraudAmountNullable); err == nil {
		*o = FraudAmountNullable(varFraudAmountNullable)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "iso_currency_code")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFraudAmountNullable struct {
	value *FraudAmountNullable
	isSet bool
}

func (v NullableFraudAmountNullable) Get() *FraudAmountNullable {
	return v.value
}

func (v *NullableFraudAmountNullable) Set(val *FraudAmountNullable) {
	v.value = val
	v.isSet = true
}

func (v NullableFraudAmountNullable) IsSet() bool {
	return v.isSet
}

func (v *NullableFraudAmountNullable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFraudAmountNullable(val *FraudAmountNullable) *NullableFraudAmountNullable {
	return &NullableFraudAmountNullable{value: val, isSet: true}
}

func (v NullableFraudAmountNullable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFraudAmountNullable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


