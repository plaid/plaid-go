/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.128.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// UpdateIndividualScreeningRequestSearchTerms Search terms for editing an individual watchlist screening
type UpdateIndividualScreeningRequestSearchTerms struct {
	WatchlistProgramId NullableString `json:"watchlist_program_id,omitempty"`
	LegalName NullableString `json:"legal_name,omitempty"`
	DateOfBirth NullableString `json:"date_of_birth,omitempty"`
	DocumentNumber NullableString `json:"document_number,omitempty"`
	Country NullableString `json:"country,omitempty"`
}

// NewUpdateIndividualScreeningRequestSearchTerms instantiates a new UpdateIndividualScreeningRequestSearchTerms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIndividualScreeningRequestSearchTerms() *UpdateIndividualScreeningRequestSearchTerms {
	this := UpdateIndividualScreeningRequestSearchTerms{}
	return &this
}

// NewUpdateIndividualScreeningRequestSearchTermsWithDefaults instantiates a new UpdateIndividualScreeningRequestSearchTerms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIndividualScreeningRequestSearchTermsWithDefaults() *UpdateIndividualScreeningRequestSearchTerms {
	this := UpdateIndividualScreeningRequestSearchTerms{}
	return &this
}

// GetWatchlistProgramId returns the WatchlistProgramId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateIndividualScreeningRequestSearchTerms) GetWatchlistProgramId() string {
	if o == nil || o.WatchlistProgramId.Get() == nil {
		var ret string
		return ret
	}
	return *o.WatchlistProgramId.Get()
}

// GetWatchlistProgramIdOk returns a tuple with the WatchlistProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateIndividualScreeningRequestSearchTerms) GetWatchlistProgramIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WatchlistProgramId.Get(), o.WatchlistProgramId.IsSet()
}

// HasWatchlistProgramId returns a boolean if a field has been set.
func (o *UpdateIndividualScreeningRequestSearchTerms) HasWatchlistProgramId() bool {
	if o != nil && o.WatchlistProgramId.IsSet() {
		return true
	}

	return false
}

// SetWatchlistProgramId gets a reference to the given NullableString and assigns it to the WatchlistProgramId field.
func (o *UpdateIndividualScreeningRequestSearchTerms) SetWatchlistProgramId(v string) {
	o.WatchlistProgramId.Set(&v)
}
// SetWatchlistProgramIdNil sets the value for WatchlistProgramId to be an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) SetWatchlistProgramIdNil() {
	o.WatchlistProgramId.Set(nil)
}

// UnsetWatchlistProgramId ensures that no value is present for WatchlistProgramId, not even an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) UnsetWatchlistProgramId() {
	o.WatchlistProgramId.Unset()
}

// GetLegalName returns the LegalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateIndividualScreeningRequestSearchTerms) GetLegalName() string {
	if o == nil || o.LegalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.LegalName.Get()
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateIndividualScreeningRequestSearchTerms) GetLegalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LegalName.Get(), o.LegalName.IsSet()
}

// HasLegalName returns a boolean if a field has been set.
func (o *UpdateIndividualScreeningRequestSearchTerms) HasLegalName() bool {
	if o != nil && o.LegalName.IsSet() {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given NullableString and assigns it to the LegalName field.
func (o *UpdateIndividualScreeningRequestSearchTerms) SetLegalName(v string) {
	o.LegalName.Set(&v)
}
// SetLegalNameNil sets the value for LegalName to be an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) SetLegalNameNil() {
	o.LegalName.Set(nil)
}

// UnsetLegalName ensures that no value is present for LegalName, not even an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) UnsetLegalName() {
	o.LegalName.Unset()
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateIndividualScreeningRequestSearchTerms) GetDateOfBirth() string {
	if o == nil || o.DateOfBirth.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateOfBirth.Get()
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateIndividualScreeningRequestSearchTerms) GetDateOfBirthOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DateOfBirth.Get(), o.DateOfBirth.IsSet()
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *UpdateIndividualScreeningRequestSearchTerms) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth.IsSet() {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given NullableString and assigns it to the DateOfBirth field.
func (o *UpdateIndividualScreeningRequestSearchTerms) SetDateOfBirth(v string) {
	o.DateOfBirth.Set(&v)
}
// SetDateOfBirthNil sets the value for DateOfBirth to be an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) SetDateOfBirthNil() {
	o.DateOfBirth.Set(nil)
}

// UnsetDateOfBirth ensures that no value is present for DateOfBirth, not even an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) UnsetDateOfBirth() {
	o.DateOfBirth.Unset()
}

// GetDocumentNumber returns the DocumentNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateIndividualScreeningRequestSearchTerms) GetDocumentNumber() string {
	if o == nil || o.DocumentNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.DocumentNumber.Get()
}

// GetDocumentNumberOk returns a tuple with the DocumentNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateIndividualScreeningRequestSearchTerms) GetDocumentNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DocumentNumber.Get(), o.DocumentNumber.IsSet()
}

// HasDocumentNumber returns a boolean if a field has been set.
func (o *UpdateIndividualScreeningRequestSearchTerms) HasDocumentNumber() bool {
	if o != nil && o.DocumentNumber.IsSet() {
		return true
	}

	return false
}

// SetDocumentNumber gets a reference to the given NullableString and assigns it to the DocumentNumber field.
func (o *UpdateIndividualScreeningRequestSearchTerms) SetDocumentNumber(v string) {
	o.DocumentNumber.Set(&v)
}
// SetDocumentNumberNil sets the value for DocumentNumber to be an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) SetDocumentNumberNil() {
	o.DocumentNumber.Set(nil)
}

// UnsetDocumentNumber ensures that no value is present for DocumentNumber, not even an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) UnsetDocumentNumber() {
	o.DocumentNumber.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateIndividualScreeningRequestSearchTerms) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateIndividualScreeningRequestSearchTerms) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *UpdateIndividualScreeningRequestSearchTerms) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *UpdateIndividualScreeningRequestSearchTerms) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *UpdateIndividualScreeningRequestSearchTerms) UnsetCountry() {
	o.Country.Unset()
}

func (o UpdateIndividualScreeningRequestSearchTerms) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WatchlistProgramId.IsSet() {
		toSerialize["watchlist_program_id"] = o.WatchlistProgramId.Get()
	}
	if o.LegalName.IsSet() {
		toSerialize["legal_name"] = o.LegalName.Get()
	}
	if o.DateOfBirth.IsSet() {
		toSerialize["date_of_birth"] = o.DateOfBirth.Get()
	}
	if o.DocumentNumber.IsSet() {
		toSerialize["document_number"] = o.DocumentNumber.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateIndividualScreeningRequestSearchTerms struct {
	value *UpdateIndividualScreeningRequestSearchTerms
	isSet bool
}

func (v NullableUpdateIndividualScreeningRequestSearchTerms) Get() *UpdateIndividualScreeningRequestSearchTerms {
	return v.value
}

func (v *NullableUpdateIndividualScreeningRequestSearchTerms) Set(val *UpdateIndividualScreeningRequestSearchTerms) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIndividualScreeningRequestSearchTerms) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIndividualScreeningRequestSearchTerms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIndividualScreeningRequestSearchTerms(val *UpdateIndividualScreeningRequestSearchTerms) *NullableUpdateIndividualScreeningRequestSearchTerms {
	return &NullableUpdateIndividualScreeningRequestSearchTerms{value: val, isSet: true}
}

func (v NullableUpdateIndividualScreeningRequestSearchTerms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIndividualScreeningRequestSearchTerms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


