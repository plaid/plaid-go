/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// YieldRate Details about a fixed income security's expected rate of return.
type YieldRate struct {
	// The fixed income security's expected rate of return.
	Percentage float64 `json:"percentage"`
	Type NullableYieldRateType `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _YieldRate YieldRate

// NewYieldRate instantiates a new YieldRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewYieldRate(percentage float64, type_ NullableYieldRateType) *YieldRate {
	this := YieldRate{}
	this.Percentage = percentage
	this.Type = type_
	return &this
}

// NewYieldRateWithDefaults instantiates a new YieldRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewYieldRateWithDefaults() *YieldRate {
	this := YieldRate{}
	return &this
}

// GetPercentage returns the Percentage field value
func (o *YieldRate) GetPercentage() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value
// and a boolean to check if the value has been set.
func (o *YieldRate) GetPercentageOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Percentage, true
}

// SetPercentage sets field value
func (o *YieldRate) SetPercentage(v float64) {
	o.Percentage = v
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for YieldRateType will be returned
func (o *YieldRate) GetType() YieldRateType {
	if o == nil || o.Type.Get() == nil {
		var ret YieldRateType
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *YieldRate) GetTypeOk() (*YieldRateType, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *YieldRate) SetType(v YieldRateType) {
	o.Type.Set(&v)
}

func (o YieldRate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["percentage"] = o.Percentage
	}
	if true {
		toSerialize["type"] = o.Type.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *YieldRate) UnmarshalJSON(bytes []byte) (err error) {
	varYieldRate := _YieldRate{}

	if err = json.Unmarshal(bytes, &varYieldRate); err == nil {
		*o = YieldRate(varYieldRate)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "percentage")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableYieldRate struct {
	value *YieldRate
	isSet bool
}

func (v NullableYieldRate) Get() *YieldRate {
	return v.value
}

func (v *NullableYieldRate) Set(val *YieldRate) {
	v.value = val
	v.isSet = true
}

func (v NullableYieldRate) IsSet() bool {
	return v.isSet
}

func (v *NullableYieldRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableYieldRate(val *YieldRate) *NullableYieldRate {
	return &NullableYieldRate{value: val, isSet: true}
}

func (v NullableYieldRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableYieldRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


