/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.635.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// InvestmentsAuth401kFeeDetails Object containing information on account fee transactions for the 401k account.
type InvestmentsAuth401kFeeDetails struct {
	// Number of account fee transactions on this account, for the past 12 months.
	AccountFeeCount12m int32 `json:"account_fee_count_12m"`
	// Sum of account fee transactions on this account, for the past 12 months.
	AccountFeeAmount12m float32 `json:"account_fee_amount_12m"`
	AdditionalProperties map[string]interface{}
}

type _InvestmentsAuth401kFeeDetails InvestmentsAuth401kFeeDetails

// NewInvestmentsAuth401kFeeDetails instantiates a new InvestmentsAuth401kFeeDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvestmentsAuth401kFeeDetails(accountFeeCount12m int32, accountFeeAmount12m float32) *InvestmentsAuth401kFeeDetails {
	this := InvestmentsAuth401kFeeDetails{}
	this.AccountFeeCount12m = accountFeeCount12m
	this.AccountFeeAmount12m = accountFeeAmount12m
	return &this
}

// NewInvestmentsAuth401kFeeDetailsWithDefaults instantiates a new InvestmentsAuth401kFeeDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvestmentsAuth401kFeeDetailsWithDefaults() *InvestmentsAuth401kFeeDetails {
	this := InvestmentsAuth401kFeeDetails{}
	return &this
}

// GetAccountFeeCount12m returns the AccountFeeCount12m field value
func (o *InvestmentsAuth401kFeeDetails) GetAccountFeeCount12m() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountFeeCount12m
}

// GetAccountFeeCount12mOk returns a tuple with the AccountFeeCount12m field value
// and a boolean to check if the value has been set.
func (o *InvestmentsAuth401kFeeDetails) GetAccountFeeCount12mOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountFeeCount12m, true
}

// SetAccountFeeCount12m sets field value
func (o *InvestmentsAuth401kFeeDetails) SetAccountFeeCount12m(v int32) {
	o.AccountFeeCount12m = v
}

// GetAccountFeeAmount12m returns the AccountFeeAmount12m field value
func (o *InvestmentsAuth401kFeeDetails) GetAccountFeeAmount12m() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AccountFeeAmount12m
}

// GetAccountFeeAmount12mOk returns a tuple with the AccountFeeAmount12m field value
// and a boolean to check if the value has been set.
func (o *InvestmentsAuth401kFeeDetails) GetAccountFeeAmount12mOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountFeeAmount12m, true
}

// SetAccountFeeAmount12m sets field value
func (o *InvestmentsAuth401kFeeDetails) SetAccountFeeAmount12m(v float32) {
	o.AccountFeeAmount12m = v
}

func (o InvestmentsAuth401kFeeDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_fee_count_12m"] = o.AccountFeeCount12m
	}
	if true {
		toSerialize["account_fee_amount_12m"] = o.AccountFeeAmount12m
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *InvestmentsAuth401kFeeDetails) UnmarshalJSON(bytes []byte) (err error) {
	varInvestmentsAuth401kFeeDetails := _InvestmentsAuth401kFeeDetails{}

	if err = json.Unmarshal(bytes, &varInvestmentsAuth401kFeeDetails); err == nil {
		*o = InvestmentsAuth401kFeeDetails(varInvestmentsAuth401kFeeDetails)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_fee_count_12m")
		delete(additionalProperties, "account_fee_amount_12m")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInvestmentsAuth401kFeeDetails struct {
	value *InvestmentsAuth401kFeeDetails
	isSet bool
}

func (v NullableInvestmentsAuth401kFeeDetails) Get() *InvestmentsAuth401kFeeDetails {
	return v.value
}

func (v *NullableInvestmentsAuth401kFeeDetails) Set(val *InvestmentsAuth401kFeeDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableInvestmentsAuth401kFeeDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableInvestmentsAuth401kFeeDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvestmentsAuth401kFeeDetails(val *InvestmentsAuth401kFeeDetails) *NullableInvestmentsAuth401kFeeDetails {
	return &NullableInvestmentsAuth401kFeeDetails{value: val, isSet: true}
}

func (v NullableInvestmentsAuth401kFeeDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvestmentsAuth401kFeeDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


