/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferPlatformPersonAddress Home address of a person
type TransferPlatformPersonAddress struct {
	// The full city name.
	City string `json:"city"`
	// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
	Country string `json:"country"`
	// The postal code of the address.
	PostalCode string `json:"postal_code"`
	// An ISO 3166-2 subdivision code. Related terms would be \"state\", \"province\", \"prefecture\", \"zone\", \"subdivision\", etc.
	Region string `json:"region"`
	// The primary street portion of an address. A string with at least one non-whitespace alphabetical character, with a max length of 80 characters.
	Street string `json:"street"`
	// Extra street information, like an apartment or suite number. If provided, a string with at least one non-whitespace character, with a max length of 50 characters.
	Street2 *string `json:"street2,omitempty"`
}

// NewTransferPlatformPersonAddress instantiates a new TransferPlatformPersonAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferPlatformPersonAddress(city string, country string, postalCode string, region string, street string) *TransferPlatformPersonAddress {
	this := TransferPlatformPersonAddress{}
	this.City = city
	this.Country = country
	this.PostalCode = postalCode
	this.Region = region
	this.Street = street
	return &this
}

// NewTransferPlatformPersonAddressWithDefaults instantiates a new TransferPlatformPersonAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferPlatformPersonAddressWithDefaults() *TransferPlatformPersonAddress {
	this := TransferPlatformPersonAddress{}
	return &this
}

// GetCity returns the City field value
func (o *TransferPlatformPersonAddress) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformPersonAddress) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *TransferPlatformPersonAddress) SetCity(v string) {
	o.City = v
}

// GetCountry returns the Country field value
func (o *TransferPlatformPersonAddress) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformPersonAddress) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *TransferPlatformPersonAddress) SetCountry(v string) {
	o.Country = v
}

// GetPostalCode returns the PostalCode field value
func (o *TransferPlatformPersonAddress) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformPersonAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *TransferPlatformPersonAddress) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetRegion returns the Region field value
func (o *TransferPlatformPersonAddress) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformPersonAddress) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *TransferPlatformPersonAddress) SetRegion(v string) {
	o.Region = v
}

// GetStreet returns the Street field value
func (o *TransferPlatformPersonAddress) GetStreet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Street
}

// GetStreetOk returns a tuple with the Street field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformPersonAddress) GetStreetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Street, true
}

// SetStreet sets field value
func (o *TransferPlatformPersonAddress) SetStreet(v string) {
	o.Street = v
}

// GetStreet2 returns the Street2 field value if set, zero value otherwise.
func (o *TransferPlatformPersonAddress) GetStreet2() string {
	if o == nil || o.Street2 == nil {
		var ret string
		return ret
	}
	return *o.Street2
}

// GetStreet2Ok returns a tuple with the Street2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferPlatformPersonAddress) GetStreet2Ok() (*string, bool) {
	if o == nil || o.Street2 == nil {
		return nil, false
	}
	return o.Street2, true
}

// HasStreet2 returns a boolean if a field has been set.
func (o *TransferPlatformPersonAddress) HasStreet2() bool {
	if o != nil && o.Street2 != nil {
		return true
	}

	return false
}

// SetStreet2 gets a reference to the given string and assigns it to the Street2 field.
func (o *TransferPlatformPersonAddress) SetStreet2(v string) {
	o.Street2 = &v
}

func (o TransferPlatformPersonAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["city"] = o.City
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if true {
		toSerialize["postal_code"] = o.PostalCode
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["street"] = o.Street
	}
	if o.Street2 != nil {
		toSerialize["street2"] = o.Street2
	}
	return json.Marshal(toSerialize)
}

type NullableTransferPlatformPersonAddress struct {
	value *TransferPlatformPersonAddress
	isSet bool
}

func (v NullableTransferPlatformPersonAddress) Get() *TransferPlatformPersonAddress {
	return v.value
}

func (v *NullableTransferPlatformPersonAddress) Set(val *TransferPlatformPersonAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferPlatformPersonAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferPlatformPersonAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferPlatformPersonAddress(val *TransferPlatformPersonAddress) *NullableTransferPlatformPersonAddress {
	return &NullableTransferPlatformPersonAddress{value: val, isSet: true}
}

func (v NullableTransferPlatformPersonAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferPlatformPersonAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


