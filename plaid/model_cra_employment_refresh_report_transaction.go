/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.658.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraEmploymentRefreshReportTransaction A transaction on the Employment Refresh Report. Note that this transaction differs from a Base Report transaction in that it will only be deposits, and the amounts will be omitted.
type CraEmploymentRefreshReportTransaction struct {
	// The ID of the account in which this transaction occurred.
	AccountId string `json:"account_id"`
	// The string returned by the financial institution to describe the transaction.
	OriginalDescription string `json:"original_description"`
	// For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an ISO 8601 format ( `YYYY-MM-DD` ).
	Date string `json:"date"`
	// When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.
	Pending bool `json:"pending"`
	// The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
	TransactionId string `json:"transaction_id"`
	AdditionalProperties map[string]interface{}
}

type _CraEmploymentRefreshReportTransaction CraEmploymentRefreshReportTransaction

// NewCraEmploymentRefreshReportTransaction instantiates a new CraEmploymentRefreshReportTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraEmploymentRefreshReportTransaction(accountId string, originalDescription string, date string, pending bool, transactionId string) *CraEmploymentRefreshReportTransaction {
	this := CraEmploymentRefreshReportTransaction{}
	this.AccountId = accountId
	this.OriginalDescription = originalDescription
	this.Date = date
	this.Pending = pending
	this.TransactionId = transactionId
	return &this
}

// NewCraEmploymentRefreshReportTransactionWithDefaults instantiates a new CraEmploymentRefreshReportTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraEmploymentRefreshReportTransactionWithDefaults() *CraEmploymentRefreshReportTransaction {
	this := CraEmploymentRefreshReportTransaction{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *CraEmploymentRefreshReportTransaction) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CraEmploymentRefreshReportTransaction) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CraEmploymentRefreshReportTransaction) SetAccountId(v string) {
	o.AccountId = v
}

// GetOriginalDescription returns the OriginalDescription field value
func (o *CraEmploymentRefreshReportTransaction) GetOriginalDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalDescription
}

// GetOriginalDescriptionOk returns a tuple with the OriginalDescription field value
// and a boolean to check if the value has been set.
func (o *CraEmploymentRefreshReportTransaction) GetOriginalDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OriginalDescription, true
}

// SetOriginalDescription sets field value
func (o *CraEmploymentRefreshReportTransaction) SetOriginalDescription(v string) {
	o.OriginalDescription = v
}

// GetDate returns the Date field value
func (o *CraEmploymentRefreshReportTransaction) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *CraEmploymentRefreshReportTransaction) GetDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *CraEmploymentRefreshReportTransaction) SetDate(v string) {
	o.Date = v
}

// GetPending returns the Pending field value
func (o *CraEmploymentRefreshReportTransaction) GetPending() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value
// and a boolean to check if the value has been set.
func (o *CraEmploymentRefreshReportTransaction) GetPendingOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pending, true
}

// SetPending sets field value
func (o *CraEmploymentRefreshReportTransaction) SetPending(v bool) {
	o.Pending = v
}

// GetTransactionId returns the TransactionId field value
func (o *CraEmploymentRefreshReportTransaction) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *CraEmploymentRefreshReportTransaction) GetTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *CraEmploymentRefreshReportTransaction) SetTransactionId(v string) {
	o.TransactionId = v
}

func (o CraEmploymentRefreshReportTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["original_description"] = o.OriginalDescription
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["pending"] = o.Pending
	}
	if true {
		toSerialize["transaction_id"] = o.TransactionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraEmploymentRefreshReportTransaction) UnmarshalJSON(bytes []byte) (err error) {
	varCraEmploymentRefreshReportTransaction := _CraEmploymentRefreshReportTransaction{}

	if err = json.Unmarshal(bytes, &varCraEmploymentRefreshReportTransaction); err == nil {
		*o = CraEmploymentRefreshReportTransaction(varCraEmploymentRefreshReportTransaction)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "original_description")
		delete(additionalProperties, "date")
		delete(additionalProperties, "pending")
		delete(additionalProperties, "transaction_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraEmploymentRefreshReportTransaction struct {
	value *CraEmploymentRefreshReportTransaction
	isSet bool
}

func (v NullableCraEmploymentRefreshReportTransaction) Get() *CraEmploymentRefreshReportTransaction {
	return v.value
}

func (v *NullableCraEmploymentRefreshReportTransaction) Set(val *CraEmploymentRefreshReportTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableCraEmploymentRefreshReportTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableCraEmploymentRefreshReportTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraEmploymentRefreshReportTransaction(val *CraEmploymentRefreshReportTransaction) *NullableCraEmploymentRefreshReportTransaction {
	return &NullableCraEmploymentRefreshReportTransaction{value: val, isSet: true}
}

func (v NullableCraEmploymentRefreshReportTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraEmploymentRefreshReportTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


