/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// BaseReportItem A representation of an Item within a Base Report.
type BaseReportItem struct {
	// The full financial institution name associated with the Item.
	InstitutionName string `json:"institution_name"`
	// The id of the financial institution associated with the Item.
	InstitutionId string `json:"institution_id"`
	// The date and time when this Itemâ€™s data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
	DateLastUpdated time.Time `json:"date_last_updated"`
	// Data about each of the accounts open on the Item.
	Accounts []BaseReportAccount `json:"accounts"`
	AdditionalProperties map[string]interface{}
}

type _BaseReportItem BaseReportItem

// NewBaseReportItem instantiates a new BaseReportItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseReportItem(institutionName string, institutionId string, dateLastUpdated time.Time, accounts []BaseReportAccount) *BaseReportItem {
	this := BaseReportItem{}
	this.InstitutionName = institutionName
	this.InstitutionId = institutionId
	this.DateLastUpdated = dateLastUpdated
	this.Accounts = accounts
	return &this
}

// NewBaseReportItemWithDefaults instantiates a new BaseReportItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseReportItemWithDefaults() *BaseReportItem {
	this := BaseReportItem{}
	return &this
}

// GetInstitutionName returns the InstitutionName field value
func (o *BaseReportItem) GetInstitutionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionName
}

// GetInstitutionNameOk returns a tuple with the InstitutionName field value
// and a boolean to check if the value has been set.
func (o *BaseReportItem) GetInstitutionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstitutionName, true
}

// SetInstitutionName sets field value
func (o *BaseReportItem) SetInstitutionName(v string) {
	o.InstitutionName = v
}

// GetInstitutionId returns the InstitutionId field value
func (o *BaseReportItem) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *BaseReportItem) GetInstitutionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *BaseReportItem) SetInstitutionId(v string) {
	o.InstitutionId = v
}

// GetDateLastUpdated returns the DateLastUpdated field value
func (o *BaseReportItem) GetDateLastUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateLastUpdated
}

// GetDateLastUpdatedOk returns a tuple with the DateLastUpdated field value
// and a boolean to check if the value has been set.
func (o *BaseReportItem) GetDateLastUpdatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateLastUpdated, true
}

// SetDateLastUpdated sets field value
func (o *BaseReportItem) SetDateLastUpdated(v time.Time) {
	o.DateLastUpdated = v
}

// GetAccounts returns the Accounts field value
func (o *BaseReportItem) GetAccounts() []BaseReportAccount {
	if o == nil {
		var ret []BaseReportAccount
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *BaseReportItem) GetAccountsOk() (*[]BaseReportAccount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Accounts, true
}

// SetAccounts sets field value
func (o *BaseReportItem) SetAccounts(v []BaseReportAccount) {
	o.Accounts = v
}

func (o BaseReportItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["institution_name"] = o.InstitutionName
	}
	if true {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if true {
		toSerialize["date_last_updated"] = o.DateLastUpdated
	}
	if true {
		toSerialize["accounts"] = o.Accounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BaseReportItem) UnmarshalJSON(bytes []byte) (err error) {
	varBaseReportItem := _BaseReportItem{}

	if err = json.Unmarshal(bytes, &varBaseReportItem); err == nil {
		*o = BaseReportItem(varBaseReportItem)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "institution_name")
		delete(additionalProperties, "institution_id")
		delete(additionalProperties, "date_last_updated")
		delete(additionalProperties, "accounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBaseReportItem struct {
	value *BaseReportItem
	isSet bool
}

func (v NullableBaseReportItem) Get() *BaseReportItem {
	return v.value
}

func (v *NullableBaseReportItem) Set(val *BaseReportItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseReportItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseReportItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseReportItem(val *BaseReportItem) *NullableBaseReportItem {
	return &NullableBaseReportItem{value: val, isSet: true}
}

func (v NullableBaseReportItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseReportItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


