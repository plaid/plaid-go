/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.565.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// AccountIdentityDocumentUploadAllOf struct for AccountIdentityDocumentUploadAllOf
type AccountIdentityDocumentUploadAllOf struct {
	// Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution; detecting whether the linked account is a business account is not currently supported. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array. In API versions 2018-05-22 and earlier, the `owners` object is not returned, and instead identity information is returned in the top level `identity` object. For more details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2019-05-29)
	Owners []Owner `json:"owners"`
	// An array of document with which the Identity data is derived from.
	Documents []IdentityDocumentUpload `json:"documents,omitempty"`
}

// NewAccountIdentityDocumentUploadAllOf instantiates a new AccountIdentityDocumentUploadAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountIdentityDocumentUploadAllOf(owners []Owner) *AccountIdentityDocumentUploadAllOf {
	this := AccountIdentityDocumentUploadAllOf{}
	this.Owners = owners
	return &this
}

// NewAccountIdentityDocumentUploadAllOfWithDefaults instantiates a new AccountIdentityDocumentUploadAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountIdentityDocumentUploadAllOfWithDefaults() *AccountIdentityDocumentUploadAllOf {
	this := AccountIdentityDocumentUploadAllOf{}
	return &this
}

// GetOwners returns the Owners field value
func (o *AccountIdentityDocumentUploadAllOf) GetOwners() []Owner {
	if o == nil {
		var ret []Owner
		return ret
	}

	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value
// and a boolean to check if the value has been set.
func (o *AccountIdentityDocumentUploadAllOf) GetOwnersOk() (*[]Owner, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owners, true
}

// SetOwners sets field value
func (o *AccountIdentityDocumentUploadAllOf) SetOwners(v []Owner) {
	o.Owners = v
}

// GetDocuments returns the Documents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountIdentityDocumentUploadAllOf) GetDocuments() []IdentityDocumentUpload {
	if o == nil  {
		var ret []IdentityDocumentUpload
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountIdentityDocumentUploadAllOf) GetDocumentsOk() (*[]IdentityDocumentUpload, bool) {
	if o == nil || o.Documents == nil {
		return nil, false
	}
	return &o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *AccountIdentityDocumentUploadAllOf) HasDocuments() bool {
	if o != nil && o.Documents != nil {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []IdentityDocumentUpload and assigns it to the Documents field.
func (o *AccountIdentityDocumentUploadAllOf) SetDocuments(v []IdentityDocumentUpload) {
	o.Documents = v
}

func (o AccountIdentityDocumentUploadAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["owners"] = o.Owners
	}
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	return json.Marshal(toSerialize)
}

type NullableAccountIdentityDocumentUploadAllOf struct {
	value *AccountIdentityDocumentUploadAllOf
	isSet bool
}

func (v NullableAccountIdentityDocumentUploadAllOf) Get() *AccountIdentityDocumentUploadAllOf {
	return v.value
}

func (v *NullableAccountIdentityDocumentUploadAllOf) Set(val *AccountIdentityDocumentUploadAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountIdentityDocumentUploadAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountIdentityDocumentUploadAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountIdentityDocumentUploadAllOf(val *AccountIdentityDocumentUploadAllOf) *NullableAccountIdentityDocumentUploadAllOf {
	return &NullableAccountIdentityDocumentUploadAllOf{value: val, isSet: true}
}

func (v NullableAccountIdentityDocumentUploadAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountIdentityDocumentUploadAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


