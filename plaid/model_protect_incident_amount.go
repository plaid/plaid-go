/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ProtectIncidentAmount The monetary amount associated with the incident.
type ProtectIncidentAmount struct {
	// The ISO-4217 currency code of the incident amount. Defaults to `USD` if not specified.
	IsoCurrencyCode NullableString `json:"iso_currency_code,omitempty"`
	// The monetary value of the incident amount.
	Value float64 `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _ProtectIncidentAmount ProtectIncidentAmount

// NewProtectIncidentAmount instantiates a new ProtectIncidentAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectIncidentAmount(value float64) *ProtectIncidentAmount {
	this := ProtectIncidentAmount{}
	var isoCurrencyCode string = "USD"
	this.IsoCurrencyCode = *NewNullableString(&isoCurrencyCode)
	this.Value = value
	return &this
}

// NewProtectIncidentAmountWithDefaults instantiates a new ProtectIncidentAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectIncidentAmountWithDefaults() *ProtectIncidentAmount {
	this := ProtectIncidentAmount{}
	var isoCurrencyCode string = "USD"
	this.IsoCurrencyCode = *NewNullableString(&isoCurrencyCode)
	return &this
}

// GetIsoCurrencyCode returns the IsoCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentAmount) GetIsoCurrencyCode() string {
	if o == nil || o.IsoCurrencyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.IsoCurrencyCode.Get()
}

// GetIsoCurrencyCodeOk returns a tuple with the IsoCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentAmount) GetIsoCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsoCurrencyCode.Get(), o.IsoCurrencyCode.IsSet()
}

// HasIsoCurrencyCode returns a boolean if a field has been set.
func (o *ProtectIncidentAmount) HasIsoCurrencyCode() bool {
	if o != nil && o.IsoCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetIsoCurrencyCode gets a reference to the given NullableString and assigns it to the IsoCurrencyCode field.
func (o *ProtectIncidentAmount) SetIsoCurrencyCode(v string) {
	o.IsoCurrencyCode.Set(&v)
}
// SetIsoCurrencyCodeNil sets the value for IsoCurrencyCode to be an explicit nil
func (o *ProtectIncidentAmount) SetIsoCurrencyCodeNil() {
	o.IsoCurrencyCode.Set(nil)
}

// UnsetIsoCurrencyCode ensures that no value is present for IsoCurrencyCode, not even an explicit nil
func (o *ProtectIncidentAmount) UnsetIsoCurrencyCode() {
	o.IsoCurrencyCode.Unset()
}

// GetValue returns the Value field value
func (o *ProtectIncidentAmount) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ProtectIncidentAmount) GetValueOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ProtectIncidentAmount) SetValue(v float64) {
	o.Value = v
}

func (o ProtectIncidentAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsoCurrencyCode.IsSet() {
		toSerialize["iso_currency_code"] = o.IsoCurrencyCode.Get()
	}
	if true {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProtectIncidentAmount) UnmarshalJSON(bytes []byte) (err error) {
	varProtectIncidentAmount := _ProtectIncidentAmount{}

	if err = json.Unmarshal(bytes, &varProtectIncidentAmount); err == nil {
		*o = ProtectIncidentAmount(varProtectIncidentAmount)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "iso_currency_code")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProtectIncidentAmount struct {
	value *ProtectIncidentAmount
	isSet bool
}

func (v NullableProtectIncidentAmount) Get() *ProtectIncidentAmount {
	return v.value
}

func (v *NullableProtectIncidentAmount) Set(val *ProtectIncidentAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectIncidentAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectIncidentAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectIncidentAmount(val *ProtectIncidentAmount) *NullableProtectIncidentAmount {
	return &NullableProtectIncidentAmount{value: val, isSet: true}
}

func (v NullableProtectIncidentAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectIncidentAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


