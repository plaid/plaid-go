/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// VerifySMSDetails Additional information for the `verify_sms` step.
type VerifySMSDetails struct {
	Status VerifySMSDetailsStatus `json:"status"`
	// An array where each entry represents a verification attempt for the `verify_sms` step. Each entry represents one user-submitted phone number. Phone number edits, and in some cases error handling due to edge cases like rate limiting, may generate additional verifications.
	Verifications []SMSVerification `json:"verifications"`
	AdditionalProperties map[string]interface{}
}

type _VerifySMSDetails VerifySMSDetails

// NewVerifySMSDetails instantiates a new VerifySMSDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifySMSDetails(status VerifySMSDetailsStatus, verifications []SMSVerification) *VerifySMSDetails {
	this := VerifySMSDetails{}
	this.Status = status
	this.Verifications = verifications
	return &this
}

// NewVerifySMSDetailsWithDefaults instantiates a new VerifySMSDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifySMSDetailsWithDefaults() *VerifySMSDetails {
	this := VerifySMSDetails{}
	return &this
}

// GetStatus returns the Status field value
func (o *VerifySMSDetails) GetStatus() VerifySMSDetailsStatus {
	if o == nil {
		var ret VerifySMSDetailsStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VerifySMSDetails) GetStatusOk() (*VerifySMSDetailsStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VerifySMSDetails) SetStatus(v VerifySMSDetailsStatus) {
	o.Status = v
}

// GetVerifications returns the Verifications field value
func (o *VerifySMSDetails) GetVerifications() []SMSVerification {
	if o == nil {
		var ret []SMSVerification
		return ret
	}

	return o.Verifications
}

// GetVerificationsOk returns a tuple with the Verifications field value
// and a boolean to check if the value has been set.
func (o *VerifySMSDetails) GetVerificationsOk() (*[]SMSVerification, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Verifications, true
}

// SetVerifications sets field value
func (o *VerifySMSDetails) SetVerifications(v []SMSVerification) {
	o.Verifications = v
}

func (o VerifySMSDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["verifications"] = o.Verifications
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *VerifySMSDetails) UnmarshalJSON(bytes []byte) (err error) {
	varVerifySMSDetails := _VerifySMSDetails{}

	if err = json.Unmarshal(bytes, &varVerifySMSDetails); err == nil {
		*o = VerifySMSDetails(varVerifySMSDetails)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "verifications")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVerifySMSDetails struct {
	value *VerifySMSDetails
	isSet bool
}

func (v NullableVerifySMSDetails) Get() *VerifySMSDetails {
	return v.value
}

func (v *NullableVerifySMSDetails) Set(val *VerifySMSDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifySMSDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifySMSDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifySMSDetails(val *VerifySMSDetails) *NullableVerifySMSDetails {
	return &NullableVerifySMSDetails{value: val, isSet: true}
}

func (v NullableVerifySMSDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifySMSDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


