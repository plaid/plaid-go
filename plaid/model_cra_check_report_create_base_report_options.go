/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.645.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraCheckReportCreateBaseReportOptions Defines configuration options to generate a Base Report
type CraCheckReportCreateBaseReportOptions struct {
	// Client-generated identifier, which can be used by lenders to track loan applications. This field is deprecated. Use the `client_report_id` field at the top level of the request instead.
	ClientReportId NullableString `json:"client_report_id,omitempty"`
	GseOptions NullableCraCheckReportGSEOptions `json:"gse_options,omitempty"`
}

// NewCraCheckReportCreateBaseReportOptions instantiates a new CraCheckReportCreateBaseReportOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraCheckReportCreateBaseReportOptions() *CraCheckReportCreateBaseReportOptions {
	this := CraCheckReportCreateBaseReportOptions{}
	return &this
}

// NewCraCheckReportCreateBaseReportOptionsWithDefaults instantiates a new CraCheckReportCreateBaseReportOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraCheckReportCreateBaseReportOptionsWithDefaults() *CraCheckReportCreateBaseReportOptions {
	this := CraCheckReportCreateBaseReportOptions{}
	return &this
}

// GetClientReportId returns the ClientReportId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraCheckReportCreateBaseReportOptions) GetClientReportId() string {
	if o == nil || o.ClientReportId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientReportId.Get()
}

// GetClientReportIdOk returns a tuple with the ClientReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraCheckReportCreateBaseReportOptions) GetClientReportIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientReportId.Get(), o.ClientReportId.IsSet()
}

// HasClientReportId returns a boolean if a field has been set.
func (o *CraCheckReportCreateBaseReportOptions) HasClientReportId() bool {
	if o != nil && o.ClientReportId.IsSet() {
		return true
	}

	return false
}

// SetClientReportId gets a reference to the given NullableString and assigns it to the ClientReportId field.
func (o *CraCheckReportCreateBaseReportOptions) SetClientReportId(v string) {
	o.ClientReportId.Set(&v)
}
// SetClientReportIdNil sets the value for ClientReportId to be an explicit nil
func (o *CraCheckReportCreateBaseReportOptions) SetClientReportIdNil() {
	o.ClientReportId.Set(nil)
}

// UnsetClientReportId ensures that no value is present for ClientReportId, not even an explicit nil
func (o *CraCheckReportCreateBaseReportOptions) UnsetClientReportId() {
	o.ClientReportId.Unset()
}

// GetGseOptions returns the GseOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraCheckReportCreateBaseReportOptions) GetGseOptions() CraCheckReportGSEOptions {
	if o == nil || o.GseOptions.Get() == nil {
		var ret CraCheckReportGSEOptions
		return ret
	}
	return *o.GseOptions.Get()
}

// GetGseOptionsOk returns a tuple with the GseOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraCheckReportCreateBaseReportOptions) GetGseOptionsOk() (*CraCheckReportGSEOptions, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GseOptions.Get(), o.GseOptions.IsSet()
}

// HasGseOptions returns a boolean if a field has been set.
func (o *CraCheckReportCreateBaseReportOptions) HasGseOptions() bool {
	if o != nil && o.GseOptions.IsSet() {
		return true
	}

	return false
}

// SetGseOptions gets a reference to the given NullableCraCheckReportGSEOptions and assigns it to the GseOptions field.
func (o *CraCheckReportCreateBaseReportOptions) SetGseOptions(v CraCheckReportGSEOptions) {
	o.GseOptions.Set(&v)
}
// SetGseOptionsNil sets the value for GseOptions to be an explicit nil
func (o *CraCheckReportCreateBaseReportOptions) SetGseOptionsNil() {
	o.GseOptions.Set(nil)
}

// UnsetGseOptions ensures that no value is present for GseOptions, not even an explicit nil
func (o *CraCheckReportCreateBaseReportOptions) UnsetGseOptions() {
	o.GseOptions.Unset()
}

func (o CraCheckReportCreateBaseReportOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientReportId.IsSet() {
		toSerialize["client_report_id"] = o.ClientReportId.Get()
	}
	if o.GseOptions.IsSet() {
		toSerialize["gse_options"] = o.GseOptions.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCraCheckReportCreateBaseReportOptions struct {
	value *CraCheckReportCreateBaseReportOptions
	isSet bool
}

func (v NullableCraCheckReportCreateBaseReportOptions) Get() *CraCheckReportCreateBaseReportOptions {
	return v.value
}

func (v *NullableCraCheckReportCreateBaseReportOptions) Set(val *CraCheckReportCreateBaseReportOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCraCheckReportCreateBaseReportOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCraCheckReportCreateBaseReportOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraCheckReportCreateBaseReportOptions(val *CraCheckReportCreateBaseReportOptions) *NullableCraCheckReportCreateBaseReportOptions {
	return &NullableCraCheckReportCreateBaseReportOptions{value: val, isSet: true}
}

func (v NullableCraCheckReportCreateBaseReportOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraCheckReportCreateBaseReportOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


