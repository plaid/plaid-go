/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// CheckReportWarningCode The warning code identifies a specific kind of warning.  `IDENTITY_UNAVAILABLE`:  Account-owner information is not available.  `TRANSACTIONS_UNAVAILABLE`: Transactions information associated with Credit and Depository accounts are unavailable.  `USER_FRAUD_ALERT`: The user has placed a fraud alert on their Plaid Check consumer report due to suspected fraud. Please note that when a fraud alert is in place, the recipient of the consumer report has an obligation to verify the consumerâ€™s identity.
type CheckReportWarningCode string

var _ = fmt.Printf

// List of CheckReportWarningCode
const (
	CHECKREPORTWARNINGCODE_IDENTITY_UNAVAILABLE CheckReportWarningCode = "IDENTITY_UNAVAILABLE"
	CHECKREPORTWARNINGCODE_TRANSACTIONS_UNAVAILABLE CheckReportWarningCode = "TRANSACTIONS_UNAVAILABLE"
	CHECKREPORTWARNINGCODE_USER_FRAUD_ALERT CheckReportWarningCode = "USER_FRAUD_ALERT"
)

var allowedCheckReportWarningCodeEnumValues = []CheckReportWarningCode{
	"IDENTITY_UNAVAILABLE",
	"TRANSACTIONS_UNAVAILABLE",
	"USER_FRAUD_ALERT",
}

func (v *CheckReportWarningCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := CheckReportWarningCode(value)


	*v = enumTypeValue
	return nil
}

// NewCheckReportWarningCodeFromValue returns a pointer to a valid CheckReportWarningCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCheckReportWarningCodeFromValue(v string) (*CheckReportWarningCode, error) {
	ev := CheckReportWarningCode(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CheckReportWarningCode) IsValid() bool {
	for _, existing := range allowedCheckReportWarningCodeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CheckReportWarningCode value
func (v CheckReportWarningCode) Ptr() *CheckReportWarningCode {
	return &v
}

type NullableCheckReportWarningCode struct {
	value *CheckReportWarningCode
	isSet bool
}

func (v NullableCheckReportWarningCode) Get() *CheckReportWarningCode {
	return v.value
}

func (v *NullableCheckReportWarningCode) Set(val *CheckReportWarningCode) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckReportWarningCode) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckReportWarningCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckReportWarningCode(val *CheckReportWarningCode) *NullableCheckReportWarningCode {
	return &NullableCheckReportWarningCode{value: val, isSet: true}
}

func (v NullableCheckReportWarningCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckReportWarningCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

