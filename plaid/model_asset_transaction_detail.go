/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.205.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// AssetTransactionDetail No documentation available
type AssetTransactionDetail struct {
	// A vendor creadted unique Identifier.
	AssetTransactionUniqueIdentifier string `json:"AssetTransactionUniqueIdentifier"`
	// AssetTransactionAmountName.
	AssetTransactionAmount float32 `json:"AssetTransactionAmount"`
	// Asset Transaction Date.
	AssetTransactionDate string `json:"AssetTransactionDate"`
	// Asset Transaction Post Date.
	AssetTransactionPostDate string `json:"AssetTransactionPostDate"`
	AssetTransactionType AssetTransactionType `json:"AssetTransactionType"`
	// Populate with who did the transaction.
	AssetTransactionPaidByName NullableString `json:"AssetTransactionPaidByName"`
	// FI Provided - examples are atm, cash, check, credit, debit, deposit, directDebit, directDeposit, dividend, fee, interest, other, payment, pointOfSale, repeatPayment, serviceCharge, transfer.
	AssetTransactionTypeAdditionalDescription NullableString `json:"AssetTransactionTypeAdditionalDescription"`
	AssetTransactionCategoryType NullableAssetTransactionCategoryType `json:"AssetTransactionCategoryType"`
	// FI provided Transaction Identifier.
	FinancialInstitutionTransactionIdentifier NullableString `json:"FinancialInstitutionTransactionIdentifier"`
	AdditionalProperties map[string]interface{}
}

type _AssetTransactionDetail AssetTransactionDetail

// NewAssetTransactionDetail instantiates a new AssetTransactionDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetTransactionDetail(assetTransactionUniqueIdentifier string, assetTransactionAmount float32, assetTransactionDate string, assetTransactionPostDate string, assetTransactionType AssetTransactionType, assetTransactionPaidByName NullableString, assetTransactionTypeAdditionalDescription NullableString, assetTransactionCategoryType NullableAssetTransactionCategoryType, financialInstitutionTransactionIdentifier NullableString) *AssetTransactionDetail {
	this := AssetTransactionDetail{}
	this.AssetTransactionUniqueIdentifier = assetTransactionUniqueIdentifier
	this.AssetTransactionAmount = assetTransactionAmount
	this.AssetTransactionDate = assetTransactionDate
	this.AssetTransactionPostDate = assetTransactionPostDate
	this.AssetTransactionType = assetTransactionType
	this.AssetTransactionPaidByName = assetTransactionPaidByName
	this.AssetTransactionTypeAdditionalDescription = assetTransactionTypeAdditionalDescription
	this.AssetTransactionCategoryType = assetTransactionCategoryType
	this.FinancialInstitutionTransactionIdentifier = financialInstitutionTransactionIdentifier
	return &this
}

// NewAssetTransactionDetailWithDefaults instantiates a new AssetTransactionDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetTransactionDetailWithDefaults() *AssetTransactionDetail {
	this := AssetTransactionDetail{}
	return &this
}

// GetAssetTransactionUniqueIdentifier returns the AssetTransactionUniqueIdentifier field value
func (o *AssetTransactionDetail) GetAssetTransactionUniqueIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetTransactionUniqueIdentifier
}

// GetAssetTransactionUniqueIdentifierOk returns a tuple with the AssetTransactionUniqueIdentifier field value
// and a boolean to check if the value has been set.
func (o *AssetTransactionDetail) GetAssetTransactionUniqueIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssetTransactionUniqueIdentifier, true
}

// SetAssetTransactionUniqueIdentifier sets field value
func (o *AssetTransactionDetail) SetAssetTransactionUniqueIdentifier(v string) {
	o.AssetTransactionUniqueIdentifier = v
}

// GetAssetTransactionAmount returns the AssetTransactionAmount field value
func (o *AssetTransactionDetail) GetAssetTransactionAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AssetTransactionAmount
}

// GetAssetTransactionAmountOk returns a tuple with the AssetTransactionAmount field value
// and a boolean to check if the value has been set.
func (o *AssetTransactionDetail) GetAssetTransactionAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssetTransactionAmount, true
}

// SetAssetTransactionAmount sets field value
func (o *AssetTransactionDetail) SetAssetTransactionAmount(v float32) {
	o.AssetTransactionAmount = v
}

// GetAssetTransactionDate returns the AssetTransactionDate field value
func (o *AssetTransactionDetail) GetAssetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetTransactionDate
}

// GetAssetTransactionDateOk returns a tuple with the AssetTransactionDate field value
// and a boolean to check if the value has been set.
func (o *AssetTransactionDetail) GetAssetTransactionDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssetTransactionDate, true
}

// SetAssetTransactionDate sets field value
func (o *AssetTransactionDetail) SetAssetTransactionDate(v string) {
	o.AssetTransactionDate = v
}

// GetAssetTransactionPostDate returns the AssetTransactionPostDate field value
func (o *AssetTransactionDetail) GetAssetTransactionPostDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetTransactionPostDate
}

// GetAssetTransactionPostDateOk returns a tuple with the AssetTransactionPostDate field value
// and a boolean to check if the value has been set.
func (o *AssetTransactionDetail) GetAssetTransactionPostDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssetTransactionPostDate, true
}

// SetAssetTransactionPostDate sets field value
func (o *AssetTransactionDetail) SetAssetTransactionPostDate(v string) {
	o.AssetTransactionPostDate = v
}

// GetAssetTransactionType returns the AssetTransactionType field value
func (o *AssetTransactionDetail) GetAssetTransactionType() AssetTransactionType {
	if o == nil {
		var ret AssetTransactionType
		return ret
	}

	return o.AssetTransactionType
}

// GetAssetTransactionTypeOk returns a tuple with the AssetTransactionType field value
// and a boolean to check if the value has been set.
func (o *AssetTransactionDetail) GetAssetTransactionTypeOk() (*AssetTransactionType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssetTransactionType, true
}

// SetAssetTransactionType sets field value
func (o *AssetTransactionDetail) SetAssetTransactionType(v AssetTransactionType) {
	o.AssetTransactionType = v
}

// GetAssetTransactionPaidByName returns the AssetTransactionPaidByName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetTransactionDetail) GetAssetTransactionPaidByName() string {
	if o == nil || o.AssetTransactionPaidByName.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetTransactionPaidByName.Get()
}

// GetAssetTransactionPaidByNameOk returns a tuple with the AssetTransactionPaidByName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetTransactionDetail) GetAssetTransactionPaidByNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetTransactionPaidByName.Get(), o.AssetTransactionPaidByName.IsSet()
}

// SetAssetTransactionPaidByName sets field value
func (o *AssetTransactionDetail) SetAssetTransactionPaidByName(v string) {
	o.AssetTransactionPaidByName.Set(&v)
}

// GetAssetTransactionTypeAdditionalDescription returns the AssetTransactionTypeAdditionalDescription field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetTransactionDetail) GetAssetTransactionTypeAdditionalDescription() string {
	if o == nil || o.AssetTransactionTypeAdditionalDescription.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssetTransactionTypeAdditionalDescription.Get()
}

// GetAssetTransactionTypeAdditionalDescriptionOk returns a tuple with the AssetTransactionTypeAdditionalDescription field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetTransactionDetail) GetAssetTransactionTypeAdditionalDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetTransactionTypeAdditionalDescription.Get(), o.AssetTransactionTypeAdditionalDescription.IsSet()
}

// SetAssetTransactionTypeAdditionalDescription sets field value
func (o *AssetTransactionDetail) SetAssetTransactionTypeAdditionalDescription(v string) {
	o.AssetTransactionTypeAdditionalDescription.Set(&v)
}

// GetAssetTransactionCategoryType returns the AssetTransactionCategoryType field value
// If the value is explicit nil, the zero value for AssetTransactionCategoryType will be returned
func (o *AssetTransactionDetail) GetAssetTransactionCategoryType() AssetTransactionCategoryType {
	if o == nil || o.AssetTransactionCategoryType.Get() == nil {
		var ret AssetTransactionCategoryType
		return ret
	}

	return *o.AssetTransactionCategoryType.Get()
}

// GetAssetTransactionCategoryTypeOk returns a tuple with the AssetTransactionCategoryType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetTransactionDetail) GetAssetTransactionCategoryTypeOk() (*AssetTransactionCategoryType, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssetTransactionCategoryType.Get(), o.AssetTransactionCategoryType.IsSet()
}

// SetAssetTransactionCategoryType sets field value
func (o *AssetTransactionDetail) SetAssetTransactionCategoryType(v AssetTransactionCategoryType) {
	o.AssetTransactionCategoryType.Set(&v)
}

// GetFinancialInstitutionTransactionIdentifier returns the FinancialInstitutionTransactionIdentifier field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AssetTransactionDetail) GetFinancialInstitutionTransactionIdentifier() string {
	if o == nil || o.FinancialInstitutionTransactionIdentifier.Get() == nil {
		var ret string
		return ret
	}

	return *o.FinancialInstitutionTransactionIdentifier.Get()
}

// GetFinancialInstitutionTransactionIdentifierOk returns a tuple with the FinancialInstitutionTransactionIdentifier field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetTransactionDetail) GetFinancialInstitutionTransactionIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FinancialInstitutionTransactionIdentifier.Get(), o.FinancialInstitutionTransactionIdentifier.IsSet()
}

// SetFinancialInstitutionTransactionIdentifier sets field value
func (o *AssetTransactionDetail) SetFinancialInstitutionTransactionIdentifier(v string) {
	o.FinancialInstitutionTransactionIdentifier.Set(&v)
}

func (o AssetTransactionDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AssetTransactionUniqueIdentifier"] = o.AssetTransactionUniqueIdentifier
	}
	if true {
		toSerialize["AssetTransactionAmount"] = o.AssetTransactionAmount
	}
	if true {
		toSerialize["AssetTransactionDate"] = o.AssetTransactionDate
	}
	if true {
		toSerialize["AssetTransactionPostDate"] = o.AssetTransactionPostDate
	}
	if true {
		toSerialize["AssetTransactionType"] = o.AssetTransactionType
	}
	if true {
		toSerialize["AssetTransactionPaidByName"] = o.AssetTransactionPaidByName.Get()
	}
	if true {
		toSerialize["AssetTransactionTypeAdditionalDescription"] = o.AssetTransactionTypeAdditionalDescription.Get()
	}
	if true {
		toSerialize["AssetTransactionCategoryType"] = o.AssetTransactionCategoryType.Get()
	}
	if true {
		toSerialize["FinancialInstitutionTransactionIdentifier"] = o.FinancialInstitutionTransactionIdentifier.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AssetTransactionDetail) UnmarshalJSON(bytes []byte) (err error) {
	varAssetTransactionDetail := _AssetTransactionDetail{}

	if err = json.Unmarshal(bytes, &varAssetTransactionDetail); err == nil {
		*o = AssetTransactionDetail(varAssetTransactionDetail)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "AssetTransactionUniqueIdentifier")
		delete(additionalProperties, "AssetTransactionAmount")
		delete(additionalProperties, "AssetTransactionDate")
		delete(additionalProperties, "AssetTransactionPostDate")
		delete(additionalProperties, "AssetTransactionType")
		delete(additionalProperties, "AssetTransactionPaidByName")
		delete(additionalProperties, "AssetTransactionTypeAdditionalDescription")
		delete(additionalProperties, "AssetTransactionCategoryType")
		delete(additionalProperties, "FinancialInstitutionTransactionIdentifier")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetTransactionDetail struct {
	value *AssetTransactionDetail
	isSet bool
}

func (v NullableAssetTransactionDetail) Get() *AssetTransactionDetail {
	return v.value
}

func (v *NullableAssetTransactionDetail) Set(val *AssetTransactionDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetTransactionDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetTransactionDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetTransactionDetail(val *AssetTransactionDetail) *NullableAssetTransactionDetail {
	return &NullableAssetTransactionDetail{value: val, isSet: true}
}

func (v NullableAssetTransactionDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetTransactionDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


