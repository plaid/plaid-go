/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.633.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// LinkTokenInvestmentsAuth Configuration parameters for the Investments Move product
type LinkTokenInvestmentsAuth struct {
	// If `true`, show institutions that use the manual entry fallback flow.
	ManualEntryEnabled NullableBool `json:"manual_entry_enabled,omitempty"`
	// If `true`, show institutions that use the masked number match fallback flow.
	MaskedNumberMatchEnabled NullableBool `json:"masked_number_match_enabled,omitempty"`
	// If `true`, show institutions that use the stated account number fallback flow.
	StatedAccountNumberEnabled NullableBool `json:"stated_account_number_enabled,omitempty"`
	// If `true`, the fee and contribution details for 401k accounts will be returned.
	Rollover401kEnabled NullableBool `json:"rollover_401k_enabled,omitempty"`
}

// NewLinkTokenInvestmentsAuth instantiates a new LinkTokenInvestmentsAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkTokenInvestmentsAuth() *LinkTokenInvestmentsAuth {
	this := LinkTokenInvestmentsAuth{}
	var manualEntryEnabled bool = false
	this.ManualEntryEnabled = *NewNullableBool(&manualEntryEnabled)
	var maskedNumberMatchEnabled bool = false
	this.MaskedNumberMatchEnabled = *NewNullableBool(&maskedNumberMatchEnabled)
	var statedAccountNumberEnabled bool = false
	this.StatedAccountNumberEnabled = *NewNullableBool(&statedAccountNumberEnabled)
	var rollover401kEnabled bool = false
	this.Rollover401kEnabled = *NewNullableBool(&rollover401kEnabled)
	return &this
}

// NewLinkTokenInvestmentsAuthWithDefaults instantiates a new LinkTokenInvestmentsAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkTokenInvestmentsAuthWithDefaults() *LinkTokenInvestmentsAuth {
	this := LinkTokenInvestmentsAuth{}
	var manualEntryEnabled bool = false
	this.ManualEntryEnabled = *NewNullableBool(&manualEntryEnabled)
	var maskedNumberMatchEnabled bool = false
	this.MaskedNumberMatchEnabled = *NewNullableBool(&maskedNumberMatchEnabled)
	var statedAccountNumberEnabled bool = false
	this.StatedAccountNumberEnabled = *NewNullableBool(&statedAccountNumberEnabled)
	var rollover401kEnabled bool = false
	this.Rollover401kEnabled = *NewNullableBool(&rollover401kEnabled)
	return &this
}

// GetManualEntryEnabled returns the ManualEntryEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkTokenInvestmentsAuth) GetManualEntryEnabled() bool {
	if o == nil || o.ManualEntryEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ManualEntryEnabled.Get()
}

// GetManualEntryEnabledOk returns a tuple with the ManualEntryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkTokenInvestmentsAuth) GetManualEntryEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ManualEntryEnabled.Get(), o.ManualEntryEnabled.IsSet()
}

// HasManualEntryEnabled returns a boolean if a field has been set.
func (o *LinkTokenInvestmentsAuth) HasManualEntryEnabled() bool {
	if o != nil && o.ManualEntryEnabled.IsSet() {
		return true
	}

	return false
}

// SetManualEntryEnabled gets a reference to the given NullableBool and assigns it to the ManualEntryEnabled field.
func (o *LinkTokenInvestmentsAuth) SetManualEntryEnabled(v bool) {
	o.ManualEntryEnabled.Set(&v)
}
// SetManualEntryEnabledNil sets the value for ManualEntryEnabled to be an explicit nil
func (o *LinkTokenInvestmentsAuth) SetManualEntryEnabledNil() {
	o.ManualEntryEnabled.Set(nil)
}

// UnsetManualEntryEnabled ensures that no value is present for ManualEntryEnabled, not even an explicit nil
func (o *LinkTokenInvestmentsAuth) UnsetManualEntryEnabled() {
	o.ManualEntryEnabled.Unset()
}

// GetMaskedNumberMatchEnabled returns the MaskedNumberMatchEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkTokenInvestmentsAuth) GetMaskedNumberMatchEnabled() bool {
	if o == nil || o.MaskedNumberMatchEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.MaskedNumberMatchEnabled.Get()
}

// GetMaskedNumberMatchEnabledOk returns a tuple with the MaskedNumberMatchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkTokenInvestmentsAuth) GetMaskedNumberMatchEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaskedNumberMatchEnabled.Get(), o.MaskedNumberMatchEnabled.IsSet()
}

// HasMaskedNumberMatchEnabled returns a boolean if a field has been set.
func (o *LinkTokenInvestmentsAuth) HasMaskedNumberMatchEnabled() bool {
	if o != nil && o.MaskedNumberMatchEnabled.IsSet() {
		return true
	}

	return false
}

// SetMaskedNumberMatchEnabled gets a reference to the given NullableBool and assigns it to the MaskedNumberMatchEnabled field.
func (o *LinkTokenInvestmentsAuth) SetMaskedNumberMatchEnabled(v bool) {
	o.MaskedNumberMatchEnabled.Set(&v)
}
// SetMaskedNumberMatchEnabledNil sets the value for MaskedNumberMatchEnabled to be an explicit nil
func (o *LinkTokenInvestmentsAuth) SetMaskedNumberMatchEnabledNil() {
	o.MaskedNumberMatchEnabled.Set(nil)
}

// UnsetMaskedNumberMatchEnabled ensures that no value is present for MaskedNumberMatchEnabled, not even an explicit nil
func (o *LinkTokenInvestmentsAuth) UnsetMaskedNumberMatchEnabled() {
	o.MaskedNumberMatchEnabled.Unset()
}

// GetStatedAccountNumberEnabled returns the StatedAccountNumberEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkTokenInvestmentsAuth) GetStatedAccountNumberEnabled() bool {
	if o == nil || o.StatedAccountNumberEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.StatedAccountNumberEnabled.Get()
}

// GetStatedAccountNumberEnabledOk returns a tuple with the StatedAccountNumberEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkTokenInvestmentsAuth) GetStatedAccountNumberEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatedAccountNumberEnabled.Get(), o.StatedAccountNumberEnabled.IsSet()
}

// HasStatedAccountNumberEnabled returns a boolean if a field has been set.
func (o *LinkTokenInvestmentsAuth) HasStatedAccountNumberEnabled() bool {
	if o != nil && o.StatedAccountNumberEnabled.IsSet() {
		return true
	}

	return false
}

// SetStatedAccountNumberEnabled gets a reference to the given NullableBool and assigns it to the StatedAccountNumberEnabled field.
func (o *LinkTokenInvestmentsAuth) SetStatedAccountNumberEnabled(v bool) {
	o.StatedAccountNumberEnabled.Set(&v)
}
// SetStatedAccountNumberEnabledNil sets the value for StatedAccountNumberEnabled to be an explicit nil
func (o *LinkTokenInvestmentsAuth) SetStatedAccountNumberEnabledNil() {
	o.StatedAccountNumberEnabled.Set(nil)
}

// UnsetStatedAccountNumberEnabled ensures that no value is present for StatedAccountNumberEnabled, not even an explicit nil
func (o *LinkTokenInvestmentsAuth) UnsetStatedAccountNumberEnabled() {
	o.StatedAccountNumberEnabled.Unset()
}

// GetRollover401kEnabled returns the Rollover401kEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkTokenInvestmentsAuth) GetRollover401kEnabled() bool {
	if o == nil || o.Rollover401kEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Rollover401kEnabled.Get()
}

// GetRollover401kEnabledOk returns a tuple with the Rollover401kEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkTokenInvestmentsAuth) GetRollover401kEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Rollover401kEnabled.Get(), o.Rollover401kEnabled.IsSet()
}

// HasRollover401kEnabled returns a boolean if a field has been set.
func (o *LinkTokenInvestmentsAuth) HasRollover401kEnabled() bool {
	if o != nil && o.Rollover401kEnabled.IsSet() {
		return true
	}

	return false
}

// SetRollover401kEnabled gets a reference to the given NullableBool and assigns it to the Rollover401kEnabled field.
func (o *LinkTokenInvestmentsAuth) SetRollover401kEnabled(v bool) {
	o.Rollover401kEnabled.Set(&v)
}
// SetRollover401kEnabledNil sets the value for Rollover401kEnabled to be an explicit nil
func (o *LinkTokenInvestmentsAuth) SetRollover401kEnabledNil() {
	o.Rollover401kEnabled.Set(nil)
}

// UnsetRollover401kEnabled ensures that no value is present for Rollover401kEnabled, not even an explicit nil
func (o *LinkTokenInvestmentsAuth) UnsetRollover401kEnabled() {
	o.Rollover401kEnabled.Unset()
}

func (o LinkTokenInvestmentsAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ManualEntryEnabled.IsSet() {
		toSerialize["manual_entry_enabled"] = o.ManualEntryEnabled.Get()
	}
	if o.MaskedNumberMatchEnabled.IsSet() {
		toSerialize["masked_number_match_enabled"] = o.MaskedNumberMatchEnabled.Get()
	}
	if o.StatedAccountNumberEnabled.IsSet() {
		toSerialize["stated_account_number_enabled"] = o.StatedAccountNumberEnabled.Get()
	}
	if o.Rollover401kEnabled.IsSet() {
		toSerialize["rollover_401k_enabled"] = o.Rollover401kEnabled.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLinkTokenInvestmentsAuth struct {
	value *LinkTokenInvestmentsAuth
	isSet bool
}

func (v NullableLinkTokenInvestmentsAuth) Get() *LinkTokenInvestmentsAuth {
	return v.value
}

func (v *NullableLinkTokenInvestmentsAuth) Set(val *LinkTokenInvestmentsAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkTokenInvestmentsAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkTokenInvestmentsAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkTokenInvestmentsAuth(val *LinkTokenInvestmentsAuth) *NullableLinkTokenInvestmentsAuth {
	return &NullableLinkTokenInvestmentsAuth{value: val, isSet: true}
}

func (v NullableLinkTokenInvestmentsAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkTokenInvestmentsAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


