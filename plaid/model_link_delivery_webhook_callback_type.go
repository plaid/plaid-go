/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.370.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// LinkDeliveryWebhookCallbackType The type of Link callback event
type LinkDeliveryWebhookCallbackType string

var _ = fmt.Printf

// List of LinkDeliveryWebhookCallbackType
const (
	LINKDELIVERYWEBHOOKCALLBACKTYPE_SUCCESS LinkDeliveryWebhookCallbackType = "ON_SUCCESS"
	LINKDELIVERYWEBHOOKCALLBACKTYPE_EVENT LinkDeliveryWebhookCallbackType = "ON_EVENT"
	LINKDELIVERYWEBHOOKCALLBACKTYPE_EXIT LinkDeliveryWebhookCallbackType = "ON_EXIT"
)

var allowedLinkDeliveryWebhookCallbackTypeEnumValues = []LinkDeliveryWebhookCallbackType{
	"ON_SUCCESS",
	"ON_EVENT",
	"ON_EXIT",
}

func (v *LinkDeliveryWebhookCallbackType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := LinkDeliveryWebhookCallbackType(value)


	*v = enumTypeValue
	return nil
}

// NewLinkDeliveryWebhookCallbackTypeFromValue returns a pointer to a valid LinkDeliveryWebhookCallbackType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLinkDeliveryWebhookCallbackTypeFromValue(v string) (*LinkDeliveryWebhookCallbackType, error) {
	ev := LinkDeliveryWebhookCallbackType(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LinkDeliveryWebhookCallbackType) IsValid() bool {
	for _, existing := range allowedLinkDeliveryWebhookCallbackTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LinkDeliveryWebhookCallbackType value
func (v LinkDeliveryWebhookCallbackType) Ptr() *LinkDeliveryWebhookCallbackType {
	return &v
}

type NullableLinkDeliveryWebhookCallbackType struct {
	value *LinkDeliveryWebhookCallbackType
	isSet bool
}

func (v NullableLinkDeliveryWebhookCallbackType) Get() *LinkDeliveryWebhookCallbackType {
	return v.value
}

func (v *NullableLinkDeliveryWebhookCallbackType) Set(val *LinkDeliveryWebhookCallbackType) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkDeliveryWebhookCallbackType) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkDeliveryWebhookCallbackType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkDeliveryWebhookCallbackType(val *LinkDeliveryWebhookCallbackType) *NullableLinkDeliveryWebhookCallbackType {
	return &NullableLinkDeliveryWebhookCallbackType{value: val, isSet: true}
}

func (v NullableLinkDeliveryWebhookCallbackType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkDeliveryWebhookCallbackType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

