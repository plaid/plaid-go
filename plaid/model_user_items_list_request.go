/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// UserItemsListRequest UserItemsListRequest defines the request schema for `/user/items/list`
type UserItemsListRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// A unique `user_id` generated by Plaid for the client-provided `client_user_id`. This field is currently in beta.
	UserId string `json:"user_id"`
	// An identifier that can be used to retrieve the next set of Items. The `/user/items/list` response will contain a `next_cursor` field if the user has additional Items that were not returned.
	Cursor *string `json:"cursor,omitempty"`
	// The maximum number of Items to return in the response. If not specified, defaults to 100.
	Limit *int32 `json:"limit,omitempty"`
}

// NewUserItemsListRequest instantiates a new UserItemsListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserItemsListRequest(userId string) *UserItemsListRequest {
	this := UserItemsListRequest{}
	this.UserId = userId
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

// NewUserItemsListRequestWithDefaults instantiates a new UserItemsListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserItemsListRequestWithDefaults() *UserItemsListRequest {
	this := UserItemsListRequest{}
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *UserItemsListRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserItemsListRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *UserItemsListRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *UserItemsListRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *UserItemsListRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserItemsListRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *UserItemsListRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *UserItemsListRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetUserId returns the UserId field value
func (o *UserItemsListRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *UserItemsListRequest) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *UserItemsListRequest) SetUserId(v string) {
	o.UserId = v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *UserItemsListRequest) GetCursor() string {
	if o == nil || o.Cursor == nil {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserItemsListRequest) GetCursorOk() (*string, bool) {
	if o == nil || o.Cursor == nil {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *UserItemsListRequest) HasCursor() bool {
	if o != nil && o.Cursor != nil {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *UserItemsListRequest) SetCursor(v string) {
	o.Cursor = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *UserItemsListRequest) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserItemsListRequest) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *UserItemsListRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *UserItemsListRequest) SetLimit(v int32) {
	o.Limit = &v
}

func (o UserItemsListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	if o.Cursor != nil {
		toSerialize["cursor"] = o.Cursor
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableUserItemsListRequest struct {
	value *UserItemsListRequest
	isSet bool
}

func (v NullableUserItemsListRequest) Get() *UserItemsListRequest {
	return v.value
}

func (v *NullableUserItemsListRequest) Set(val *UserItemsListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserItemsListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserItemsListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserItemsListRequest(val *UserItemsListRequest) *NullableUserItemsListRequest {
	return &NullableUserItemsListRequest{value: val, isSet: true}
}

func (v NullableUserItemsListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserItemsListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


