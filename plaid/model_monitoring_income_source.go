/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// MonitoringIncomeSource An object representing an income source
type MonitoringIncomeSource struct {
	// A unique identifier for an income source
	IncomeSourceId string `json:"income_source_id"`
	// The most common name or original description for the underlying income transactions
	IncomeDescription string `json:"income_description"`
	IncomeCategory CreditBankIncomeCategory `json:"income_category"`
	// The last detected transaction date for this income source
	LastTransactionDate string `json:"last_transaction_date"`
	AdditionalProperties map[string]interface{}
}

type _MonitoringIncomeSource MonitoringIncomeSource

// NewMonitoringIncomeSource instantiates a new MonitoringIncomeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringIncomeSource(incomeSourceId string, incomeDescription string, incomeCategory CreditBankIncomeCategory, lastTransactionDate string) *MonitoringIncomeSource {
	this := MonitoringIncomeSource{}
	this.IncomeSourceId = incomeSourceId
	this.IncomeDescription = incomeDescription
	this.IncomeCategory = incomeCategory
	this.LastTransactionDate = lastTransactionDate
	return &this
}

// NewMonitoringIncomeSourceWithDefaults instantiates a new MonitoringIncomeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringIncomeSourceWithDefaults() *MonitoringIncomeSource {
	this := MonitoringIncomeSource{}
	return &this
}

// GetIncomeSourceId returns the IncomeSourceId field value
func (o *MonitoringIncomeSource) GetIncomeSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IncomeSourceId
}

// GetIncomeSourceIdOk returns a tuple with the IncomeSourceId field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeSource) GetIncomeSourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncomeSourceId, true
}

// SetIncomeSourceId sets field value
func (o *MonitoringIncomeSource) SetIncomeSourceId(v string) {
	o.IncomeSourceId = v
}

// GetIncomeDescription returns the IncomeDescription field value
func (o *MonitoringIncomeSource) GetIncomeDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IncomeDescription
}

// GetIncomeDescriptionOk returns a tuple with the IncomeDescription field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeSource) GetIncomeDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncomeDescription, true
}

// SetIncomeDescription sets field value
func (o *MonitoringIncomeSource) SetIncomeDescription(v string) {
	o.IncomeDescription = v
}

// GetIncomeCategory returns the IncomeCategory field value
func (o *MonitoringIncomeSource) GetIncomeCategory() CreditBankIncomeCategory {
	if o == nil {
		var ret CreditBankIncomeCategory
		return ret
	}

	return o.IncomeCategory
}

// GetIncomeCategoryOk returns a tuple with the IncomeCategory field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeSource) GetIncomeCategoryOk() (*CreditBankIncomeCategory, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncomeCategory, true
}

// SetIncomeCategory sets field value
func (o *MonitoringIncomeSource) SetIncomeCategory(v CreditBankIncomeCategory) {
	o.IncomeCategory = v
}

// GetLastTransactionDate returns the LastTransactionDate field value
func (o *MonitoringIncomeSource) GetLastTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastTransactionDate
}

// GetLastTransactionDateOk returns a tuple with the LastTransactionDate field value
// and a boolean to check if the value has been set.
func (o *MonitoringIncomeSource) GetLastTransactionDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastTransactionDate, true
}

// SetLastTransactionDate sets field value
func (o *MonitoringIncomeSource) SetLastTransactionDate(v string) {
	o.LastTransactionDate = v
}

func (o MonitoringIncomeSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["income_source_id"] = o.IncomeSourceId
	}
	if true {
		toSerialize["income_description"] = o.IncomeDescription
	}
	if true {
		toSerialize["income_category"] = o.IncomeCategory
	}
	if true {
		toSerialize["last_transaction_date"] = o.LastTransactionDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MonitoringIncomeSource) UnmarshalJSON(bytes []byte) (err error) {
	varMonitoringIncomeSource := _MonitoringIncomeSource{}

	if err = json.Unmarshal(bytes, &varMonitoringIncomeSource); err == nil {
		*o = MonitoringIncomeSource(varMonitoringIncomeSource)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "income_source_id")
		delete(additionalProperties, "income_description")
		delete(additionalProperties, "income_category")
		delete(additionalProperties, "last_transaction_date")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMonitoringIncomeSource struct {
	value *MonitoringIncomeSource
	isSet bool
}

func (v NullableMonitoringIncomeSource) Get() *MonitoringIncomeSource {
	return v.value
}

func (v *NullableMonitoringIncomeSource) Set(val *MonitoringIncomeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringIncomeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringIncomeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringIncomeSource(val *MonitoringIncomeSource) *NullableMonitoringIncomeSource {
	return &NullableMonitoringIncomeSource{value: val, isSet: true}
}

func (v NullableMonitoringIncomeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringIncomeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


