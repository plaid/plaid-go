/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.457.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CreditFreddieMacLoan Information specific to a mortgage loan agreement between one or more borrowers and a mortgage lender.
type CreditFreddieMacLoan struct {
	LOAN_IDENTIFIERS CreditFreddieMacLoanIdentifiers `json:"LOAN_IDENTIFIERS"`
	// Type of loan. The value can only be \"SubjectLoan\"
	LoanRoleType string `json:"LoanRoleType"`
	AdditionalProperties map[string]interface{}
}

type _CreditFreddieMacLoan CreditFreddieMacLoan

// NewCreditFreddieMacLoan instantiates a new CreditFreddieMacLoan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditFreddieMacLoan(lOANIDENTIFIERS CreditFreddieMacLoanIdentifiers, loanRoleType string) *CreditFreddieMacLoan {
	this := CreditFreddieMacLoan{}
	this.LOAN_IDENTIFIERS = lOANIDENTIFIERS
	this.LoanRoleType = loanRoleType
	return &this
}

// NewCreditFreddieMacLoanWithDefaults instantiates a new CreditFreddieMacLoan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditFreddieMacLoanWithDefaults() *CreditFreddieMacLoan {
	this := CreditFreddieMacLoan{}
	return &this
}

// GetLOAN_IDENTIFIERS returns the LOAN_IDENTIFIERS field value
func (o *CreditFreddieMacLoan) GetLOAN_IDENTIFIERS() CreditFreddieMacLoanIdentifiers {
	if o == nil {
		var ret CreditFreddieMacLoanIdentifiers
		return ret
	}

	return o.LOAN_IDENTIFIERS
}

// GetLOAN_IDENTIFIERSOk returns a tuple with the LOAN_IDENTIFIERS field value
// and a boolean to check if the value has been set.
func (o *CreditFreddieMacLoan) GetLOAN_IDENTIFIERSOk() (*CreditFreddieMacLoanIdentifiers, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LOAN_IDENTIFIERS, true
}

// SetLOAN_IDENTIFIERS sets field value
func (o *CreditFreddieMacLoan) SetLOAN_IDENTIFIERS(v CreditFreddieMacLoanIdentifiers) {
	o.LOAN_IDENTIFIERS = v
}

// GetLoanRoleType returns the LoanRoleType field value
func (o *CreditFreddieMacLoan) GetLoanRoleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoanRoleType
}

// GetLoanRoleTypeOk returns a tuple with the LoanRoleType field value
// and a boolean to check if the value has been set.
func (o *CreditFreddieMacLoan) GetLoanRoleTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoanRoleType, true
}

// SetLoanRoleType sets field value
func (o *CreditFreddieMacLoan) SetLoanRoleType(v string) {
	o.LoanRoleType = v
}

func (o CreditFreddieMacLoan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["LOAN_IDENTIFIERS"] = o.LOAN_IDENTIFIERS
	}
	if true {
		toSerialize["LoanRoleType"] = o.LoanRoleType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreditFreddieMacLoan) UnmarshalJSON(bytes []byte) (err error) {
	varCreditFreddieMacLoan := _CreditFreddieMacLoan{}

	if err = json.Unmarshal(bytes, &varCreditFreddieMacLoan); err == nil {
		*o = CreditFreddieMacLoan(varCreditFreddieMacLoan)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "LOAN_IDENTIFIERS")
		delete(additionalProperties, "LoanRoleType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreditFreddieMacLoan struct {
	value *CreditFreddieMacLoan
	isSet bool
}

func (v NullableCreditFreddieMacLoan) Get() *CreditFreddieMacLoan {
	return v.value
}

func (v *NullableCreditFreddieMacLoan) Set(val *CreditFreddieMacLoan) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditFreddieMacLoan) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditFreddieMacLoan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditFreddieMacLoan(val *CreditFreddieMacLoan) *NullableCreditFreddieMacLoan {
	return &NullableCreditFreddieMacLoan{value: val, isSet: true}
}

func (v NullableCreditFreddieMacLoan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditFreddieMacLoan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


