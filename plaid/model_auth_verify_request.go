/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.664.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// AuthVerifyRequest AuthVerifyRequest defines the request schema for `/auth/verify`
type AuthVerifyRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// Account owner's legal name
	LegalName NullableString `json:"legal_name,omitempty"`
	Numbers AuthVerifyRequestNumbers `json:"numbers"`
}

// NewAuthVerifyRequest instantiates a new AuthVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthVerifyRequest(numbers AuthVerifyRequestNumbers) *AuthVerifyRequest {
	this := AuthVerifyRequest{}
	this.Numbers = numbers
	return &this
}

// NewAuthVerifyRequestWithDefaults instantiates a new AuthVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthVerifyRequestWithDefaults() *AuthVerifyRequest {
	this := AuthVerifyRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *AuthVerifyRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthVerifyRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *AuthVerifyRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *AuthVerifyRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *AuthVerifyRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthVerifyRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *AuthVerifyRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *AuthVerifyRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetLegalName returns the LegalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthVerifyRequest) GetLegalName() string {
	if o == nil || o.LegalName.Get() == nil {
		var ret string
		return ret
	}
	return *o.LegalName.Get()
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthVerifyRequest) GetLegalNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LegalName.Get(), o.LegalName.IsSet()
}

// HasLegalName returns a boolean if a field has been set.
func (o *AuthVerifyRequest) HasLegalName() bool {
	if o != nil && o.LegalName.IsSet() {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given NullableString and assigns it to the LegalName field.
func (o *AuthVerifyRequest) SetLegalName(v string) {
	o.LegalName.Set(&v)
}
// SetLegalNameNil sets the value for LegalName to be an explicit nil
func (o *AuthVerifyRequest) SetLegalNameNil() {
	o.LegalName.Set(nil)
}

// UnsetLegalName ensures that no value is present for LegalName, not even an explicit nil
func (o *AuthVerifyRequest) UnsetLegalName() {
	o.LegalName.Unset()
}

// GetNumbers returns the Numbers field value
func (o *AuthVerifyRequest) GetNumbers() AuthVerifyRequestNumbers {
	if o == nil {
		var ret AuthVerifyRequestNumbers
		return ret
	}

	return o.Numbers
}

// GetNumbersOk returns a tuple with the Numbers field value
// and a boolean to check if the value has been set.
func (o *AuthVerifyRequest) GetNumbersOk() (*AuthVerifyRequestNumbers, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Numbers, true
}

// SetNumbers sets field value
func (o *AuthVerifyRequest) SetNumbers(v AuthVerifyRequestNumbers) {
	o.Numbers = v
}

func (o AuthVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.LegalName.IsSet() {
		toSerialize["legal_name"] = o.LegalName.Get()
	}
	if true {
		toSerialize["numbers"] = o.Numbers
	}
	return json.Marshal(toSerialize)
}

type NullableAuthVerifyRequest struct {
	value *AuthVerifyRequest
	isSet bool
}

func (v NullableAuthVerifyRequest) Get() *AuthVerifyRequest {
	return v.value
}

func (v *NullableAuthVerifyRequest) Set(val *AuthVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthVerifyRequest(val *AuthVerifyRequest) *NullableAuthVerifyRequest {
	return &NullableAuthVerifyRequest{value: val, isSet: true}
}

func (v NullableAuthVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


