/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// AccountVerificationInsightsAccountNumberFormat Indicator of account number format validity for institution.  `valid`: indicates that the account number has a correct format for the institution.  `invalid`: indicates that the account number has an incorrect format for the institution.  `unknown`: indicates that there was not enough information to determine whether the format is correct for the institution.
type AccountVerificationInsightsAccountNumberFormat string

var _ = fmt.Printf

// List of AccountVerificationInsightsAccountNumberFormat
const (
	ACCOUNTVERIFICATIONINSIGHTSACCOUNTNUMBERFORMAT_VALID AccountVerificationInsightsAccountNumberFormat = "valid"
	ACCOUNTVERIFICATIONINSIGHTSACCOUNTNUMBERFORMAT_INVALID AccountVerificationInsightsAccountNumberFormat = "invalid"
	ACCOUNTVERIFICATIONINSIGHTSACCOUNTNUMBERFORMAT_UNKNOWN AccountVerificationInsightsAccountNumberFormat = "unknown"
)

var allowedAccountVerificationInsightsAccountNumberFormatEnumValues = []AccountVerificationInsightsAccountNumberFormat{
	"valid",
	"invalid",
	"unknown",
}

func (v *AccountVerificationInsightsAccountNumberFormat) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := AccountVerificationInsightsAccountNumberFormat(value)


	*v = enumTypeValue
	return nil
}

// NewAccountVerificationInsightsAccountNumberFormatFromValue returns a pointer to a valid AccountVerificationInsightsAccountNumberFormat
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccountVerificationInsightsAccountNumberFormatFromValue(v string) (*AccountVerificationInsightsAccountNumberFormat, error) {
	ev := AccountVerificationInsightsAccountNumberFormat(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccountVerificationInsightsAccountNumberFormat) IsValid() bool {
	for _, existing := range allowedAccountVerificationInsightsAccountNumberFormatEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AccountVerificationInsightsAccountNumberFormat value
func (v AccountVerificationInsightsAccountNumberFormat) Ptr() *AccountVerificationInsightsAccountNumberFormat {
	return &v
}

type NullableAccountVerificationInsightsAccountNumberFormat struct {
	value *AccountVerificationInsightsAccountNumberFormat
	isSet bool
}

func (v NullableAccountVerificationInsightsAccountNumberFormat) Get() *AccountVerificationInsightsAccountNumberFormat {
	return v.value
}

func (v *NullableAccountVerificationInsightsAccountNumberFormat) Set(val *AccountVerificationInsightsAccountNumberFormat) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountVerificationInsightsAccountNumberFormat) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountVerificationInsightsAccountNumberFormat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountVerificationInsightsAccountNumberFormat(val *AccountVerificationInsightsAccountNumberFormat) *NullableAccountVerificationInsightsAccountNumberFormat {
	return &NullableAccountVerificationInsightsAccountNumberFormat{value: val, isSet: true}
}

func (v NullableAccountVerificationInsightsAccountNumberFormat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountVerificationInsightsAccountNumberFormat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

