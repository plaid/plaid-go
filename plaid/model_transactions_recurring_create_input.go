/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.482.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransactionsRecurringCreateInput TransactionsRecurringCreateInput defines a single input to the `/transactions/recurring/streams/create` endpoint.
type TransactionsRecurringCreateInput struct {
	// IDs of all the transactions that will be merged into one stream. If any transaction currently exists in another stream, it will be removed from the other stream.
	TransactionIds *[]string `json:"transaction_ids,omitempty"`
}

// NewTransactionsRecurringCreateInput instantiates a new TransactionsRecurringCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionsRecurringCreateInput() *TransactionsRecurringCreateInput {
	this := TransactionsRecurringCreateInput{}
	return &this
}

// NewTransactionsRecurringCreateInputWithDefaults instantiates a new TransactionsRecurringCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionsRecurringCreateInputWithDefaults() *TransactionsRecurringCreateInput {
	this := TransactionsRecurringCreateInput{}
	return &this
}

// GetTransactionIds returns the TransactionIds field value if set, zero value otherwise.
func (o *TransactionsRecurringCreateInput) GetTransactionIds() []string {
	if o == nil || o.TransactionIds == nil {
		var ret []string
		return ret
	}
	return *o.TransactionIds
}

// GetTransactionIdsOk returns a tuple with the TransactionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsRecurringCreateInput) GetTransactionIdsOk() (*[]string, bool) {
	if o == nil || o.TransactionIds == nil {
		return nil, false
	}
	return o.TransactionIds, true
}

// HasTransactionIds returns a boolean if a field has been set.
func (o *TransactionsRecurringCreateInput) HasTransactionIds() bool {
	if o != nil && o.TransactionIds != nil {
		return true
	}

	return false
}

// SetTransactionIds gets a reference to the given []string and assigns it to the TransactionIds field.
func (o *TransactionsRecurringCreateInput) SetTransactionIds(v []string) {
	o.TransactionIds = &v
}

func (o TransactionsRecurringCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransactionIds != nil {
		toSerialize["transaction_ids"] = o.TransactionIds
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionsRecurringCreateInput struct {
	value *TransactionsRecurringCreateInput
	isSet bool
}

func (v NullableTransactionsRecurringCreateInput) Get() *TransactionsRecurringCreateInput {
	return v.value
}

func (v *NullableTransactionsRecurringCreateInput) Set(val *TransactionsRecurringCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionsRecurringCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionsRecurringCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionsRecurringCreateInput(val *TransactionsRecurringCreateInput) *NullableTransactionsRecurringCreateInput {
	return &NullableTransactionsRecurringCreateInput{value: val, isSet: true}
}

func (v NullableTransactionsRecurringCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionsRecurringCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


