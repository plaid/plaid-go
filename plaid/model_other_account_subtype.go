/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.525.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// OtherAccountSubtype Valid account subtypes for other accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-other).
type OtherAccountSubtype string

var _ = fmt.Printf

// List of OtherAccountSubtype
const (
	OTHERACCOUNTSUBTYPE_OTHER OtherAccountSubtype = "other"
	OTHERACCOUNTSUBTYPE_ALL OtherAccountSubtype = "all"
)

var allowedOtherAccountSubtypeEnumValues = []OtherAccountSubtype{
	"other",
	"all",
}

func (v *OtherAccountSubtype) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := OtherAccountSubtype(value)


	*v = enumTypeValue
	return nil
}

// NewOtherAccountSubtypeFromValue returns a pointer to a valid OtherAccountSubtype
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOtherAccountSubtypeFromValue(v string) (*OtherAccountSubtype, error) {
	ev := OtherAccountSubtype(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OtherAccountSubtype) IsValid() bool {
	for _, existing := range allowedOtherAccountSubtypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OtherAccountSubtype value
func (v OtherAccountSubtype) Ptr() *OtherAccountSubtype {
	return &v
}

type NullableOtherAccountSubtype struct {
	value *OtherAccountSubtype
	isSet bool
}

func (v NullableOtherAccountSubtype) Get() *OtherAccountSubtype {
	return v.value
}

func (v *NullableOtherAccountSubtype) Set(val *OtherAccountSubtype) {
	v.value = val
	v.isSet = true
}

func (v NullableOtherAccountSubtype) IsSet() bool {
	return v.isSet
}

func (v *NullableOtherAccountSubtype) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtherAccountSubtype(val *OtherAccountSubtype) *NullableOtherAccountSubtype {
	return &NullableOtherAccountSubtype{value: val, isSet: true}
}

func (v NullableOtherAccountSubtype) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtherAccountSubtype) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

