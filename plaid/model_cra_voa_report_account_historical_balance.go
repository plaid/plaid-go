/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraVoaReportAccountHistoricalBalance An object representing a balance held by an account in the past.
type CraVoaReportAccountHistoricalBalance struct {
	// The total amount of funds in the account, calculated from the `current` balance in the `balance` object by subtracting inflows and adding back outflows according to the posted date of each transaction.
	Current float64 `json:"current"`
	// The date of the calculated historical balance, in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
	Date string `json:"date"`
	// The ISO-4217 currency code of the balance. Always `null` if `unofficial_currency_code` is non-`null`.
	IsoCurrencyCode NullableString `json:"iso_currency_code"`
	// The unofficial currency code associated with the balance. Always `null` if `iso_currency_code` is non-`null`.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
	UnofficialCurrencyCode NullableString `json:"unofficial_currency_code"`
	AdditionalProperties map[string]interface{}
}

type _CraVoaReportAccountHistoricalBalance CraVoaReportAccountHistoricalBalance

// NewCraVoaReportAccountHistoricalBalance instantiates a new CraVoaReportAccountHistoricalBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraVoaReportAccountHistoricalBalance(current float64, date string, isoCurrencyCode NullableString, unofficialCurrencyCode NullableString) *CraVoaReportAccountHistoricalBalance {
	this := CraVoaReportAccountHistoricalBalance{}
	this.Current = current
	this.Date = date
	this.IsoCurrencyCode = isoCurrencyCode
	this.UnofficialCurrencyCode = unofficialCurrencyCode
	return &this
}

// NewCraVoaReportAccountHistoricalBalanceWithDefaults instantiates a new CraVoaReportAccountHistoricalBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraVoaReportAccountHistoricalBalanceWithDefaults() *CraVoaReportAccountHistoricalBalance {
	this := CraVoaReportAccountHistoricalBalance{}
	return &this
}

// GetCurrent returns the Current field value
func (o *CraVoaReportAccountHistoricalBalance) GetCurrent() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value
// and a boolean to check if the value has been set.
func (o *CraVoaReportAccountHistoricalBalance) GetCurrentOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Current, true
}

// SetCurrent sets field value
func (o *CraVoaReportAccountHistoricalBalance) SetCurrent(v float64) {
	o.Current = v
}

// GetDate returns the Date field value
func (o *CraVoaReportAccountHistoricalBalance) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *CraVoaReportAccountHistoricalBalance) GetDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *CraVoaReportAccountHistoricalBalance) SetDate(v string) {
	o.Date = v
}

// GetIsoCurrencyCode returns the IsoCurrencyCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CraVoaReportAccountHistoricalBalance) GetIsoCurrencyCode() string {
	if o == nil || o.IsoCurrencyCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.IsoCurrencyCode.Get()
}

// GetIsoCurrencyCodeOk returns a tuple with the IsoCurrencyCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraVoaReportAccountHistoricalBalance) GetIsoCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsoCurrencyCode.Get(), o.IsoCurrencyCode.IsSet()
}

// SetIsoCurrencyCode sets field value
func (o *CraVoaReportAccountHistoricalBalance) SetIsoCurrencyCode(v string) {
	o.IsoCurrencyCode.Set(&v)
}

// GetUnofficialCurrencyCode returns the UnofficialCurrencyCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CraVoaReportAccountHistoricalBalance) GetUnofficialCurrencyCode() string {
	if o == nil || o.UnofficialCurrencyCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.UnofficialCurrencyCode.Get()
}

// GetUnofficialCurrencyCodeOk returns a tuple with the UnofficialCurrencyCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraVoaReportAccountHistoricalBalance) GetUnofficialCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UnofficialCurrencyCode.Get(), o.UnofficialCurrencyCode.IsSet()
}

// SetUnofficialCurrencyCode sets field value
func (o *CraVoaReportAccountHistoricalBalance) SetUnofficialCurrencyCode(v string) {
	o.UnofficialCurrencyCode.Set(&v)
}

func (o CraVoaReportAccountHistoricalBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["current"] = o.Current
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["iso_currency_code"] = o.IsoCurrencyCode.Get()
	}
	if true {
		toSerialize["unofficial_currency_code"] = o.UnofficialCurrencyCode.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraVoaReportAccountHistoricalBalance) UnmarshalJSON(bytes []byte) (err error) {
	varCraVoaReportAccountHistoricalBalance := _CraVoaReportAccountHistoricalBalance{}

	if err = json.Unmarshal(bytes, &varCraVoaReportAccountHistoricalBalance); err == nil {
		*o = CraVoaReportAccountHistoricalBalance(varCraVoaReportAccountHistoricalBalance)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "current")
		delete(additionalProperties, "date")
		delete(additionalProperties, "iso_currency_code")
		delete(additionalProperties, "unofficial_currency_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraVoaReportAccountHistoricalBalance struct {
	value *CraVoaReportAccountHistoricalBalance
	isSet bool
}

func (v NullableCraVoaReportAccountHistoricalBalance) Get() *CraVoaReportAccountHistoricalBalance {
	return v.value
}

func (v *NullableCraVoaReportAccountHistoricalBalance) Set(val *CraVoaReportAccountHistoricalBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableCraVoaReportAccountHistoricalBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableCraVoaReportAccountHistoricalBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraVoaReportAccountHistoricalBalance(val *CraVoaReportAccountHistoricalBalance) *NullableCraVoaReportAccountHistoricalBalance {
	return &NullableCraVoaReportAccountHistoricalBalance{value: val, isSet: true}
}

func (v NullableCraVoaReportAccountHistoricalBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraVoaReportAccountHistoricalBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


