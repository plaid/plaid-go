/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.503.5
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CounterpartyInsights Insights around a user's counterparties
type CounterpartyInsights struct {
	// Insights related to a user’s transactions with other financial institutions, including detected account types.
	FinancialInstitutionInsights *[]FinancialInstitutionInsights `json:"financial_institution_insights,omitempty"`
	// Insights about a user’s top merchants, ranked by spend.
	MerchantInsights *[]MerchantInsights `json:"merchant_insights,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CounterpartyInsights CounterpartyInsights

// NewCounterpartyInsights instantiates a new CounterpartyInsights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCounterpartyInsights() *CounterpartyInsights {
	this := CounterpartyInsights{}
	return &this
}

// NewCounterpartyInsightsWithDefaults instantiates a new CounterpartyInsights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCounterpartyInsightsWithDefaults() *CounterpartyInsights {
	this := CounterpartyInsights{}
	return &this
}

// GetFinancialInstitutionInsights returns the FinancialInstitutionInsights field value if set, zero value otherwise.
func (o *CounterpartyInsights) GetFinancialInstitutionInsights() []FinancialInstitutionInsights {
	if o == nil || o.FinancialInstitutionInsights == nil {
		var ret []FinancialInstitutionInsights
		return ret
	}
	return *o.FinancialInstitutionInsights
}

// GetFinancialInstitutionInsightsOk returns a tuple with the FinancialInstitutionInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CounterpartyInsights) GetFinancialInstitutionInsightsOk() (*[]FinancialInstitutionInsights, bool) {
	if o == nil || o.FinancialInstitutionInsights == nil {
		return nil, false
	}
	return o.FinancialInstitutionInsights, true
}

// HasFinancialInstitutionInsights returns a boolean if a field has been set.
func (o *CounterpartyInsights) HasFinancialInstitutionInsights() bool {
	if o != nil && o.FinancialInstitutionInsights != nil {
		return true
	}

	return false
}

// SetFinancialInstitutionInsights gets a reference to the given []FinancialInstitutionInsights and assigns it to the FinancialInstitutionInsights field.
func (o *CounterpartyInsights) SetFinancialInstitutionInsights(v []FinancialInstitutionInsights) {
	o.FinancialInstitutionInsights = &v
}

// GetMerchantInsights returns the MerchantInsights field value if set, zero value otherwise.
func (o *CounterpartyInsights) GetMerchantInsights() []MerchantInsights {
	if o == nil || o.MerchantInsights == nil {
		var ret []MerchantInsights
		return ret
	}
	return *o.MerchantInsights
}

// GetMerchantInsightsOk returns a tuple with the MerchantInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CounterpartyInsights) GetMerchantInsightsOk() (*[]MerchantInsights, bool) {
	if o == nil || o.MerchantInsights == nil {
		return nil, false
	}
	return o.MerchantInsights, true
}

// HasMerchantInsights returns a boolean if a field has been set.
func (o *CounterpartyInsights) HasMerchantInsights() bool {
	if o != nil && o.MerchantInsights != nil {
		return true
	}

	return false
}

// SetMerchantInsights gets a reference to the given []MerchantInsights and assigns it to the MerchantInsights field.
func (o *CounterpartyInsights) SetMerchantInsights(v []MerchantInsights) {
	o.MerchantInsights = &v
}

func (o CounterpartyInsights) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FinancialInstitutionInsights != nil {
		toSerialize["financial_institution_insights"] = o.FinancialInstitutionInsights
	}
	if o.MerchantInsights != nil {
		toSerialize["merchant_insights"] = o.MerchantInsights
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CounterpartyInsights) UnmarshalJSON(bytes []byte) (err error) {
	varCounterpartyInsights := _CounterpartyInsights{}

	if err = json.Unmarshal(bytes, &varCounterpartyInsights); err == nil {
		*o = CounterpartyInsights(varCounterpartyInsights)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "financial_institution_insights")
		delete(additionalProperties, "merchant_insights")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCounterpartyInsights struct {
	value *CounterpartyInsights
	isSet bool
}

func (v NullableCounterpartyInsights) Get() *CounterpartyInsights {
	return v.value
}

func (v *NullableCounterpartyInsights) Set(val *CounterpartyInsights) {
	v.value = val
	v.isSet = true
}

func (v NullableCounterpartyInsights) IsSet() bool {
	return v.isSet
}

func (v *NullableCounterpartyInsights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCounterpartyInsights(val *CounterpartyInsights) *NullableCounterpartyInsights {
	return &NullableCounterpartyInsights{value: val, isSet: true}
}

func (v NullableCounterpartyInsights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCounterpartyInsights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


