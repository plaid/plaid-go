/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// AuthUpdateTypes The possible types of auth data that may have changed.
type AuthUpdateTypes string

var _ = fmt.Printf

// List of AuthUpdateTypes
const (
	AUTHUPDATETYPES_ACCOUNT_NUMBER AuthUpdateTypes = "ACCOUNT_NUMBER"
	AUTHUPDATETYPES_ROUTING_NUMBER AuthUpdateTypes = "ROUTING_NUMBER"
)

var allowedAuthUpdateTypesEnumValues = []AuthUpdateTypes{
	"ACCOUNT_NUMBER",
	"ROUTING_NUMBER",
}

func (v *AuthUpdateTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := AuthUpdateTypes(value)


	*v = enumTypeValue
	return nil
}

// NewAuthUpdateTypesFromValue returns a pointer to a valid AuthUpdateTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAuthUpdateTypesFromValue(v string) (*AuthUpdateTypes, error) {
	ev := AuthUpdateTypes(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AuthUpdateTypes) IsValid() bool {
	for _, existing := range allowedAuthUpdateTypesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AuthUpdateTypes value
func (v AuthUpdateTypes) Ptr() *AuthUpdateTypes {
	return &v
}

type NullableAuthUpdateTypes struct {
	value *AuthUpdateTypes
	isSet bool
}

func (v NullableAuthUpdateTypes) Get() *AuthUpdateTypes {
	return v.value
}

func (v *NullableAuthUpdateTypes) Set(val *AuthUpdateTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthUpdateTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthUpdateTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthUpdateTypes(val *AuthUpdateTypes) *NullableAuthUpdateTypes {
	return &NullableAuthUpdateTypes{value: val, isSet: true}
}

func (v NullableAuthUpdateTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthUpdateTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

