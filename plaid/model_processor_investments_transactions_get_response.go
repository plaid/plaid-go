/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.645.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ProcessorInvestmentsTransactionsGetResponse ProcessorInvestmentsTransactionsGetRequest defines the response schema for `/processor/investments/transactions/get`
type ProcessorInvestmentsTransactionsGetResponse struct {
	Account AccountBase `json:"account"`
	// An array containing investment transactions from the account. Investments transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
	InvestmentTransactions []InvestmentTransaction `json:"investment_transactions"`
	// All securities for which there is a corresponding transaction being fetched.
	Securities []Security `json:"securities"`
	// The total number of transactions available within the date range specified. If `total_investment_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
	TotalInvestmentTransactions int32 `json:"total_investment_transactions"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	// When true, this field indicates that the Item's portfolio was manually created with the Investments Fallback flow.
	IsInvestmentsFallbackItem *bool `json:"is_investments_fallback_item,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProcessorInvestmentsTransactionsGetResponse ProcessorInvestmentsTransactionsGetResponse

// NewProcessorInvestmentsTransactionsGetResponse instantiates a new ProcessorInvestmentsTransactionsGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessorInvestmentsTransactionsGetResponse(account AccountBase, investmentTransactions []InvestmentTransaction, securities []Security, totalInvestmentTransactions int32, requestId string) *ProcessorInvestmentsTransactionsGetResponse {
	this := ProcessorInvestmentsTransactionsGetResponse{}
	this.Account = account
	this.InvestmentTransactions = investmentTransactions
	this.Securities = securities
	this.TotalInvestmentTransactions = totalInvestmentTransactions
	this.RequestId = requestId
	return &this
}

// NewProcessorInvestmentsTransactionsGetResponseWithDefaults instantiates a new ProcessorInvestmentsTransactionsGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessorInvestmentsTransactionsGetResponseWithDefaults() *ProcessorInvestmentsTransactionsGetResponse {
	this := ProcessorInvestmentsTransactionsGetResponse{}
	return &this
}

// GetAccount returns the Account field value
func (o *ProcessorInvestmentsTransactionsGetResponse) GetAccount() AccountBase {
	if o == nil {
		var ret AccountBase
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsTransactionsGetResponse) GetAccountOk() (*AccountBase, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *ProcessorInvestmentsTransactionsGetResponse) SetAccount(v AccountBase) {
	o.Account = v
}

// GetInvestmentTransactions returns the InvestmentTransactions field value
func (o *ProcessorInvestmentsTransactionsGetResponse) GetInvestmentTransactions() []InvestmentTransaction {
	if o == nil {
		var ret []InvestmentTransaction
		return ret
	}

	return o.InvestmentTransactions
}

// GetInvestmentTransactionsOk returns a tuple with the InvestmentTransactions field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsTransactionsGetResponse) GetInvestmentTransactionsOk() (*[]InvestmentTransaction, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InvestmentTransactions, true
}

// SetInvestmentTransactions sets field value
func (o *ProcessorInvestmentsTransactionsGetResponse) SetInvestmentTransactions(v []InvestmentTransaction) {
	o.InvestmentTransactions = v
}

// GetSecurities returns the Securities field value
func (o *ProcessorInvestmentsTransactionsGetResponse) GetSecurities() []Security {
	if o == nil {
		var ret []Security
		return ret
	}

	return o.Securities
}

// GetSecuritiesOk returns a tuple with the Securities field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsTransactionsGetResponse) GetSecuritiesOk() (*[]Security, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Securities, true
}

// SetSecurities sets field value
func (o *ProcessorInvestmentsTransactionsGetResponse) SetSecurities(v []Security) {
	o.Securities = v
}

// GetTotalInvestmentTransactions returns the TotalInvestmentTransactions field value
func (o *ProcessorInvestmentsTransactionsGetResponse) GetTotalInvestmentTransactions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalInvestmentTransactions
}

// GetTotalInvestmentTransactionsOk returns a tuple with the TotalInvestmentTransactions field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsTransactionsGetResponse) GetTotalInvestmentTransactionsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalInvestmentTransactions, true
}

// SetTotalInvestmentTransactions sets field value
func (o *ProcessorInvestmentsTransactionsGetResponse) SetTotalInvestmentTransactions(v int32) {
	o.TotalInvestmentTransactions = v
}

// GetRequestId returns the RequestId field value
func (o *ProcessorInvestmentsTransactionsGetResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsTransactionsGetResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ProcessorInvestmentsTransactionsGetResponse) SetRequestId(v string) {
	o.RequestId = v
}

// GetIsInvestmentsFallbackItem returns the IsInvestmentsFallbackItem field value if set, zero value otherwise.
func (o *ProcessorInvestmentsTransactionsGetResponse) GetIsInvestmentsFallbackItem() bool {
	if o == nil || o.IsInvestmentsFallbackItem == nil {
		var ret bool
		return ret
	}
	return *o.IsInvestmentsFallbackItem
}

// GetIsInvestmentsFallbackItemOk returns a tuple with the IsInvestmentsFallbackItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessorInvestmentsTransactionsGetResponse) GetIsInvestmentsFallbackItemOk() (*bool, bool) {
	if o == nil || o.IsInvestmentsFallbackItem == nil {
		return nil, false
	}
	return o.IsInvestmentsFallbackItem, true
}

// HasIsInvestmentsFallbackItem returns a boolean if a field has been set.
func (o *ProcessorInvestmentsTransactionsGetResponse) HasIsInvestmentsFallbackItem() bool {
	if o != nil && o.IsInvestmentsFallbackItem != nil {
		return true
	}

	return false
}

// SetIsInvestmentsFallbackItem gets a reference to the given bool and assigns it to the IsInvestmentsFallbackItem field.
func (o *ProcessorInvestmentsTransactionsGetResponse) SetIsInvestmentsFallbackItem(v bool) {
	o.IsInvestmentsFallbackItem = &v
}

func (o ProcessorInvestmentsTransactionsGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account"] = o.Account
	}
	if true {
		toSerialize["investment_transactions"] = o.InvestmentTransactions
	}
	if true {
		toSerialize["securities"] = o.Securities
	}
	if true {
		toSerialize["total_investment_transactions"] = o.TotalInvestmentTransactions
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}
	if o.IsInvestmentsFallbackItem != nil {
		toSerialize["is_investments_fallback_item"] = o.IsInvestmentsFallbackItem
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProcessorInvestmentsTransactionsGetResponse) UnmarshalJSON(bytes []byte) (err error) {
	varProcessorInvestmentsTransactionsGetResponse := _ProcessorInvestmentsTransactionsGetResponse{}

	if err = json.Unmarshal(bytes, &varProcessorInvestmentsTransactionsGetResponse); err == nil {
		*o = ProcessorInvestmentsTransactionsGetResponse(varProcessorInvestmentsTransactionsGetResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account")
		delete(additionalProperties, "investment_transactions")
		delete(additionalProperties, "securities")
		delete(additionalProperties, "total_investment_transactions")
		delete(additionalProperties, "request_id")
		delete(additionalProperties, "is_investments_fallback_item")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProcessorInvestmentsTransactionsGetResponse struct {
	value *ProcessorInvestmentsTransactionsGetResponse
	isSet bool
}

func (v NullableProcessorInvestmentsTransactionsGetResponse) Get() *ProcessorInvestmentsTransactionsGetResponse {
	return v.value
}

func (v *NullableProcessorInvestmentsTransactionsGetResponse) Set(val *ProcessorInvestmentsTransactionsGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessorInvestmentsTransactionsGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessorInvestmentsTransactionsGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessorInvestmentsTransactionsGetResponse(val *ProcessorInvestmentsTransactionsGetResponse) *NullableProcessorInvestmentsTransactionsGetResponse {
	return &NullableProcessorInvestmentsTransactionsGetResponse{value: val, isSet: true}
}

func (v NullableProcessorInvestmentsTransactionsGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessorInvestmentsTransactionsGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


