/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.21.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// TransferDirection Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.
type TransferDirection string

// List of TransferDirection
const (
	TRANSFERDIRECTION_OUTBOUND TransferDirection = "outbound"
	TRANSFERDIRECTION_INBOUND TransferDirection = "inbound"
	TRANSFERDIRECTION_NULL TransferDirection = "null"
)

var allowedTransferDirectionEnumValues = []TransferDirection{
	"outbound",
	"inbound",
	"null",
}

func (v *TransferDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TransferDirection(value)
	for _, existing := range allowedTransferDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TransferDirection", value)
}

// NewTransferDirectionFromValue returns a pointer to a valid TransferDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTransferDirectionFromValue(v string) (*TransferDirection, error) {
	ev := TransferDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TransferDirection: valid values are %v", v, allowedTransferDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TransferDirection) IsValid() bool {
	for _, existing := range allowedTransferDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TransferDirection value
func (v TransferDirection) Ptr() *TransferDirection {
	return &v
}

type NullableTransferDirection struct {
	value *TransferDirection
	isSet bool
}

func (v NullableTransferDirection) Get() *TransferDirection {
	return v.value
}

func (v *NullableTransferDirection) Set(val *TransferDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferDirection(val *TransferDirection) *NullableTransferDirection {
	return &NullableTransferDirection{value: val, isSet: true}
}

func (v NullableTransferDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

