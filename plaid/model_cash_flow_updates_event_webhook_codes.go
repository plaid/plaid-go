/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// CashFlowUpdatesEventWebhookCodes Webhook code for a Cash Flow Updates event.
type CashFlowUpdatesEventWebhookCodes string

var _ = fmt.Printf

// List of CashFlowUpdatesEventWebhookCodes
const (
	CASHFLOWUPDATESEVENTWEBHOOKCODES_LARGE_DEPOSIT_DETECTED CashFlowUpdatesEventWebhookCodes = "LARGE_DEPOSIT_DETECTED"
	CASHFLOWUPDATESEVENTWEBHOOKCODES_LOW_BALANCE_DETECTED CashFlowUpdatesEventWebhookCodes = "LOW_BALANCE_DETECTED"
	CASHFLOWUPDATESEVENTWEBHOOKCODES_NEW_LOAN_PAYMENT_DETECTED CashFlowUpdatesEventWebhookCodes = "NEW_LOAN_PAYMENT_DETECTED"
	CASHFLOWUPDATESEVENTWEBHOOKCODES_NSF_OVERDRAFT_DETECTED CashFlowUpdatesEventWebhookCodes = "NSF_OVERDRAFT_DETECTED"
)

var allowedCashFlowUpdatesEventWebhookCodesEnumValues = []CashFlowUpdatesEventWebhookCodes{
	"LARGE_DEPOSIT_DETECTED",
	"LOW_BALANCE_DETECTED",
	"NEW_LOAN_PAYMENT_DETECTED",
	"NSF_OVERDRAFT_DETECTED",
}

func (v *CashFlowUpdatesEventWebhookCodes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := CashFlowUpdatesEventWebhookCodes(value)


	*v = enumTypeValue
	return nil
}

// NewCashFlowUpdatesEventWebhookCodesFromValue returns a pointer to a valid CashFlowUpdatesEventWebhookCodes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCashFlowUpdatesEventWebhookCodesFromValue(v string) (*CashFlowUpdatesEventWebhookCodes, error) {
	ev := CashFlowUpdatesEventWebhookCodes(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CashFlowUpdatesEventWebhookCodes) IsValid() bool {
	for _, existing := range allowedCashFlowUpdatesEventWebhookCodesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CashFlowUpdatesEventWebhookCodes value
func (v CashFlowUpdatesEventWebhookCodes) Ptr() *CashFlowUpdatesEventWebhookCodes {
	return &v
}

type NullableCashFlowUpdatesEventWebhookCodes struct {
	value *CashFlowUpdatesEventWebhookCodes
	isSet bool
}

func (v NullableCashFlowUpdatesEventWebhookCodes) Get() *CashFlowUpdatesEventWebhookCodes {
	return v.value
}

func (v *NullableCashFlowUpdatesEventWebhookCodes) Set(val *CashFlowUpdatesEventWebhookCodes) {
	v.value = val
	v.isSet = true
}

func (v NullableCashFlowUpdatesEventWebhookCodes) IsSet() bool {
	return v.isSet
}

func (v *NullableCashFlowUpdatesEventWebhookCodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashFlowUpdatesEventWebhookCodes(val *CashFlowUpdatesEventWebhookCodes) *NullableCashFlowUpdatesEventWebhookCodes {
	return &NullableCashFlowUpdatesEventWebhookCodes{value: val, isSet: true}
}

func (v NullableCashFlowUpdatesEventWebhookCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashFlowUpdatesEventWebhookCodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

