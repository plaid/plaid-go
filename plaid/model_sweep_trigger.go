/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// SweepTrigger The trigger of the sweep  `\"manual\"` - The sweep is created manually by the customer `\"incoming\"` - The sweep is created by incoming funds flow (e.g. Incoming Wire) `\"balance_threshold\"` - The sweep is created by balance threshold setting `\"automatic_aggregate\"` - The sweep is created by the Plaid automatic aggregation process. These funds did not pass through the Plaid Ledger balance.
type SweepTrigger string

var _ = fmt.Printf

// List of SweepTrigger
const (
	SWEEPTRIGGER_MANUAL SweepTrigger = "manual"
	SWEEPTRIGGER_INCOMING SweepTrigger = "incoming"
	SWEEPTRIGGER_BALANCE_THRESHOLD SweepTrigger = "balance_threshold"
	SWEEPTRIGGER_AUTOMATIC_AGGREGATE SweepTrigger = "automatic_aggregate"
)

var allowedSweepTriggerEnumValues = []SweepTrigger{
	"manual",
	"incoming",
	"balance_threshold",
	"automatic_aggregate",
}

func (v *SweepTrigger) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := SweepTrigger(value)


	*v = enumTypeValue
	return nil
}

// NewSweepTriggerFromValue returns a pointer to a valid SweepTrigger
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSweepTriggerFromValue(v string) (*SweepTrigger, error) {
	ev := SweepTrigger(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SweepTrigger) IsValid() bool {
	for _, existing := range allowedSweepTriggerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SweepTrigger value
func (v SweepTrigger) Ptr() *SweepTrigger {
	return &v
}

type NullableSweepTrigger struct {
	value *SweepTrigger
	isSet bool
}

func (v NullableSweepTrigger) Get() *SweepTrigger {
	return v.value
}

func (v *NullableSweepTrigger) Set(val *SweepTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableSweepTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableSweepTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSweepTrigger(val *SweepTrigger) *NullableSweepTrigger {
	return &NullableSweepTrigger{value: val, isSet: true}
}

func (v NullableSweepTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSweepTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

