/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// PendingDisconnectWebhookReason Reason why the item is about to be disconnected. `INSTITUTION_MIGRATION`: The institution is moving to API or to a different integration. For example, this can occur when an institution moves from a non-OAuth integration to an OAuth integration. `INSTITUTION_TOKEN_EXPIRATION`: The consent on an Item associated with a US or CA institution is about to expire.
type PendingDisconnectWebhookReason string

var _ = fmt.Printf

// List of PendingDisconnectWebhookReason
const (
	PENDINGDISCONNECTWEBHOOKREASON_MIGRATION PendingDisconnectWebhookReason = "INSTITUTION_MIGRATION"
	PENDINGDISCONNECTWEBHOOKREASON_TOKEN_EXPIRATION PendingDisconnectWebhookReason = "INSTITUTION_TOKEN_EXPIRATION"
)

var allowedPendingDisconnectWebhookReasonEnumValues = []PendingDisconnectWebhookReason{
	"INSTITUTION_MIGRATION",
	"INSTITUTION_TOKEN_EXPIRATION",
}

func (v *PendingDisconnectWebhookReason) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := PendingDisconnectWebhookReason(value)


	*v = enumTypeValue
	return nil
}

// NewPendingDisconnectWebhookReasonFromValue returns a pointer to a valid PendingDisconnectWebhookReason
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPendingDisconnectWebhookReasonFromValue(v string) (*PendingDisconnectWebhookReason, error) {
	ev := PendingDisconnectWebhookReason(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PendingDisconnectWebhookReason) IsValid() bool {
	for _, existing := range allowedPendingDisconnectWebhookReasonEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PendingDisconnectWebhookReason value
func (v PendingDisconnectWebhookReason) Ptr() *PendingDisconnectWebhookReason {
	return &v
}

type NullablePendingDisconnectWebhookReason struct {
	value *PendingDisconnectWebhookReason
	isSet bool
}

func (v NullablePendingDisconnectWebhookReason) Get() *PendingDisconnectWebhookReason {
	return v.value
}

func (v *NullablePendingDisconnectWebhookReason) Set(val *PendingDisconnectWebhookReason) {
	v.value = val
	v.isSet = true
}

func (v NullablePendingDisconnectWebhookReason) IsSet() bool {
	return v.isSet
}

func (v *NullablePendingDisconnectWebhookReason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePendingDisconnectWebhookReason(val *PendingDisconnectWebhookReason) *NullablePendingDisconnectWebhookReason {
	return &NullablePendingDisconnectWebhookReason{value: val, isSet: true}
}

func (v NullablePendingDisconnectWebhookReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePendingDisconnectWebhookReason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

