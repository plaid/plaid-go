/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraBankIncomeWarning The warning associated with the data that was unavailable for the Bank Income Report.
type CraBankIncomeWarning struct {
	WarningType *CreditBankIncomeWarningType `json:"warning_type,omitempty"`
	WarningCode *CraBankIncomeWarningCode `json:"warning_code,omitempty"`
	Cause *CraBankIncomeCause `json:"cause,omitempty"`
}

// NewCraBankIncomeWarning instantiates a new CraBankIncomeWarning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraBankIncomeWarning() *CraBankIncomeWarning {
	this := CraBankIncomeWarning{}
	return &this
}

// NewCraBankIncomeWarningWithDefaults instantiates a new CraBankIncomeWarning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraBankIncomeWarningWithDefaults() *CraBankIncomeWarning {
	this := CraBankIncomeWarning{}
	return &this
}

// GetWarningType returns the WarningType field value if set, zero value otherwise.
func (o *CraBankIncomeWarning) GetWarningType() CreditBankIncomeWarningType {
	if o == nil || o.WarningType == nil {
		var ret CreditBankIncomeWarningType
		return ret
	}
	return *o.WarningType
}

// GetWarningTypeOk returns a tuple with the WarningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeWarning) GetWarningTypeOk() (*CreditBankIncomeWarningType, bool) {
	if o == nil || o.WarningType == nil {
		return nil, false
	}
	return o.WarningType, true
}

// HasWarningType returns a boolean if a field has been set.
func (o *CraBankIncomeWarning) HasWarningType() bool {
	if o != nil && o.WarningType != nil {
		return true
	}

	return false
}

// SetWarningType gets a reference to the given CreditBankIncomeWarningType and assigns it to the WarningType field.
func (o *CraBankIncomeWarning) SetWarningType(v CreditBankIncomeWarningType) {
	o.WarningType = &v
}

// GetWarningCode returns the WarningCode field value if set, zero value otherwise.
func (o *CraBankIncomeWarning) GetWarningCode() CraBankIncomeWarningCode {
	if o == nil || o.WarningCode == nil {
		var ret CraBankIncomeWarningCode
		return ret
	}
	return *o.WarningCode
}

// GetWarningCodeOk returns a tuple with the WarningCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeWarning) GetWarningCodeOk() (*CraBankIncomeWarningCode, bool) {
	if o == nil || o.WarningCode == nil {
		return nil, false
	}
	return o.WarningCode, true
}

// HasWarningCode returns a boolean if a field has been set.
func (o *CraBankIncomeWarning) HasWarningCode() bool {
	if o != nil && o.WarningCode != nil {
		return true
	}

	return false
}

// SetWarningCode gets a reference to the given CraBankIncomeWarningCode and assigns it to the WarningCode field.
func (o *CraBankIncomeWarning) SetWarningCode(v CraBankIncomeWarningCode) {
	o.WarningCode = &v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *CraBankIncomeWarning) GetCause() CraBankIncomeCause {
	if o == nil || o.Cause == nil {
		var ret CraBankIncomeCause
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeWarning) GetCauseOk() (*CraBankIncomeCause, bool) {
	if o == nil || o.Cause == nil {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *CraBankIncomeWarning) HasCause() bool {
	if o != nil && o.Cause != nil {
		return true
	}

	return false
}

// SetCause gets a reference to the given CraBankIncomeCause and assigns it to the Cause field.
func (o *CraBankIncomeWarning) SetCause(v CraBankIncomeCause) {
	o.Cause = &v
}

func (o CraBankIncomeWarning) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WarningType != nil {
		toSerialize["warning_type"] = o.WarningType
	}
	if o.WarningCode != nil {
		toSerialize["warning_code"] = o.WarningCode
	}
	if o.Cause != nil {
		toSerialize["cause"] = o.Cause
	}
	return json.Marshal(toSerialize)
}

type NullableCraBankIncomeWarning struct {
	value *CraBankIncomeWarning
	isSet bool
}

func (v NullableCraBankIncomeWarning) Get() *CraBankIncomeWarning {
	return v.value
}

func (v *NullableCraBankIncomeWarning) Set(val *CraBankIncomeWarning) {
	v.value = val
	v.isSet = true
}

func (v NullableCraBankIncomeWarning) IsSet() bool {
	return v.isSet
}

func (v *NullableCraBankIncomeWarning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraBankIncomeWarning(val *CraBankIncomeWarning) *NullableCraBankIncomeWarning {
	return &NullableCraBankIncomeWarning{value: val, isSet: true}
}

func (v NullableCraBankIncomeWarning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraBankIncomeWarning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


