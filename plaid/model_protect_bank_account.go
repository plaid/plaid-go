/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ProtectBankAccount Bank account information associated with the incident.
type ProtectBankAccount struct {
	// Plaid's unique identifier for the account.
	AccountId NullableString `json:"account_id,omitempty"`
	// Full account number of the bank account.
	AccountNumber NullableString `json:"account_number,omitempty"`
	// Routing number of the bank account. Must be present if `account_number` is present.
	RoutingNumber NullableString `json:"routing_number,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProtectBankAccount ProtectBankAccount

// NewProtectBankAccount instantiates a new ProtectBankAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectBankAccount() *ProtectBankAccount {
	this := ProtectBankAccount{}
	return &this
}

// NewProtectBankAccountWithDefaults instantiates a new ProtectBankAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectBankAccountWithDefaults() *ProtectBankAccount {
	this := ProtectBankAccount{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectBankAccount) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectBankAccount) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *ProtectBankAccount) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *ProtectBankAccount) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *ProtectBankAccount) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *ProtectBankAccount) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectBankAccount) GetAccountNumber() string {
	if o == nil || o.AccountNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber.Get()
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectBankAccount) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountNumber.Get(), o.AccountNumber.IsSet()
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *ProtectBankAccount) HasAccountNumber() bool {
	if o != nil && o.AccountNumber.IsSet() {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given NullableString and assigns it to the AccountNumber field.
func (o *ProtectBankAccount) SetAccountNumber(v string) {
	o.AccountNumber.Set(&v)
}
// SetAccountNumberNil sets the value for AccountNumber to be an explicit nil
func (o *ProtectBankAccount) SetAccountNumberNil() {
	o.AccountNumber.Set(nil)
}

// UnsetAccountNumber ensures that no value is present for AccountNumber, not even an explicit nil
func (o *ProtectBankAccount) UnsetAccountNumber() {
	o.AccountNumber.Unset()
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectBankAccount) GetRoutingNumber() string {
	if o == nil || o.RoutingNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.RoutingNumber.Get()
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectBankAccount) GetRoutingNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RoutingNumber.Get(), o.RoutingNumber.IsSet()
}

// HasRoutingNumber returns a boolean if a field has been set.
func (o *ProtectBankAccount) HasRoutingNumber() bool {
	if o != nil && o.RoutingNumber.IsSet() {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given NullableString and assigns it to the RoutingNumber field.
func (o *ProtectBankAccount) SetRoutingNumber(v string) {
	o.RoutingNumber.Set(&v)
}
// SetRoutingNumberNil sets the value for RoutingNumber to be an explicit nil
func (o *ProtectBankAccount) SetRoutingNumberNil() {
	o.RoutingNumber.Set(nil)
}

// UnsetRoutingNumber ensures that no value is present for RoutingNumber, not even an explicit nil
func (o *ProtectBankAccount) UnsetRoutingNumber() {
	o.RoutingNumber.Unset()
}

func (o ProtectBankAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if o.AccountNumber.IsSet() {
		toSerialize["account_number"] = o.AccountNumber.Get()
	}
	if o.RoutingNumber.IsSet() {
		toSerialize["routing_number"] = o.RoutingNumber.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProtectBankAccount) UnmarshalJSON(bytes []byte) (err error) {
	varProtectBankAccount := _ProtectBankAccount{}

	if err = json.Unmarshal(bytes, &varProtectBankAccount); err == nil {
		*o = ProtectBankAccount(varProtectBankAccount)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "account_number")
		delete(additionalProperties, "routing_number")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProtectBankAccount struct {
	value *ProtectBankAccount
	isSet bool
}

func (v NullableProtectBankAccount) Get() *ProtectBankAccount {
	return v.value
}

func (v *NullableProtectBankAccount) Set(val *ProtectBankAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectBankAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectBankAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectBankAccount(val *ProtectBankAccount) *NullableProtectBankAccount {
	return &NullableProtectBankAccount{value: val, isSet: true}
}

func (v NullableProtectBankAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectBankAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


