/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// RecommendationString The recommendation result for that date.
type RecommendationString string

var _ = fmt.Printf

// List of RecommendationString
const (
	RECOMMENDATIONSTRING_RECOMMENDED RecommendationString = "RECOMMENDED"
	RECOMMENDATIONSTRING_NOT_RECOMMENDED RecommendationString = "NOT_RECOMMENDED"
	RECOMMENDATIONSTRING_UNKNOWN RecommendationString = "UNKNOWN"
)

var allowedRecommendationStringEnumValues = []RecommendationString{
	"RECOMMENDED",
	"NOT_RECOMMENDED",
	"UNKNOWN",
}

func (v *RecommendationString) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := RecommendationString(value)


	*v = enumTypeValue
	return nil
}

// NewRecommendationStringFromValue returns a pointer to a valid RecommendationString
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRecommendationStringFromValue(v string) (*RecommendationString, error) {
	ev := RecommendationString(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RecommendationString) IsValid() bool {
	for _, existing := range allowedRecommendationStringEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RecommendationString value
func (v RecommendationString) Ptr() *RecommendationString {
	return &v
}

type NullableRecommendationString struct {
	value *RecommendationString
	isSet bool
}

func (v NullableRecommendationString) Get() *RecommendationString {
	return v.value
}

func (v *NullableRecommendationString) Set(val *RecommendationString) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendationString) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendationString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendationString(val *RecommendationString) *NullableRecommendationString {
	return &NullableRecommendationString{value: val, isSet: true}
}

func (v NullableRecommendationString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendationString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

