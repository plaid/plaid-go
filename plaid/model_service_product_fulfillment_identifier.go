/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.210.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// ServiceProductFulfillmentIdentifier No documentation available
type ServiceProductFulfillmentIdentifier string

var _ = fmt.Printf

// List of ServiceProductFulfillmentIdentifier
const (
	SERVICEPRODUCTFULFILLMENTIDENTIFIER_VOA ServiceProductFulfillmentIdentifier = "VOA"
)

var allowedServiceProductFulfillmentIdentifierEnumValues = []ServiceProductFulfillmentIdentifier{
	"VOA",
}

func (v *ServiceProductFulfillmentIdentifier) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := ServiceProductFulfillmentIdentifier(value)


	*v = enumTypeValue
	return nil
}

// NewServiceProductFulfillmentIdentifierFromValue returns a pointer to a valid ServiceProductFulfillmentIdentifier
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceProductFulfillmentIdentifierFromValue(v string) (*ServiceProductFulfillmentIdentifier, error) {
	ev := ServiceProductFulfillmentIdentifier(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceProductFulfillmentIdentifier) IsValid() bool {
	for _, existing := range allowedServiceProductFulfillmentIdentifierEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceProductFulfillmentIdentifier value
func (v ServiceProductFulfillmentIdentifier) Ptr() *ServiceProductFulfillmentIdentifier {
	return &v
}

type NullableServiceProductFulfillmentIdentifier struct {
	value *ServiceProductFulfillmentIdentifier
	isSet bool
}

func (v NullableServiceProductFulfillmentIdentifier) Get() *ServiceProductFulfillmentIdentifier {
	return v.value
}

func (v *NullableServiceProductFulfillmentIdentifier) Set(val *ServiceProductFulfillmentIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProductFulfillmentIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProductFulfillmentIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProductFulfillmentIdentifier(val *ServiceProductFulfillmentIdentifier) *NullableServiceProductFulfillmentIdentifier {
	return &NullableServiceProductFulfillmentIdentifier{value: val, isSet: true}
}

func (v NullableServiceProductFulfillmentIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProductFulfillmentIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

