/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraLoanRegister Contains loan data to register.
type CraLoanRegister struct {
	// The user token for the user associated with the loan.
	UserToken string `json:"user_token"`
	// A unique identifier for the loan.  Personally identifiable information, such as an email address or phone number, should not be used in the `loan_id`.
	LoanId string `json:"loan_id"`
	Type CraLoanType `json:"type"`
	PaymentSchedule CraLoanPaymentSchedule `json:"payment_schedule"`
	// The date the loan account was opened. The date should be in ISO 8601 format (YYYY-MM-DD).
	OpenedDate string `json:"opened_date"`
	OpenedWithStatus CraLoanOpenedStatus `json:"opened_with_status"`
	// The total amount of the approved loan.
	LoanAmount *float32 `json:"loan_amount,omitempty"`
	Application *CraLoanRegisterApplication `json:"application,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CraLoanRegister CraLoanRegister

// NewCraLoanRegister instantiates a new CraLoanRegister object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraLoanRegister(userToken string, loanId string, type_ CraLoanType, paymentSchedule CraLoanPaymentSchedule, openedDate string, openedWithStatus CraLoanOpenedStatus) *CraLoanRegister {
	this := CraLoanRegister{}
	this.UserToken = userToken
	this.LoanId = loanId
	this.Type = type_
	this.PaymentSchedule = paymentSchedule
	this.OpenedDate = openedDate
	this.OpenedWithStatus = openedWithStatus
	return &this
}

// NewCraLoanRegisterWithDefaults instantiates a new CraLoanRegister object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraLoanRegisterWithDefaults() *CraLoanRegister {
	this := CraLoanRegister{}
	return &this
}

// GetUserToken returns the UserToken field value
func (o *CraLoanRegister) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetUserTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *CraLoanRegister) SetUserToken(v string) {
	o.UserToken = v
}

// GetLoanId returns the LoanId field value
func (o *CraLoanRegister) GetLoanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoanId
}

// GetLoanIdOk returns a tuple with the LoanId field value
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetLoanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LoanId, true
}

// SetLoanId sets field value
func (o *CraLoanRegister) SetLoanId(v string) {
	o.LoanId = v
}

// GetType returns the Type field value
func (o *CraLoanRegister) GetType() CraLoanType {
	if o == nil {
		var ret CraLoanType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetTypeOk() (*CraLoanType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CraLoanRegister) SetType(v CraLoanType) {
	o.Type = v
}

// GetPaymentSchedule returns the PaymentSchedule field value
func (o *CraLoanRegister) GetPaymentSchedule() CraLoanPaymentSchedule {
	if o == nil {
		var ret CraLoanPaymentSchedule
		return ret
	}

	return o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetPaymentScheduleOk() (*CraLoanPaymentSchedule, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PaymentSchedule, true
}

// SetPaymentSchedule sets field value
func (o *CraLoanRegister) SetPaymentSchedule(v CraLoanPaymentSchedule) {
	o.PaymentSchedule = v
}

// GetOpenedDate returns the OpenedDate field value
func (o *CraLoanRegister) GetOpenedDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OpenedDate
}

// GetOpenedDateOk returns a tuple with the OpenedDate field value
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetOpenedDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OpenedDate, true
}

// SetOpenedDate sets field value
func (o *CraLoanRegister) SetOpenedDate(v string) {
	o.OpenedDate = v
}

// GetOpenedWithStatus returns the OpenedWithStatus field value
func (o *CraLoanRegister) GetOpenedWithStatus() CraLoanOpenedStatus {
	if o == nil {
		var ret CraLoanOpenedStatus
		return ret
	}

	return o.OpenedWithStatus
}

// GetOpenedWithStatusOk returns a tuple with the OpenedWithStatus field value
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetOpenedWithStatusOk() (*CraLoanOpenedStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OpenedWithStatus, true
}

// SetOpenedWithStatus sets field value
func (o *CraLoanRegister) SetOpenedWithStatus(v CraLoanOpenedStatus) {
	o.OpenedWithStatus = v
}

// GetLoanAmount returns the LoanAmount field value if set, zero value otherwise.
func (o *CraLoanRegister) GetLoanAmount() float32 {
	if o == nil || o.LoanAmount == nil {
		var ret float32
		return ret
	}
	return *o.LoanAmount
}

// GetLoanAmountOk returns a tuple with the LoanAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetLoanAmountOk() (*float32, bool) {
	if o == nil || o.LoanAmount == nil {
		return nil, false
	}
	return o.LoanAmount, true
}

// HasLoanAmount returns a boolean if a field has been set.
func (o *CraLoanRegister) HasLoanAmount() bool {
	if o != nil && o.LoanAmount != nil {
		return true
	}

	return false
}

// SetLoanAmount gets a reference to the given float32 and assigns it to the LoanAmount field.
func (o *CraLoanRegister) SetLoanAmount(v float32) {
	o.LoanAmount = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *CraLoanRegister) GetApplication() CraLoanRegisterApplication {
	if o == nil || o.Application == nil {
		var ret CraLoanRegisterApplication
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraLoanRegister) GetApplicationOk() (*CraLoanRegisterApplication, bool) {
	if o == nil || o.Application == nil {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *CraLoanRegister) HasApplication() bool {
	if o != nil && o.Application != nil {
		return true
	}

	return false
}

// SetApplication gets a reference to the given CraLoanRegisterApplication and assigns it to the Application field.
func (o *CraLoanRegister) SetApplication(v CraLoanRegisterApplication) {
	o.Application = &v
}

func (o CraLoanRegister) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user_token"] = o.UserToken
	}
	if true {
		toSerialize["loan_id"] = o.LoanId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["payment_schedule"] = o.PaymentSchedule
	}
	if true {
		toSerialize["opened_date"] = o.OpenedDate
	}
	if true {
		toSerialize["opened_with_status"] = o.OpenedWithStatus
	}
	if o.LoanAmount != nil {
		toSerialize["loan_amount"] = o.LoanAmount
	}
	if o.Application != nil {
		toSerialize["application"] = o.Application
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraLoanRegister) UnmarshalJSON(bytes []byte) (err error) {
	varCraLoanRegister := _CraLoanRegister{}

	if err = json.Unmarshal(bytes, &varCraLoanRegister); err == nil {
		*o = CraLoanRegister(varCraLoanRegister)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "user_token")
		delete(additionalProperties, "loan_id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "payment_schedule")
		delete(additionalProperties, "opened_date")
		delete(additionalProperties, "opened_with_status")
		delete(additionalProperties, "loan_amount")
		delete(additionalProperties, "application")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraLoanRegister struct {
	value *CraLoanRegister
	isSet bool
}

func (v NullableCraLoanRegister) Get() *CraLoanRegister {
	return v.value
}

func (v *NullableCraLoanRegister) Set(val *CraLoanRegister) {
	v.value = val
	v.isSet = true
}

func (v NullableCraLoanRegister) IsSet() bool {
	return v.isSet
}

func (v *NullableCraLoanRegister) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraLoanRegister(val *CraLoanRegister) *NullableCraLoanRegister {
	return &NullableCraLoanRegister{value: val, isSet: true}
}

func (v NullableCraLoanRegister) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraLoanRegister) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


