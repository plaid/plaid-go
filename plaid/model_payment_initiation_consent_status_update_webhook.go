/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.645.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// PaymentInitiationConsentStatusUpdateWebhook Fired when the status of a payment consent has changed.
type PaymentInitiationConsentStatusUpdateWebhook struct {
	// `PAYMENT_INITIATION`
	WebhookType string `json:"webhook_type"`
	// `CONSENT_STATUS_UPDATE`
	WebhookCode string `json:"webhook_code"`
	// The `id` for the consent being updated
	ConsentId string `json:"consent_id"`
	OldStatus PaymentInitiationConsentStatus `json:"old_status"`
	NewStatus PaymentInitiationConsentStatus `json:"new_status"`
	// The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
	Timestamp time.Time `json:"timestamp"`
	Error NullablePlaidError `json:"error,omitempty"`
	Environment WebhookEnvironmentValues `json:"environment"`
	AdditionalProperties map[string]interface{}
}

type _PaymentInitiationConsentStatusUpdateWebhook PaymentInitiationConsentStatusUpdateWebhook

// NewPaymentInitiationConsentStatusUpdateWebhook instantiates a new PaymentInitiationConsentStatusUpdateWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentInitiationConsentStatusUpdateWebhook(webhookType string, webhookCode string, consentId string, oldStatus PaymentInitiationConsentStatus, newStatus PaymentInitiationConsentStatus, timestamp time.Time, environment WebhookEnvironmentValues) *PaymentInitiationConsentStatusUpdateWebhook {
	this := PaymentInitiationConsentStatusUpdateWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.ConsentId = consentId
	this.OldStatus = oldStatus
	this.NewStatus = newStatus
	this.Timestamp = timestamp
	this.Environment = environment
	return &this
}

// NewPaymentInitiationConsentStatusUpdateWebhookWithDefaults instantiates a new PaymentInitiationConsentStatusUpdateWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentInitiationConsentStatusUpdateWebhookWithDefaults() *PaymentInitiationConsentStatusUpdateWebhook {
	this := PaymentInitiationConsentStatusUpdateWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetConsentId returns the ConsentId field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetConsentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConsentId
}

// GetConsentIdOk returns a tuple with the ConsentId field value
// and a boolean to check if the value has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetConsentIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConsentId, true
}

// SetConsentId sets field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetConsentId(v string) {
	o.ConsentId = v
}

// GetOldStatus returns the OldStatus field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetOldStatus() PaymentInitiationConsentStatus {
	if o == nil {
		var ret PaymentInitiationConsentStatus
		return ret
	}

	return o.OldStatus
}

// GetOldStatusOk returns a tuple with the OldStatus field value
// and a boolean to check if the value has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetOldStatusOk() (*PaymentInitiationConsentStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OldStatus, true
}

// SetOldStatus sets field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetOldStatus(v PaymentInitiationConsentStatus) {
	o.OldStatus = v
}

// GetNewStatus returns the NewStatus field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetNewStatus() PaymentInitiationConsentStatus {
	if o == nil {
		var ret PaymentInitiationConsentStatus
		return ret
	}

	return o.NewStatus
}

// GetNewStatusOk returns a tuple with the NewStatus field value
// and a boolean to check if the value has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetNewStatusOk() (*PaymentInitiationConsentStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NewStatus, true
}

// SetNewStatus sets field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetNewStatus(v PaymentInitiationConsentStatus) {
	o.NewStatus = v
}

// GetTimestamp returns the Timestamp field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetTimestampOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetError() PlaidError {
	if o == nil || o.Error.Get() == nil {
		var ret PlaidError
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetErrorOk() (*PlaidError, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullablePlaidError and assigns it to the Error field.
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetError(v PlaidError) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *PaymentInitiationConsentStatusUpdateWebhook) UnsetError() {
	o.Error.Unset()
}

// GetEnvironment returns the Environment field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetEnvironment() WebhookEnvironmentValues {
	if o == nil {
		var ret WebhookEnvironmentValues
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *PaymentInitiationConsentStatusUpdateWebhook) GetEnvironmentOk() (*WebhookEnvironmentValues, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *PaymentInitiationConsentStatusUpdateWebhook) SetEnvironment(v WebhookEnvironmentValues) {
	o.Environment = v
}

func (o PaymentInitiationConsentStatusUpdateWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if true {
		toSerialize["consent_id"] = o.ConsentId
	}
	if true {
		toSerialize["old_status"] = o.OldStatus
	}
	if true {
		toSerialize["new_status"] = o.NewStatus
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if true {
		toSerialize["environment"] = o.Environment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PaymentInitiationConsentStatusUpdateWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varPaymentInitiationConsentStatusUpdateWebhook := _PaymentInitiationConsentStatusUpdateWebhook{}

	if err = json.Unmarshal(bytes, &varPaymentInitiationConsentStatusUpdateWebhook); err == nil {
		*o = PaymentInitiationConsentStatusUpdateWebhook(varPaymentInitiationConsentStatusUpdateWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "consent_id")
		delete(additionalProperties, "old_status")
		delete(additionalProperties, "new_status")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "error")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentInitiationConsentStatusUpdateWebhook struct {
	value *PaymentInitiationConsentStatusUpdateWebhook
	isSet bool
}

func (v NullablePaymentInitiationConsentStatusUpdateWebhook) Get() *PaymentInitiationConsentStatusUpdateWebhook {
	return v.value
}

func (v *NullablePaymentInitiationConsentStatusUpdateWebhook) Set(val *PaymentInitiationConsentStatusUpdateWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentInitiationConsentStatusUpdateWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentInitiationConsentStatusUpdateWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentInitiationConsentStatusUpdateWebhook(val *PaymentInitiationConsentStatusUpdateWebhook) *NullablePaymentInitiationConsentStatusUpdateWebhook {
	return &NullablePaymentInitiationConsentStatusUpdateWebhook{value: val, isSet: true}
}

func (v NullablePaymentInitiationConsentStatusUpdateWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentInitiationConsentStatusUpdateWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


