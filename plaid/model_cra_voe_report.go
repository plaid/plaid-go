/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.641.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// CraVoeReport An object representing a VOE report.
type CraVoeReport struct {
	// The date and time when the VOE Report was created, in ISO 8601 format (e.g. \"2018-04-12T03:32:11Z\").
	GeneratedTime time.Time `json:"generated_time"`
	// The number of days of transaction history that the VOE Report covers.
	DaysRequested float32 `json:"days_requested"`
	// Data returned by Plaid about each of the Items included in the VOE Report.
	Items []CraVoeReportItem `json:"items"`
	AdditionalProperties map[string]interface{}
}

type _CraVoeReport CraVoeReport

// NewCraVoeReport instantiates a new CraVoeReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraVoeReport(generatedTime time.Time, daysRequested float32, items []CraVoeReportItem) *CraVoeReport {
	this := CraVoeReport{}
	this.GeneratedTime = generatedTime
	this.DaysRequested = daysRequested
	this.Items = items
	return &this
}

// NewCraVoeReportWithDefaults instantiates a new CraVoeReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraVoeReportWithDefaults() *CraVoeReport {
	this := CraVoeReport{}
	return &this
}

// GetGeneratedTime returns the GeneratedTime field value
func (o *CraVoeReport) GetGeneratedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.GeneratedTime
}

// GetGeneratedTimeOk returns a tuple with the GeneratedTime field value
// and a boolean to check if the value has been set.
func (o *CraVoeReport) GetGeneratedTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GeneratedTime, true
}

// SetGeneratedTime sets field value
func (o *CraVoeReport) SetGeneratedTime(v time.Time) {
	o.GeneratedTime = v
}

// GetDaysRequested returns the DaysRequested field value
func (o *CraVoeReport) GetDaysRequested() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DaysRequested
}

// GetDaysRequestedOk returns a tuple with the DaysRequested field value
// and a boolean to check if the value has been set.
func (o *CraVoeReport) GetDaysRequestedOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DaysRequested, true
}

// SetDaysRequested sets field value
func (o *CraVoeReport) SetDaysRequested(v float32) {
	o.DaysRequested = v
}

// GetItems returns the Items field value
func (o *CraVoeReport) GetItems() []CraVoeReportItem {
	if o == nil {
		var ret []CraVoeReportItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CraVoeReport) GetItemsOk() (*[]CraVoeReportItem, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *CraVoeReport) SetItems(v []CraVoeReportItem) {
	o.Items = v
}

func (o CraVoeReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["generated_time"] = o.GeneratedTime
	}
	if true {
		toSerialize["days_requested"] = o.DaysRequested
	}
	if true {
		toSerialize["items"] = o.Items
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraVoeReport) UnmarshalJSON(bytes []byte) (err error) {
	varCraVoeReport := _CraVoeReport{}

	if err = json.Unmarshal(bytes, &varCraVoeReport); err == nil {
		*o = CraVoeReport(varCraVoeReport)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "generated_time")
		delete(additionalProperties, "days_requested")
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraVoeReport struct {
	value *CraVoeReport
	isSet bool
}

func (v NullableCraVoeReport) Get() *CraVoeReport {
	return v.value
}

func (v *NullableCraVoeReport) Set(val *CraVoeReport) {
	v.value = val
	v.isSet = true
}

func (v NullableCraVoeReport) IsSet() bool {
	return v.isSet
}

func (v *NullableCraVoeReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraVoeReport(val *CraVoeReport) *NullableCraVoeReport {
	return &NullableCraVoeReport{value: val, isSet: true}
}

func (v NullableCraVoeReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraVoeReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


