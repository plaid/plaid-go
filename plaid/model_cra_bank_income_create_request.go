/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraBankIncomeCreateRequest CraBankIncomeCreateRequest defines the request schema for `/cra/bank_income/create`.
type CraBankIncomeCreateRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The user token associated with the User data is being requested for.
	UserToken *string `json:"user_token,omitempty"`
	// The destination URL to which webhooks will be sent 
	Webhook *string `json:"webhook,omitempty"`
	// The number of days of data to request for the Bank Income product
	DaysRequested *int32 `json:"days_requested,omitempty"`
	ConsumerReportPermissiblePurpose *ConsumerReportPermissiblePurpose `json:"consumer_report_permissible_purpose,omitempty"`
}

// NewCraBankIncomeCreateRequest instantiates a new CraBankIncomeCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraBankIncomeCreateRequest() *CraBankIncomeCreateRequest {
	this := CraBankIncomeCreateRequest{}
	return &this
}

// NewCraBankIncomeCreateRequestWithDefaults instantiates a new CraBankIncomeCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraBankIncomeCreateRequestWithDefaults() *CraBankIncomeCreateRequest {
	this := CraBankIncomeCreateRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CraBankIncomeCreateRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeCreateRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CraBankIncomeCreateRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CraBankIncomeCreateRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *CraBankIncomeCreateRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeCreateRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *CraBankIncomeCreateRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *CraBankIncomeCreateRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *CraBankIncomeCreateRequest) GetUserToken() string {
	if o == nil || o.UserToken == nil {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeCreateRequest) GetUserTokenOk() (*string, bool) {
	if o == nil || o.UserToken == nil {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *CraBankIncomeCreateRequest) HasUserToken() bool {
	if o != nil && o.UserToken != nil {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *CraBankIncomeCreateRequest) SetUserToken(v string) {
	o.UserToken = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *CraBankIncomeCreateRequest) GetWebhook() string {
	if o == nil || o.Webhook == nil {
		var ret string
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeCreateRequest) GetWebhookOk() (*string, bool) {
	if o == nil || o.Webhook == nil {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *CraBankIncomeCreateRequest) HasWebhook() bool {
	if o != nil && o.Webhook != nil {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given string and assigns it to the Webhook field.
func (o *CraBankIncomeCreateRequest) SetWebhook(v string) {
	o.Webhook = &v
}

// GetDaysRequested returns the DaysRequested field value if set, zero value otherwise.
func (o *CraBankIncomeCreateRequest) GetDaysRequested() int32 {
	if o == nil || o.DaysRequested == nil {
		var ret int32
		return ret
	}
	return *o.DaysRequested
}

// GetDaysRequestedOk returns a tuple with the DaysRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeCreateRequest) GetDaysRequestedOk() (*int32, bool) {
	if o == nil || o.DaysRequested == nil {
		return nil, false
	}
	return o.DaysRequested, true
}

// HasDaysRequested returns a boolean if a field has been set.
func (o *CraBankIncomeCreateRequest) HasDaysRequested() bool {
	if o != nil && o.DaysRequested != nil {
		return true
	}

	return false
}

// SetDaysRequested gets a reference to the given int32 and assigns it to the DaysRequested field.
func (o *CraBankIncomeCreateRequest) SetDaysRequested(v int32) {
	o.DaysRequested = &v
}

// GetConsumerReportPermissiblePurpose returns the ConsumerReportPermissiblePurpose field value if set, zero value otherwise.
func (o *CraBankIncomeCreateRequest) GetConsumerReportPermissiblePurpose() ConsumerReportPermissiblePurpose {
	if o == nil || o.ConsumerReportPermissiblePurpose == nil {
		var ret ConsumerReportPermissiblePurpose
		return ret
	}
	return *o.ConsumerReportPermissiblePurpose
}

// GetConsumerReportPermissiblePurposeOk returns a tuple with the ConsumerReportPermissiblePurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeCreateRequest) GetConsumerReportPermissiblePurposeOk() (*ConsumerReportPermissiblePurpose, bool) {
	if o == nil || o.ConsumerReportPermissiblePurpose == nil {
		return nil, false
	}
	return o.ConsumerReportPermissiblePurpose, true
}

// HasConsumerReportPermissiblePurpose returns a boolean if a field has been set.
func (o *CraBankIncomeCreateRequest) HasConsumerReportPermissiblePurpose() bool {
	if o != nil && o.ConsumerReportPermissiblePurpose != nil {
		return true
	}

	return false
}

// SetConsumerReportPermissiblePurpose gets a reference to the given ConsumerReportPermissiblePurpose and assigns it to the ConsumerReportPermissiblePurpose field.
func (o *CraBankIncomeCreateRequest) SetConsumerReportPermissiblePurpose(v ConsumerReportPermissiblePurpose) {
	o.ConsumerReportPermissiblePurpose = &v
}

func (o CraBankIncomeCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.UserToken != nil {
		toSerialize["user_token"] = o.UserToken
	}
	if o.Webhook != nil {
		toSerialize["webhook"] = o.Webhook
	}
	if o.DaysRequested != nil {
		toSerialize["days_requested"] = o.DaysRequested
	}
	if o.ConsumerReportPermissiblePurpose != nil {
		toSerialize["consumer_report_permissible_purpose"] = o.ConsumerReportPermissiblePurpose
	}
	return json.Marshal(toSerialize)
}

type NullableCraBankIncomeCreateRequest struct {
	value *CraBankIncomeCreateRequest
	isSet bool
}

func (v NullableCraBankIncomeCreateRequest) Get() *CraBankIncomeCreateRequest {
	return v.value
}

func (v *NullableCraBankIncomeCreateRequest) Set(val *CraBankIncomeCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCraBankIncomeCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCraBankIncomeCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraBankIncomeCreateRequest(val *CraBankIncomeCreateRequest) *NullableCraBankIncomeCreateRequest {
	return &NullableCraBankIncomeCreateRequest{value: val, isSet: true}
}

func (v NullableCraBankIncomeCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraBankIncomeCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


