/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// StatementsListResponse StatementsListResponse defines the response schema for `/statements/list`
type StatementsListResponse struct {
	Accounts []StatementsAccount `json:"accounts"`
	// The Plaid Institution ID associated with the Item.
	InstitutionId string `json:"institution_id"`
	// The name of the institution associated with the Item.
	InstitutionName string `json:"institution_name"`
	// The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
	ItemId string `json:"item_id"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _StatementsListResponse StatementsListResponse

// NewStatementsListResponse instantiates a new StatementsListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatementsListResponse(accounts []StatementsAccount, institutionId string, institutionName string, itemId string, requestId string) *StatementsListResponse {
	this := StatementsListResponse{}
	this.Accounts = accounts
	this.InstitutionId = institutionId
	this.InstitutionName = institutionName
	this.ItemId = itemId
	this.RequestId = requestId
	return &this
}

// NewStatementsListResponseWithDefaults instantiates a new StatementsListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatementsListResponseWithDefaults() *StatementsListResponse {
	this := StatementsListResponse{}
	return &this
}

// GetAccounts returns the Accounts field value
func (o *StatementsListResponse) GetAccounts() []StatementsAccount {
	if o == nil {
		var ret []StatementsAccount
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *StatementsListResponse) GetAccountsOk() (*[]StatementsAccount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Accounts, true
}

// SetAccounts sets field value
func (o *StatementsListResponse) SetAccounts(v []StatementsAccount) {
	o.Accounts = v
}

// GetInstitutionId returns the InstitutionId field value
func (o *StatementsListResponse) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *StatementsListResponse) GetInstitutionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *StatementsListResponse) SetInstitutionId(v string) {
	o.InstitutionId = v
}

// GetInstitutionName returns the InstitutionName field value
func (o *StatementsListResponse) GetInstitutionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionName
}

// GetInstitutionNameOk returns a tuple with the InstitutionName field value
// and a boolean to check if the value has been set.
func (o *StatementsListResponse) GetInstitutionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstitutionName, true
}

// SetInstitutionName sets field value
func (o *StatementsListResponse) SetInstitutionName(v string) {
	o.InstitutionName = v
}

// GetItemId returns the ItemId field value
func (o *StatementsListResponse) GetItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *StatementsListResponse) GetItemIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *StatementsListResponse) SetItemId(v string) {
	o.ItemId = v
}

// GetRequestId returns the RequestId field value
func (o *StatementsListResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *StatementsListResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *StatementsListResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o StatementsListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accounts"] = o.Accounts
	}
	if true {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if true {
		toSerialize["institution_name"] = o.InstitutionName
	}
	if true {
		toSerialize["item_id"] = o.ItemId
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *StatementsListResponse) UnmarshalJSON(bytes []byte) (err error) {
	varStatementsListResponse := _StatementsListResponse{}

	if err = json.Unmarshal(bytes, &varStatementsListResponse); err == nil {
		*o = StatementsListResponse(varStatementsListResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accounts")
		delete(additionalProperties, "institution_id")
		delete(additionalProperties, "institution_name")
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStatementsListResponse struct {
	value *StatementsListResponse
	isSet bool
}

func (v NullableStatementsListResponse) Get() *StatementsListResponse {
	return v.value
}

func (v *NullableStatementsListResponse) Set(val *StatementsListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStatementsListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStatementsListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatementsListResponse(val *StatementsListResponse) *NullableStatementsListResponse {
	return &NullableStatementsListResponse{value: val, isSet: true}
}

func (v NullableStatementsListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatementsListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


