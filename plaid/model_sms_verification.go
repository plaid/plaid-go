/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// SMSVerification Additional information for the individual SMS verification.
type SMSVerification struct {
	Status SMSVerificationStatus `json:"status"`
	// The attempt field begins with 1 and increments with each subsequent SMS verification.
	Attempt int32 `json:"attempt"`
	// A phone number in E.164 format.
	PhoneNumber NullableString `json:"phone_number"`
	// The number of delivery attempts made within the verification to send the SMS code to the user. Each delivery attempt represents the user taking action from the front end UI to request creation and delivery of a new SMS verification code, or to resend an existing SMS verification code. There is a limit of 3 delivery attempts per verification.
	DeliveryAttemptCount int32 `json:"delivery_attempt_count"`
	// The number of attempts made by the user within the verification to verify the SMS code by entering it into the front end UI. There is a limit of 3 solve attempts per verification.
	SolveAttemptCount int32 `json:"solve_attempt_count"`
	// An ISO8601 formatted timestamp.
	InitiallySentAt NullableTime `json:"initially_sent_at"`
	// An ISO8601 formatted timestamp.
	LastSentAt NullableTime `json:"last_sent_at"`
	// An ISO8601 formatted timestamp.
	RedactedAt NullableTime `json:"redacted_at"`
	AdditionalProperties map[string]interface{}
}

type _SMSVerification SMSVerification

// NewSMSVerification instantiates a new SMSVerification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSMSVerification(status SMSVerificationStatus, attempt int32, phoneNumber NullableString, deliveryAttemptCount int32, solveAttemptCount int32, initiallySentAt NullableTime, lastSentAt NullableTime, redactedAt NullableTime) *SMSVerification {
	this := SMSVerification{}
	this.Status = status
	this.Attempt = attempt
	this.PhoneNumber = phoneNumber
	this.DeliveryAttemptCount = deliveryAttemptCount
	this.SolveAttemptCount = solveAttemptCount
	this.InitiallySentAt = initiallySentAt
	this.LastSentAt = lastSentAt
	this.RedactedAt = redactedAt
	return &this
}

// NewSMSVerificationWithDefaults instantiates a new SMSVerification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSMSVerificationWithDefaults() *SMSVerification {
	this := SMSVerification{}
	return &this
}

// GetStatus returns the Status field value
func (o *SMSVerification) GetStatus() SMSVerificationStatus {
	if o == nil {
		var ret SMSVerificationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SMSVerification) GetStatusOk() (*SMSVerificationStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SMSVerification) SetStatus(v SMSVerificationStatus) {
	o.Status = v
}

// GetAttempt returns the Attempt field value
func (o *SMSVerification) GetAttempt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attempt
}

// GetAttemptOk returns a tuple with the Attempt field value
// and a boolean to check if the value has been set.
func (o *SMSVerification) GetAttemptOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Attempt, true
}

// SetAttempt sets field value
func (o *SMSVerification) SetAttempt(v int32) {
	o.Attempt = v
}

// GetPhoneNumber returns the PhoneNumber field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SMSVerification) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber.Get() == nil {
		var ret string
		return ret
	}

	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SMSVerification) GetPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// SetPhoneNumber sets field value
func (o *SMSVerification) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}

// GetDeliveryAttemptCount returns the DeliveryAttemptCount field value
func (o *SMSVerification) GetDeliveryAttemptCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DeliveryAttemptCount
}

// GetDeliveryAttemptCountOk returns a tuple with the DeliveryAttemptCount field value
// and a boolean to check if the value has been set.
func (o *SMSVerification) GetDeliveryAttemptCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeliveryAttemptCount, true
}

// SetDeliveryAttemptCount sets field value
func (o *SMSVerification) SetDeliveryAttemptCount(v int32) {
	o.DeliveryAttemptCount = v
}

// GetSolveAttemptCount returns the SolveAttemptCount field value
func (o *SMSVerification) GetSolveAttemptCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SolveAttemptCount
}

// GetSolveAttemptCountOk returns a tuple with the SolveAttemptCount field value
// and a boolean to check if the value has been set.
func (o *SMSVerification) GetSolveAttemptCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SolveAttemptCount, true
}

// SetSolveAttemptCount sets field value
func (o *SMSVerification) SetSolveAttemptCount(v int32) {
	o.SolveAttemptCount = v
}

// GetInitiallySentAt returns the InitiallySentAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *SMSVerification) GetInitiallySentAt() time.Time {
	if o == nil || o.InitiallySentAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.InitiallySentAt.Get()
}

// GetInitiallySentAtOk returns a tuple with the InitiallySentAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SMSVerification) GetInitiallySentAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InitiallySentAt.Get(), o.InitiallySentAt.IsSet()
}

// SetInitiallySentAt sets field value
func (o *SMSVerification) SetInitiallySentAt(v time.Time) {
	o.InitiallySentAt.Set(&v)
}

// GetLastSentAt returns the LastSentAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *SMSVerification) GetLastSentAt() time.Time {
	if o == nil || o.LastSentAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastSentAt.Get()
}

// GetLastSentAtOk returns a tuple with the LastSentAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SMSVerification) GetLastSentAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastSentAt.Get(), o.LastSentAt.IsSet()
}

// SetLastSentAt sets field value
func (o *SMSVerification) SetLastSentAt(v time.Time) {
	o.LastSentAt.Set(&v)
}

// GetRedactedAt returns the RedactedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *SMSVerification) GetRedactedAt() time.Time {
	if o == nil || o.RedactedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.RedactedAt.Get()
}

// GetRedactedAtOk returns a tuple with the RedactedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SMSVerification) GetRedactedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RedactedAt.Get(), o.RedactedAt.IsSet()
}

// SetRedactedAt sets field value
func (o *SMSVerification) SetRedactedAt(v time.Time) {
	o.RedactedAt.Set(&v)
}

func (o SMSVerification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["attempt"] = o.Attempt
	}
	if true {
		toSerialize["phone_number"] = o.PhoneNumber.Get()
	}
	if true {
		toSerialize["delivery_attempt_count"] = o.DeliveryAttemptCount
	}
	if true {
		toSerialize["solve_attempt_count"] = o.SolveAttemptCount
	}
	if true {
		toSerialize["initially_sent_at"] = o.InitiallySentAt.Get()
	}
	if true {
		toSerialize["last_sent_at"] = o.LastSentAt.Get()
	}
	if true {
		toSerialize["redacted_at"] = o.RedactedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SMSVerification) UnmarshalJSON(bytes []byte) (err error) {
	varSMSVerification := _SMSVerification{}

	if err = json.Unmarshal(bytes, &varSMSVerification); err == nil {
		*o = SMSVerification(varSMSVerification)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "attempt")
		delete(additionalProperties, "phone_number")
		delete(additionalProperties, "delivery_attempt_count")
		delete(additionalProperties, "solve_attempt_count")
		delete(additionalProperties, "initially_sent_at")
		delete(additionalProperties, "last_sent_at")
		delete(additionalProperties, "redacted_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSMSVerification struct {
	value *SMSVerification
	isSet bool
}

func (v NullableSMSVerification) Get() *SMSVerification {
	return v.value
}

func (v *NullableSMSVerification) Set(val *SMSVerification) {
	v.value = val
	v.isSet = true
}

func (v NullableSMSVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableSMSVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSMSVerification(val *SMSVerification) *NullableSMSVerification {
	return &NullableSMSVerification{value: val, isSet: true}
}

func (v NullableSMSVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSMSVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


