/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.457.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CategoryInsightDetails Insights object for categories.
type CategoryInsightDetails struct {
	// Category name.
	Name string `json:"name"`
	// The number of transactions associated with this category.
	TransactionCount int32 `json:"transaction_count"`
	// Sum of outflow amounts.
	TotalOutflows float64 `json:"total_outflows"`
	// Sum of inflow amounts.
	TotalInflows float64 `json:"total_inflows"`
	// The most common counterparties associated with this category sorted by outflow.
	TopCounterparties []Counterparty `json:"top_counterparties"`
	AdditionalProperties map[string]interface{}
}

type _CategoryInsightDetails CategoryInsightDetails

// NewCategoryInsightDetails instantiates a new CategoryInsightDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryInsightDetails(name string, transactionCount int32, totalOutflows float64, totalInflows float64, topCounterparties []Counterparty) *CategoryInsightDetails {
	this := CategoryInsightDetails{}
	this.Name = name
	this.TransactionCount = transactionCount
	this.TotalOutflows = totalOutflows
	this.TotalInflows = totalInflows
	this.TopCounterparties = topCounterparties
	return &this
}

// NewCategoryInsightDetailsWithDefaults instantiates a new CategoryInsightDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryInsightDetailsWithDefaults() *CategoryInsightDetails {
	this := CategoryInsightDetails{}
	return &this
}

// GetName returns the Name field value
func (o *CategoryInsightDetails) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CategoryInsightDetails) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CategoryInsightDetails) SetName(v string) {
	o.Name = v
}

// GetTransactionCount returns the TransactionCount field value
func (o *CategoryInsightDetails) GetTransactionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactionCount
}

// GetTransactionCountOk returns a tuple with the TransactionCount field value
// and a boolean to check if the value has been set.
func (o *CategoryInsightDetails) GetTransactionCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionCount, true
}

// SetTransactionCount sets field value
func (o *CategoryInsightDetails) SetTransactionCount(v int32) {
	o.TransactionCount = v
}

// GetTotalOutflows returns the TotalOutflows field value
func (o *CategoryInsightDetails) GetTotalOutflows() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalOutflows
}

// GetTotalOutflowsOk returns a tuple with the TotalOutflows field value
// and a boolean to check if the value has been set.
func (o *CategoryInsightDetails) GetTotalOutflowsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalOutflows, true
}

// SetTotalOutflows sets field value
func (o *CategoryInsightDetails) SetTotalOutflows(v float64) {
	o.TotalOutflows = v
}

// GetTotalInflows returns the TotalInflows field value
func (o *CategoryInsightDetails) GetTotalInflows() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalInflows
}

// GetTotalInflowsOk returns a tuple with the TotalInflows field value
// and a boolean to check if the value has been set.
func (o *CategoryInsightDetails) GetTotalInflowsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalInflows, true
}

// SetTotalInflows sets field value
func (o *CategoryInsightDetails) SetTotalInflows(v float64) {
	o.TotalInflows = v
}

// GetTopCounterparties returns the TopCounterparties field value
func (o *CategoryInsightDetails) GetTopCounterparties() []Counterparty {
	if o == nil {
		var ret []Counterparty
		return ret
	}

	return o.TopCounterparties
}

// GetTopCounterpartiesOk returns a tuple with the TopCounterparties field value
// and a boolean to check if the value has been set.
func (o *CategoryInsightDetails) GetTopCounterpartiesOk() (*[]Counterparty, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TopCounterparties, true
}

// SetTopCounterparties sets field value
func (o *CategoryInsightDetails) SetTopCounterparties(v []Counterparty) {
	o.TopCounterparties = v
}

func (o CategoryInsightDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["transaction_count"] = o.TransactionCount
	}
	if true {
		toSerialize["total_outflows"] = o.TotalOutflows
	}
	if true {
		toSerialize["total_inflows"] = o.TotalInflows
	}
	if true {
		toSerialize["top_counterparties"] = o.TopCounterparties
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CategoryInsightDetails) UnmarshalJSON(bytes []byte) (err error) {
	varCategoryInsightDetails := _CategoryInsightDetails{}

	if err = json.Unmarshal(bytes, &varCategoryInsightDetails); err == nil {
		*o = CategoryInsightDetails(varCategoryInsightDetails)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "transaction_count")
		delete(additionalProperties, "total_outflows")
		delete(additionalProperties, "total_inflows")
		delete(additionalProperties, "top_counterparties")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCategoryInsightDetails struct {
	value *CategoryInsightDetails
	isSet bool
}

func (v NullableCategoryInsightDetails) Get() *CategoryInsightDetails {
	return v.value
}

func (v *NullableCategoryInsightDetails) Set(val *CategoryInsightDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryInsightDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryInsightDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryInsightDetails(val *CategoryInsightDetails) *NullableCategoryInsightDetails {
	return &NullableCategoryInsightDetails{value: val, isSet: true}
}

func (v NullableCategoryInsightDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryInsightDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


