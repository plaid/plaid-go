/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.645.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// PlaidCheckScoreVersion The version of the Plaid Check Score
type PlaidCheckScoreVersion string

var _ = fmt.Printf

// List of PlaidCheckScoreVersion
const (
	PLAIDCHECKSCOREVERSION_V1_0 PlaidCheckScoreVersion = "v1.0"
	PLAIDCHECKSCOREVERSION_V2_0 PlaidCheckScoreVersion = "v2.0"
)

var allowedPlaidCheckScoreVersionEnumValues = []PlaidCheckScoreVersion{
	"v1.0",
	"v2.0",
}

func (v *PlaidCheckScoreVersion) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := PlaidCheckScoreVersion(value)


	*v = enumTypeValue
	return nil
}

// NewPlaidCheckScoreVersionFromValue returns a pointer to a valid PlaidCheckScoreVersion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPlaidCheckScoreVersionFromValue(v string) (*PlaidCheckScoreVersion, error) {
	ev := PlaidCheckScoreVersion(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PlaidCheckScoreVersion) IsValid() bool {
	for _, existing := range allowedPlaidCheckScoreVersionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PlaidCheckScoreVersion value
func (v PlaidCheckScoreVersion) Ptr() *PlaidCheckScoreVersion {
	return &v
}

type NullablePlaidCheckScoreVersion struct {
	value *PlaidCheckScoreVersion
	isSet bool
}

func (v NullablePlaidCheckScoreVersion) Get() *PlaidCheckScoreVersion {
	return v.value
}

func (v *NullablePlaidCheckScoreVersion) Set(val *PlaidCheckScoreVersion) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaidCheckScoreVersion) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaidCheckScoreVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaidCheckScoreVersion(val *PlaidCheckScoreVersion) *NullablePlaidCheckScoreVersion {
	return &NullablePlaidCheckScoreVersion{value: val, isSet: true}
}

func (v NullablePlaidCheckScoreVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaidCheckScoreVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

