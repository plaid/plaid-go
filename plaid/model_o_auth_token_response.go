/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.658.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// OAuthTokenResponse OAuth token grant success response
type OAuthTokenResponse struct {
	// Access token for OAuth
	AccessToken string `json:"access_token"`
	// Refresh token for OAuth
	RefreshToken string `json:"refresh_token"`
	// type of token the access token is. Currently it is always Bearer
	TokenType string `json:"token_type"`
	// time remaining in seconds before expiration
	ExpiresIn int32 `json:"expires_in"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _OAuthTokenResponse OAuthTokenResponse

// NewOAuthTokenResponse instantiates a new OAuthTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthTokenResponse(accessToken string, refreshToken string, tokenType string, expiresIn int32, requestId string) *OAuthTokenResponse {
	this := OAuthTokenResponse{}
	this.AccessToken = accessToken
	this.RefreshToken = refreshToken
	this.TokenType = tokenType
	this.ExpiresIn = expiresIn
	this.RequestId = requestId
	return &this
}

// NewOAuthTokenResponseWithDefaults instantiates a new OAuthTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthTokenResponseWithDefaults() *OAuthTokenResponse {
	this := OAuthTokenResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *OAuthTokenResponse) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *OAuthTokenResponse) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *OAuthTokenResponse) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenResponse) GetRefreshTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *OAuthTokenResponse) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetTokenType returns the TokenType field value
func (o *OAuthTokenResponse) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *OAuthTokenResponse) SetTokenType(v string) {
	o.TokenType = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *OAuthTokenResponse) GetExpiresIn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *OAuthTokenResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = v
}

// GetRequestId returns the RequestId field value
func (o *OAuthTokenResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *OAuthTokenResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o OAuthTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if true {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if true {
		toSerialize["token_type"] = o.TokenType
	}
	if true {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OAuthTokenResponse) UnmarshalJSON(bytes []byte) (err error) {
	varOAuthTokenResponse := _OAuthTokenResponse{}

	if err = json.Unmarshal(bytes, &varOAuthTokenResponse); err == nil {
		*o = OAuthTokenResponse(varOAuthTokenResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "access_token")
		delete(additionalProperties, "refresh_token")
		delete(additionalProperties, "token_type")
		delete(additionalProperties, "expires_in")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOAuthTokenResponse struct {
	value *OAuthTokenResponse
	isSet bool
}

func (v NullableOAuthTokenResponse) Get() *OAuthTokenResponse {
	return v.value
}

func (v *NullableOAuthTokenResponse) Set(val *OAuthTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthTokenResponse(val *OAuthTokenResponse) *NullableOAuthTokenResponse {
	return &NullableOAuthTokenResponse{value: val, isSet: true}
}

func (v NullableOAuthTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


