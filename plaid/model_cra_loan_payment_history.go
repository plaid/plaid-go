/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.534.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraLoanPaymentHistory Contains the payment information for a loan payment period.
type CraLoanPaymentHistory struct {
	// The index to identify the loan's payment period, starting from 1. For example:   1 means the period between the loan's opening date and the 1st payment due date.   2 means the period between the loan's 1st payment due date and 2nd payment due date.
	Period int32 `json:"period"`
	// The payment due date or end date of the payment period. The date should be in ISO 8601 format (YYYY-MM-DD).
	DueDate string `json:"due_date"`
	// The number of days the loan was delinquent at the end of the pay period. If specified, should be greater of equal to 0.
	DaysPastDue int32 `json:"days_past_due"`
	// The amount past due or the charge-off amount of the loan at the end of the payment period.
	AmountPastDue *float32 `json:"amount_past_due,omitempty"`
	// The balance remaining on the loan at the end of the payment period.
	BalanceRemaining *float32 `json:"balance_remaining,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CraLoanPaymentHistory CraLoanPaymentHistory

// NewCraLoanPaymentHistory instantiates a new CraLoanPaymentHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraLoanPaymentHistory(period int32, dueDate string, daysPastDue int32) *CraLoanPaymentHistory {
	this := CraLoanPaymentHistory{}
	this.Period = period
	this.DueDate = dueDate
	this.DaysPastDue = daysPastDue
	return &this
}

// NewCraLoanPaymentHistoryWithDefaults instantiates a new CraLoanPaymentHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraLoanPaymentHistoryWithDefaults() *CraLoanPaymentHistory {
	this := CraLoanPaymentHistory{}
	return &this
}

// GetPeriod returns the Period field value
func (o *CraLoanPaymentHistory) GetPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *CraLoanPaymentHistory) GetPeriodOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *CraLoanPaymentHistory) SetPeriod(v int32) {
	o.Period = v
}

// GetDueDate returns the DueDate field value
func (o *CraLoanPaymentHistory) GetDueDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value
// and a boolean to check if the value has been set.
func (o *CraLoanPaymentHistory) GetDueDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DueDate, true
}

// SetDueDate sets field value
func (o *CraLoanPaymentHistory) SetDueDate(v string) {
	o.DueDate = v
}

// GetDaysPastDue returns the DaysPastDue field value
func (o *CraLoanPaymentHistory) GetDaysPastDue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DaysPastDue
}

// GetDaysPastDueOk returns a tuple with the DaysPastDue field value
// and a boolean to check if the value has been set.
func (o *CraLoanPaymentHistory) GetDaysPastDueOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DaysPastDue, true
}

// SetDaysPastDue sets field value
func (o *CraLoanPaymentHistory) SetDaysPastDue(v int32) {
	o.DaysPastDue = v
}

// GetAmountPastDue returns the AmountPastDue field value if set, zero value otherwise.
func (o *CraLoanPaymentHistory) GetAmountPastDue() float32 {
	if o == nil || o.AmountPastDue == nil {
		var ret float32
		return ret
	}
	return *o.AmountPastDue
}

// GetAmountPastDueOk returns a tuple with the AmountPastDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraLoanPaymentHistory) GetAmountPastDueOk() (*float32, bool) {
	if o == nil || o.AmountPastDue == nil {
		return nil, false
	}
	return o.AmountPastDue, true
}

// HasAmountPastDue returns a boolean if a field has been set.
func (o *CraLoanPaymentHistory) HasAmountPastDue() bool {
	if o != nil && o.AmountPastDue != nil {
		return true
	}

	return false
}

// SetAmountPastDue gets a reference to the given float32 and assigns it to the AmountPastDue field.
func (o *CraLoanPaymentHistory) SetAmountPastDue(v float32) {
	o.AmountPastDue = &v
}

// GetBalanceRemaining returns the BalanceRemaining field value if set, zero value otherwise.
func (o *CraLoanPaymentHistory) GetBalanceRemaining() float32 {
	if o == nil || o.BalanceRemaining == nil {
		var ret float32
		return ret
	}
	return *o.BalanceRemaining
}

// GetBalanceRemainingOk returns a tuple with the BalanceRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraLoanPaymentHistory) GetBalanceRemainingOk() (*float32, bool) {
	if o == nil || o.BalanceRemaining == nil {
		return nil, false
	}
	return o.BalanceRemaining, true
}

// HasBalanceRemaining returns a boolean if a field has been set.
func (o *CraLoanPaymentHistory) HasBalanceRemaining() bool {
	if o != nil && o.BalanceRemaining != nil {
		return true
	}

	return false
}

// SetBalanceRemaining gets a reference to the given float32 and assigns it to the BalanceRemaining field.
func (o *CraLoanPaymentHistory) SetBalanceRemaining(v float32) {
	o.BalanceRemaining = &v
}

func (o CraLoanPaymentHistory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["period"] = o.Period
	}
	if true {
		toSerialize["due_date"] = o.DueDate
	}
	if true {
		toSerialize["days_past_due"] = o.DaysPastDue
	}
	if o.AmountPastDue != nil {
		toSerialize["amount_past_due"] = o.AmountPastDue
	}
	if o.BalanceRemaining != nil {
		toSerialize["balance_remaining"] = o.BalanceRemaining
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraLoanPaymentHistory) UnmarshalJSON(bytes []byte) (err error) {
	varCraLoanPaymentHistory := _CraLoanPaymentHistory{}

	if err = json.Unmarshal(bytes, &varCraLoanPaymentHistory); err == nil {
		*o = CraLoanPaymentHistory(varCraLoanPaymentHistory)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "period")
		delete(additionalProperties, "due_date")
		delete(additionalProperties, "days_past_due")
		delete(additionalProperties, "amount_past_due")
		delete(additionalProperties, "balance_remaining")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraLoanPaymentHistory struct {
	value *CraLoanPaymentHistory
	isSet bool
}

func (v NullableCraLoanPaymentHistory) Get() *CraLoanPaymentHistory {
	return v.value
}

func (v *NullableCraLoanPaymentHistory) Set(val *CraLoanPaymentHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableCraLoanPaymentHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableCraLoanPaymentHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraLoanPaymentHistory(val *CraLoanPaymentHistory) *NullableCraLoanPaymentHistory {
	return &NullableCraLoanPaymentHistory{value: val, isSet: true}
}

func (v NullableCraLoanPaymentHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraLoanPaymentHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


