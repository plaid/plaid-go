/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.474.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransactionsRecurringCreateResponse TransactionsRecurringCreateResponse defines the response schema for the `/transactions/recurring/streams/create` endpoint.
type TransactionsRecurringCreateResponse struct {
	// Streams created as a result of the operation.
	AddedStreams []TransactionStream `json:"added_streams"`
	// Other streams with transactions removed from them as a result of the operation (in no particular order).
	ModifiedStreams *[]TransactionStream `json:"modified_streams,omitempty"`
	// The ids of streams that are no longer qualified as recurring transaction streams (in no particular order).
	RemovedStreamIds *[]string `json:"removed_stream_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransactionsRecurringCreateResponse TransactionsRecurringCreateResponse

// NewTransactionsRecurringCreateResponse instantiates a new TransactionsRecurringCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionsRecurringCreateResponse(addedStreams []TransactionStream) *TransactionsRecurringCreateResponse {
	this := TransactionsRecurringCreateResponse{}
	this.AddedStreams = addedStreams
	return &this
}

// NewTransactionsRecurringCreateResponseWithDefaults instantiates a new TransactionsRecurringCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionsRecurringCreateResponseWithDefaults() *TransactionsRecurringCreateResponse {
	this := TransactionsRecurringCreateResponse{}
	return &this
}

// GetAddedStreams returns the AddedStreams field value
func (o *TransactionsRecurringCreateResponse) GetAddedStreams() []TransactionStream {
	if o == nil {
		var ret []TransactionStream
		return ret
	}

	return o.AddedStreams
}

// GetAddedStreamsOk returns a tuple with the AddedStreams field value
// and a boolean to check if the value has been set.
func (o *TransactionsRecurringCreateResponse) GetAddedStreamsOk() (*[]TransactionStream, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AddedStreams, true
}

// SetAddedStreams sets field value
func (o *TransactionsRecurringCreateResponse) SetAddedStreams(v []TransactionStream) {
	o.AddedStreams = v
}

// GetModifiedStreams returns the ModifiedStreams field value if set, zero value otherwise.
func (o *TransactionsRecurringCreateResponse) GetModifiedStreams() []TransactionStream {
	if o == nil || o.ModifiedStreams == nil {
		var ret []TransactionStream
		return ret
	}
	return *o.ModifiedStreams
}

// GetModifiedStreamsOk returns a tuple with the ModifiedStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsRecurringCreateResponse) GetModifiedStreamsOk() (*[]TransactionStream, bool) {
	if o == nil || o.ModifiedStreams == nil {
		return nil, false
	}
	return o.ModifiedStreams, true
}

// HasModifiedStreams returns a boolean if a field has been set.
func (o *TransactionsRecurringCreateResponse) HasModifiedStreams() bool {
	if o != nil && o.ModifiedStreams != nil {
		return true
	}

	return false
}

// SetModifiedStreams gets a reference to the given []TransactionStream and assigns it to the ModifiedStreams field.
func (o *TransactionsRecurringCreateResponse) SetModifiedStreams(v []TransactionStream) {
	o.ModifiedStreams = &v
}

// GetRemovedStreamIds returns the RemovedStreamIds field value if set, zero value otherwise.
func (o *TransactionsRecurringCreateResponse) GetRemovedStreamIds() []string {
	if o == nil || o.RemovedStreamIds == nil {
		var ret []string
		return ret
	}
	return *o.RemovedStreamIds
}

// GetRemovedStreamIdsOk returns a tuple with the RemovedStreamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsRecurringCreateResponse) GetRemovedStreamIdsOk() (*[]string, bool) {
	if o == nil || o.RemovedStreamIds == nil {
		return nil, false
	}
	return o.RemovedStreamIds, true
}

// HasRemovedStreamIds returns a boolean if a field has been set.
func (o *TransactionsRecurringCreateResponse) HasRemovedStreamIds() bool {
	if o != nil && o.RemovedStreamIds != nil {
		return true
	}

	return false
}

// SetRemovedStreamIds gets a reference to the given []string and assigns it to the RemovedStreamIds field.
func (o *TransactionsRecurringCreateResponse) SetRemovedStreamIds(v []string) {
	o.RemovedStreamIds = &v
}

func (o TransactionsRecurringCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["added_streams"] = o.AddedStreams
	}
	if o.ModifiedStreams != nil {
		toSerialize["modified_streams"] = o.ModifiedStreams
	}
	if o.RemovedStreamIds != nil {
		toSerialize["removed_stream_ids"] = o.RemovedStreamIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransactionsRecurringCreateResponse) UnmarshalJSON(bytes []byte) (err error) {
	varTransactionsRecurringCreateResponse := _TransactionsRecurringCreateResponse{}

	if err = json.Unmarshal(bytes, &varTransactionsRecurringCreateResponse); err == nil {
		*o = TransactionsRecurringCreateResponse(varTransactionsRecurringCreateResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "added_streams")
		delete(additionalProperties, "modified_streams")
		delete(additionalProperties, "removed_stream_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransactionsRecurringCreateResponse struct {
	value *TransactionsRecurringCreateResponse
	isSet bool
}

func (v NullableTransactionsRecurringCreateResponse) Get() *TransactionsRecurringCreateResponse {
	return v.value
}

func (v *NullableTransactionsRecurringCreateResponse) Set(val *TransactionsRecurringCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionsRecurringCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionsRecurringCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionsRecurringCreateResponse(val *TransactionsRecurringCreateResponse) *NullableTransactionsRecurringCreateResponse {
	return &NullableTransactionsRecurringCreateResponse{value: val, isSet: true}
}

func (v NullableTransactionsRecurringCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionsRecurringCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


