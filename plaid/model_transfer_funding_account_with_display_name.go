/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.633.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferFundingAccountWithDisplayName The originator's funding account, linked with Plaid Link or `/transfer/migrate_account`.
type TransferFundingAccountWithDisplayName struct {
	// The access token associated with the Item data is being requested for.
	AccessToken string `json:"access_token"`
	// The Plaid `account_id` for the newly created Item.
	AccountId string `json:"account_id"`
	// The name for the funding account that is displayed in the Plaid dashboard.
	DisplayName *string `json:"display_name,omitempty"`
}

// NewTransferFundingAccountWithDisplayName instantiates a new TransferFundingAccountWithDisplayName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferFundingAccountWithDisplayName(accessToken string, accountId string) *TransferFundingAccountWithDisplayName {
	this := TransferFundingAccountWithDisplayName{}
	this.AccessToken = accessToken
	this.AccountId = accountId
	return &this
}

// NewTransferFundingAccountWithDisplayNameWithDefaults instantiates a new TransferFundingAccountWithDisplayName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferFundingAccountWithDisplayNameWithDefaults() *TransferFundingAccountWithDisplayName {
	this := TransferFundingAccountWithDisplayName{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *TransferFundingAccountWithDisplayName) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *TransferFundingAccountWithDisplayName) GetAccessTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *TransferFundingAccountWithDisplayName) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetAccountId returns the AccountId field value
func (o *TransferFundingAccountWithDisplayName) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *TransferFundingAccountWithDisplayName) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *TransferFundingAccountWithDisplayName) SetAccountId(v string) {
	o.AccountId = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *TransferFundingAccountWithDisplayName) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferFundingAccountWithDisplayName) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TransferFundingAccountWithDisplayName) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *TransferFundingAccountWithDisplayName) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o TransferFundingAccountWithDisplayName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	return json.Marshal(toSerialize)
}

type NullableTransferFundingAccountWithDisplayName struct {
	value *TransferFundingAccountWithDisplayName
	isSet bool
}

func (v NullableTransferFundingAccountWithDisplayName) Get() *TransferFundingAccountWithDisplayName {
	return v.value
}

func (v *NullableTransferFundingAccountWithDisplayName) Set(val *TransferFundingAccountWithDisplayName) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferFundingAccountWithDisplayName) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferFundingAccountWithDisplayName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferFundingAccountWithDisplayName(val *TransferFundingAccountWithDisplayName) *NullableTransferFundingAccountWithDisplayName {
	return &NullableTransferFundingAccountWithDisplayName{value: val, isSet: true}
}

func (v NullableTransferFundingAccountWithDisplayName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferFundingAccountWithDisplayName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


