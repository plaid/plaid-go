/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraBankIncomeAccount The Item's bank accounts that have the selected data.
type CraBankIncomeAccount struct {
	// Plaidâ€™s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.  If an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.  Like all Plaid identifiers, the `account_id` is case sensitive.
	AccountId *string `json:"account_id,omitempty"`
	// The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
	Mask NullableString `json:"mask"`
	Metadata CraBankIncomeAccountMetadata `json:"metadata"`
	// The name of the bank account.
	Name string `json:"name"`
	// The official name of the bank account.
	OfficialName NullableString `json:"official_name"`
	Subtype DepositoryAccountSubtype `json:"subtype"`
	Type CreditBankIncomeAccountType `json:"type"`
	// Data returned by the financial institution about the account owner or owners. Identity information is optional, so field may return an empty array.
	Owners []Owner `json:"owners"`
}

// NewCraBankIncomeAccount instantiates a new CraBankIncomeAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraBankIncomeAccount(mask NullableString, metadata CraBankIncomeAccountMetadata, name string, officialName NullableString, subtype DepositoryAccountSubtype, type_ CreditBankIncomeAccountType, owners []Owner) *CraBankIncomeAccount {
	this := CraBankIncomeAccount{}
	this.Mask = mask
	this.Metadata = metadata
	this.Name = name
	this.OfficialName = officialName
	this.Subtype = subtype
	this.Type = type_
	this.Owners = owners
	return &this
}

// NewCraBankIncomeAccountWithDefaults instantiates a new CraBankIncomeAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraBankIncomeAccountWithDefaults() *CraBankIncomeAccount {
	this := CraBankIncomeAccount{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CraBankIncomeAccount) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CraBankIncomeAccount) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CraBankIncomeAccount) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CraBankIncomeAccount) SetAccountId(v string) {
	o.AccountId = &v
}

// GetMask returns the Mask field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CraBankIncomeAccount) GetMask() string {
	if o == nil || o.Mask.Get() == nil {
		var ret string
		return ret
	}

	return *o.Mask.Get()
}

// GetMaskOk returns a tuple with the Mask field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraBankIncomeAccount) GetMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mask.Get(), o.Mask.IsSet()
}

// SetMask sets field value
func (o *CraBankIncomeAccount) SetMask(v string) {
	o.Mask.Set(&v)
}

// GetMetadata returns the Metadata field value
func (o *CraBankIncomeAccount) GetMetadata() CraBankIncomeAccountMetadata {
	if o == nil {
		var ret CraBankIncomeAccountMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *CraBankIncomeAccount) GetMetadataOk() (*CraBankIncomeAccountMetadata, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *CraBankIncomeAccount) SetMetadata(v CraBankIncomeAccountMetadata) {
	o.Metadata = v
}

// GetName returns the Name field value
func (o *CraBankIncomeAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CraBankIncomeAccount) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CraBankIncomeAccount) SetName(v string) {
	o.Name = v
}

// GetOfficialName returns the OfficialName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CraBankIncomeAccount) GetOfficialName() string {
	if o == nil || o.OfficialName.Get() == nil {
		var ret string
		return ret
	}

	return *o.OfficialName.Get()
}

// GetOfficialNameOk returns a tuple with the OfficialName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraBankIncomeAccount) GetOfficialNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OfficialName.Get(), o.OfficialName.IsSet()
}

// SetOfficialName sets field value
func (o *CraBankIncomeAccount) SetOfficialName(v string) {
	o.OfficialName.Set(&v)
}

// GetSubtype returns the Subtype field value
func (o *CraBankIncomeAccount) GetSubtype() DepositoryAccountSubtype {
	if o == nil {
		var ret DepositoryAccountSubtype
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *CraBankIncomeAccount) GetSubtypeOk() (*DepositoryAccountSubtype, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *CraBankIncomeAccount) SetSubtype(v DepositoryAccountSubtype) {
	o.Subtype = v
}

// GetType returns the Type field value
func (o *CraBankIncomeAccount) GetType() CreditBankIncomeAccountType {
	if o == nil {
		var ret CreditBankIncomeAccountType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CraBankIncomeAccount) GetTypeOk() (*CreditBankIncomeAccountType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CraBankIncomeAccount) SetType(v CreditBankIncomeAccountType) {
	o.Type = v
}

// GetOwners returns the Owners field value
func (o *CraBankIncomeAccount) GetOwners() []Owner {
	if o == nil {
		var ret []Owner
		return ret
	}

	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value
// and a boolean to check if the value has been set.
func (o *CraBankIncomeAccount) GetOwnersOk() (*[]Owner, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owners, true
}

// SetOwners sets field value
func (o *CraBankIncomeAccount) SetOwners(v []Owner) {
	o.Owners = v
}

func (o CraBankIncomeAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["mask"] = o.Mask.Get()
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["official_name"] = o.OfficialName.Get()
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["owners"] = o.Owners
	}
	return json.Marshal(toSerialize)
}

type NullableCraBankIncomeAccount struct {
	value *CraBankIncomeAccount
	isSet bool
}

func (v NullableCraBankIncomeAccount) Get() *CraBankIncomeAccount {
	return v.value
}

func (v *NullableCraBankIncomeAccount) Set(val *CraBankIncomeAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableCraBankIncomeAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableCraBankIncomeAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraBankIncomeAccount(val *CraBankIncomeAccount) *NullableCraBankIncomeAccount {
	return &NullableCraBankIncomeAccount{value: val, isSet: true}
}

func (v NullableCraBankIncomeAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraBankIncomeAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


