/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// FraudCheckOutcome The outcome of the fraud check.
type FraudCheckOutcome string

var _ = fmt.Printf

// List of FraudCheckOutcome
const (
	FRAUDCHECKOUTCOME_SUCCESS FraudCheckOutcome = "success"
	FRAUDCHECKOUTCOME_FAILED FraudCheckOutcome = "failed"
)

var allowedFraudCheckOutcomeEnumValues = []FraudCheckOutcome{
	"success",
	"failed",
}

func (v *FraudCheckOutcome) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := FraudCheckOutcome(value)


	*v = enumTypeValue
	return nil
}

// NewFraudCheckOutcomeFromValue returns a pointer to a valid FraudCheckOutcome
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFraudCheckOutcomeFromValue(v string) (*FraudCheckOutcome, error) {
	ev := FraudCheckOutcome(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FraudCheckOutcome) IsValid() bool {
	for _, existing := range allowedFraudCheckOutcomeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FraudCheckOutcome value
func (v FraudCheckOutcome) Ptr() *FraudCheckOutcome {
	return &v
}

type NullableFraudCheckOutcome struct {
	value *FraudCheckOutcome
	isSet bool
}

func (v NullableFraudCheckOutcome) Get() *FraudCheckOutcome {
	return v.value
}

func (v *NullableFraudCheckOutcome) Set(val *FraudCheckOutcome) {
	v.value = val
	v.isSet = true
}

func (v NullableFraudCheckOutcome) IsSet() bool {
	return v.isSet
}

func (v *NullableFraudCheckOutcome) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFraudCheckOutcome(val *FraudCheckOutcome) *NullableFraudCheckOutcome {
	return &NullableFraudCheckOutcome{value: val, isSet: true}
}

func (v NullableFraudCheckOutcome) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFraudCheckOutcome) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

