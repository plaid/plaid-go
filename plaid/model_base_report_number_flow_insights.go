/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BaseReportNumberFlowInsights The number of credits or debits out of the account. This field will only added for depository accounts
type BaseReportNumberFlowInsights struct {
	// The start date of this time period. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
	StartDate *string `json:"start_date,omitempty"`
	// The end date of this time period. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
	EndDate *string `json:"end_date,omitempty"`
	// The number of credits or debits out of the account for this time period.
	Count *int32 `json:"count,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BaseReportNumberFlowInsights BaseReportNumberFlowInsights

// NewBaseReportNumberFlowInsights instantiates a new BaseReportNumberFlowInsights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseReportNumberFlowInsights() *BaseReportNumberFlowInsights {
	this := BaseReportNumberFlowInsights{}
	return &this
}

// NewBaseReportNumberFlowInsightsWithDefaults instantiates a new BaseReportNumberFlowInsights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseReportNumberFlowInsightsWithDefaults() *BaseReportNumberFlowInsights {
	this := BaseReportNumberFlowInsights{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *BaseReportNumberFlowInsights) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseReportNumberFlowInsights) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *BaseReportNumberFlowInsights) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *BaseReportNumberFlowInsights) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *BaseReportNumberFlowInsights) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseReportNumberFlowInsights) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *BaseReportNumberFlowInsights) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *BaseReportNumberFlowInsights) SetEndDate(v string) {
	o.EndDate = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *BaseReportNumberFlowInsights) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseReportNumberFlowInsights) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *BaseReportNumberFlowInsights) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *BaseReportNumberFlowInsights) SetCount(v int32) {
	o.Count = &v
}

func (o BaseReportNumberFlowInsights) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartDate != nil {
		toSerialize["start_date"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["end_date"] = o.EndDate
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BaseReportNumberFlowInsights) UnmarshalJSON(bytes []byte) (err error) {
	varBaseReportNumberFlowInsights := _BaseReportNumberFlowInsights{}

	if err = json.Unmarshal(bytes, &varBaseReportNumberFlowInsights); err == nil {
		*o = BaseReportNumberFlowInsights(varBaseReportNumberFlowInsights)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "start_date")
		delete(additionalProperties, "end_date")
		delete(additionalProperties, "count")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBaseReportNumberFlowInsights struct {
	value *BaseReportNumberFlowInsights
	isSet bool
}

func (v NullableBaseReportNumberFlowInsights) Get() *BaseReportNumberFlowInsights {
	return v.value
}

func (v *NullableBaseReportNumberFlowInsights) Set(val *BaseReportNumberFlowInsights) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseReportNumberFlowInsights) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseReportNumberFlowInsights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseReportNumberFlowInsights(val *BaseReportNumberFlowInsights) *NullableBaseReportNumberFlowInsights {
	return &NullableBaseReportNumberFlowInsights{value: val, isSet: true}
}

func (v NullableBaseReportNumberFlowInsights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseReportNumberFlowInsights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


