/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.525.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconReportSyndication A Beacon Report Syndication represents a Beacon Report created either by your organization or another Beacon customer that matches a specific Beacon User you've created.  The `analysis` field in the response indicates which fields matched between the originally reported Beacon User and the Beacon User that the report was syndicated to.  The `report` field in the response contains a subset of information from the original report.
type BeaconReportSyndication struct {
	// ID of the associated Beacon Report Syndication.
	Id string `json:"id"`
	Report BeaconReportSyndicationOriginalReport `json:"report"`
	Analysis BeaconReportSyndicationAnalysis `json:"analysis"`
	AdditionalProperties map[string]interface{}
}

type _BeaconReportSyndication BeaconReportSyndication

// NewBeaconReportSyndication instantiates a new BeaconReportSyndication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconReportSyndication(id string, report BeaconReportSyndicationOriginalReport, analysis BeaconReportSyndicationAnalysis) *BeaconReportSyndication {
	this := BeaconReportSyndication{}
	this.Id = id
	this.Report = report
	this.Analysis = analysis
	return &this
}

// NewBeaconReportSyndicationWithDefaults instantiates a new BeaconReportSyndication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconReportSyndicationWithDefaults() *BeaconReportSyndication {
	this := BeaconReportSyndication{}
	return &this
}

// GetId returns the Id field value
func (o *BeaconReportSyndication) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BeaconReportSyndication) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BeaconReportSyndication) SetId(v string) {
	o.Id = v
}

// GetReport returns the Report field value
func (o *BeaconReportSyndication) GetReport() BeaconReportSyndicationOriginalReport {
	if o == nil {
		var ret BeaconReportSyndicationOriginalReport
		return ret
	}

	return o.Report
}

// GetReportOk returns a tuple with the Report field value
// and a boolean to check if the value has been set.
func (o *BeaconReportSyndication) GetReportOk() (*BeaconReportSyndicationOriginalReport, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Report, true
}

// SetReport sets field value
func (o *BeaconReportSyndication) SetReport(v BeaconReportSyndicationOriginalReport) {
	o.Report = v
}

// GetAnalysis returns the Analysis field value
func (o *BeaconReportSyndication) GetAnalysis() BeaconReportSyndicationAnalysis {
	if o == nil {
		var ret BeaconReportSyndicationAnalysis
		return ret
	}

	return o.Analysis
}

// GetAnalysisOk returns a tuple with the Analysis field value
// and a boolean to check if the value has been set.
func (o *BeaconReportSyndication) GetAnalysisOk() (*BeaconReportSyndicationAnalysis, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Analysis, true
}

// SetAnalysis sets field value
func (o *BeaconReportSyndication) SetAnalysis(v BeaconReportSyndicationAnalysis) {
	o.Analysis = v
}

func (o BeaconReportSyndication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["report"] = o.Report
	}
	if true {
		toSerialize["analysis"] = o.Analysis
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconReportSyndication) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconReportSyndication := _BeaconReportSyndication{}

	if err = json.Unmarshal(bytes, &varBeaconReportSyndication); err == nil {
		*o = BeaconReportSyndication(varBeaconReportSyndication)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "report")
		delete(additionalProperties, "analysis")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconReportSyndication struct {
	value *BeaconReportSyndication
	isSet bool
}

func (v NullableBeaconReportSyndication) Get() *BeaconReportSyndication {
	return v.value
}

func (v *NullableBeaconReportSyndication) Set(val *BeaconReportSyndication) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconReportSyndication) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconReportSyndication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconReportSyndication(val *BeaconReportSyndication) *NullableBeaconReportSyndication {
	return &NullableBeaconReportSyndication{value: val, isSet: true}
}

func (v NullableBeaconReportSyndication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconReportSyndication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


