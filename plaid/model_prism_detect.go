/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.645.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PrismDetect The data from the CashScore® Detect product returned by Prism Data.
type PrismDetect struct {
	// The version of Prism Data's CashScore® Detect model used.
	ModelVersion string `json:"model_version"`
	// The score returned by Prism Data. Ranges from 1-999, with higher score indicating lower risk.
	Score NullableInt32 `json:"score"`
	// The reasons for an individual having risk according to the CashScore® Detect score.
	ReasonCodes *[]string `json:"reason_codes,omitempty"`
	Metadata *PrismCashScoreMetadata `json:"metadata,omitempty"`
	// The error returned by Prism for this product.
	ErrorReason *string `json:"error_reason,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PrismDetect PrismDetect

// NewPrismDetect instantiates a new PrismDetect object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrismDetect(modelVersion string, score NullableInt32) *PrismDetect {
	this := PrismDetect{}
	this.ModelVersion = modelVersion
	this.Score = score
	return &this
}

// NewPrismDetectWithDefaults instantiates a new PrismDetect object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrismDetectWithDefaults() *PrismDetect {
	this := PrismDetect{}
	return &this
}

// GetModelVersion returns the ModelVersion field value
func (o *PrismDetect) GetModelVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelVersion
}

// GetModelVersionOk returns a tuple with the ModelVersion field value
// and a boolean to check if the value has been set.
func (o *PrismDetect) GetModelVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ModelVersion, true
}

// SetModelVersion sets field value
func (o *PrismDetect) SetModelVersion(v string) {
	o.ModelVersion = v
}

// GetScore returns the Score field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PrismDetect) GetScore() int32 {
	if o == nil || o.Score.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Score.Get()
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrismDetect) GetScoreOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Score.Get(), o.Score.IsSet()
}

// SetScore sets field value
func (o *PrismDetect) SetScore(v int32) {
	o.Score.Set(&v)
}

// GetReasonCodes returns the ReasonCodes field value if set, zero value otherwise.
func (o *PrismDetect) GetReasonCodes() []string {
	if o == nil || o.ReasonCodes == nil {
		var ret []string
		return ret
	}
	return *o.ReasonCodes
}

// GetReasonCodesOk returns a tuple with the ReasonCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrismDetect) GetReasonCodesOk() (*[]string, bool) {
	if o == nil || o.ReasonCodes == nil {
		return nil, false
	}
	return o.ReasonCodes, true
}

// HasReasonCodes returns a boolean if a field has been set.
func (o *PrismDetect) HasReasonCodes() bool {
	if o != nil && o.ReasonCodes != nil {
		return true
	}

	return false
}

// SetReasonCodes gets a reference to the given []string and assigns it to the ReasonCodes field.
func (o *PrismDetect) SetReasonCodes(v []string) {
	o.ReasonCodes = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PrismDetect) GetMetadata() PrismCashScoreMetadata {
	if o == nil || o.Metadata == nil {
		var ret PrismCashScoreMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrismDetect) GetMetadataOk() (*PrismCashScoreMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PrismDetect) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given PrismCashScoreMetadata and assigns it to the Metadata field.
func (o *PrismDetect) SetMetadata(v PrismCashScoreMetadata) {
	o.Metadata = &v
}

// GetErrorReason returns the ErrorReason field value if set, zero value otherwise.
func (o *PrismDetect) GetErrorReason() string {
	if o == nil || o.ErrorReason == nil {
		var ret string
		return ret
	}
	return *o.ErrorReason
}

// GetErrorReasonOk returns a tuple with the ErrorReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrismDetect) GetErrorReasonOk() (*string, bool) {
	if o == nil || o.ErrorReason == nil {
		return nil, false
	}
	return o.ErrorReason, true
}

// HasErrorReason returns a boolean if a field has been set.
func (o *PrismDetect) HasErrorReason() bool {
	if o != nil && o.ErrorReason != nil {
		return true
	}

	return false
}

// SetErrorReason gets a reference to the given string and assigns it to the ErrorReason field.
func (o *PrismDetect) SetErrorReason(v string) {
	o.ErrorReason = &v
}

func (o PrismDetect) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["model_version"] = o.ModelVersion
	}
	if true {
		toSerialize["score"] = o.Score.Get()
	}
	if o.ReasonCodes != nil {
		toSerialize["reason_codes"] = o.ReasonCodes
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.ErrorReason != nil {
		toSerialize["error_reason"] = o.ErrorReason
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PrismDetect) UnmarshalJSON(bytes []byte) (err error) {
	varPrismDetect := _PrismDetect{}

	if err = json.Unmarshal(bytes, &varPrismDetect); err == nil {
		*o = PrismDetect(varPrismDetect)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "model_version")
		delete(additionalProperties, "score")
		delete(additionalProperties, "reason_codes")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "error_reason")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePrismDetect struct {
	value *PrismDetect
	isSet bool
}

func (v NullablePrismDetect) Get() *PrismDetect {
	return v.value
}

func (v *NullablePrismDetect) Set(val *PrismDetect) {
	v.value = val
	v.isSet = true
}

func (v NullablePrismDetect) IsSet() bool {
	return v.isSet
}

func (v *NullablePrismDetect) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrismDetect(val *PrismDetect) *NullablePrismDetect {
	return &NullablePrismDetect{value: val, isSet: true}
}

func (v NullablePrismDetect) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrismDetect) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


