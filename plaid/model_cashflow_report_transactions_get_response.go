/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.664.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CashflowReportTransactionsGetResponse CashflowReportTransactionsGetResponse defines the response schema for `/cashflow_report/transactions/get`
type CashflowReportTransactionsGetResponse struct {
	// An array containing the `accounts` associated with the Item for which transactions are being returned. Each transaction can be mapped to its corresponding account via the `account_id` field.
	Accounts []BusinessAccount `json:"accounts"`
	// An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
	Transactions []CashflowReportTransaction `json:"transactions"`
	// The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
	TotalTransactions int32 `json:"total_transactions"`
	Item Item `json:"item"`
	// Cursor used for fetching any future updates after the latest update provided in this response.
	NextCursor string `json:"next_cursor"`
	// Represents if more than requested count of transactions exists to be fetched
	HasMore bool `json:"has_more"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _CashflowReportTransactionsGetResponse CashflowReportTransactionsGetResponse

// NewCashflowReportTransactionsGetResponse instantiates a new CashflowReportTransactionsGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashflowReportTransactionsGetResponse(accounts []BusinessAccount, transactions []CashflowReportTransaction, totalTransactions int32, item Item, nextCursor string, hasMore bool, requestId string) *CashflowReportTransactionsGetResponse {
	this := CashflowReportTransactionsGetResponse{}
	this.Accounts = accounts
	this.Transactions = transactions
	this.TotalTransactions = totalTransactions
	this.Item = item
	this.NextCursor = nextCursor
	this.HasMore = hasMore
	this.RequestId = requestId
	return &this
}

// NewCashflowReportTransactionsGetResponseWithDefaults instantiates a new CashflowReportTransactionsGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashflowReportTransactionsGetResponseWithDefaults() *CashflowReportTransactionsGetResponse {
	this := CashflowReportTransactionsGetResponse{}
	return &this
}

// GetAccounts returns the Accounts field value
func (o *CashflowReportTransactionsGetResponse) GetAccounts() []BusinessAccount {
	if o == nil {
		var ret []BusinessAccount
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *CashflowReportTransactionsGetResponse) GetAccountsOk() (*[]BusinessAccount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Accounts, true
}

// SetAccounts sets field value
func (o *CashflowReportTransactionsGetResponse) SetAccounts(v []BusinessAccount) {
	o.Accounts = v
}

// GetTransactions returns the Transactions field value
func (o *CashflowReportTransactionsGetResponse) GetTransactions() []CashflowReportTransaction {
	if o == nil {
		var ret []CashflowReportTransaction
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *CashflowReportTransactionsGetResponse) GetTransactionsOk() (*[]CashflowReportTransaction, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Transactions, true
}

// SetTransactions sets field value
func (o *CashflowReportTransactionsGetResponse) SetTransactions(v []CashflowReportTransaction) {
	o.Transactions = v
}

// GetTotalTransactions returns the TotalTransactions field value
func (o *CashflowReportTransactionsGetResponse) GetTotalTransactions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalTransactions
}

// GetTotalTransactionsOk returns a tuple with the TotalTransactions field value
// and a boolean to check if the value has been set.
func (o *CashflowReportTransactionsGetResponse) GetTotalTransactionsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalTransactions, true
}

// SetTotalTransactions sets field value
func (o *CashflowReportTransactionsGetResponse) SetTotalTransactions(v int32) {
	o.TotalTransactions = v
}

// GetItem returns the Item field value
func (o *CashflowReportTransactionsGetResponse) GetItem() Item {
	if o == nil {
		var ret Item
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *CashflowReportTransactionsGetResponse) GetItemOk() (*Item, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *CashflowReportTransactionsGetResponse) SetItem(v Item) {
	o.Item = v
}

// GetNextCursor returns the NextCursor field value
func (o *CashflowReportTransactionsGetResponse) GetNextCursor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value
// and a boolean to check if the value has been set.
func (o *CashflowReportTransactionsGetResponse) GetNextCursorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NextCursor, true
}

// SetNextCursor sets field value
func (o *CashflowReportTransactionsGetResponse) SetNextCursor(v string) {
	o.NextCursor = v
}

// GetHasMore returns the HasMore field value
func (o *CashflowReportTransactionsGetResponse) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *CashflowReportTransactionsGetResponse) GetHasMoreOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *CashflowReportTransactionsGetResponse) SetHasMore(v bool) {
	o.HasMore = v
}

// GetRequestId returns the RequestId field value
func (o *CashflowReportTransactionsGetResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *CashflowReportTransactionsGetResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *CashflowReportTransactionsGetResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o CashflowReportTransactionsGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accounts"] = o.Accounts
	}
	if true {
		toSerialize["transactions"] = o.Transactions
	}
	if true {
		toSerialize["total_transactions"] = o.TotalTransactions
	}
	if true {
		toSerialize["item"] = o.Item
	}
	if true {
		toSerialize["next_cursor"] = o.NextCursor
	}
	if true {
		toSerialize["has_more"] = o.HasMore
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CashflowReportTransactionsGetResponse) UnmarshalJSON(bytes []byte) (err error) {
	varCashflowReportTransactionsGetResponse := _CashflowReportTransactionsGetResponse{}

	if err = json.Unmarshal(bytes, &varCashflowReportTransactionsGetResponse); err == nil {
		*o = CashflowReportTransactionsGetResponse(varCashflowReportTransactionsGetResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accounts")
		delete(additionalProperties, "transactions")
		delete(additionalProperties, "total_transactions")
		delete(additionalProperties, "item")
		delete(additionalProperties, "next_cursor")
		delete(additionalProperties, "has_more")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCashflowReportTransactionsGetResponse struct {
	value *CashflowReportTransactionsGetResponse
	isSet bool
}

func (v NullableCashflowReportTransactionsGetResponse) Get() *CashflowReportTransactionsGetResponse {
	return v.value
}

func (v *NullableCashflowReportTransactionsGetResponse) Set(val *CashflowReportTransactionsGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCashflowReportTransactionsGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCashflowReportTransactionsGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashflowReportTransactionsGetResponse(val *CashflowReportTransactionsGetResponse) *NullableCashflowReportTransactionsGetResponse {
	return &NullableCashflowReportTransactionsGetResponse{value: val, isSet: true}
}

func (v NullableCashflowReportTransactionsGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashflowReportTransactionsGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


