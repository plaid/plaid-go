/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.620.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// FraudCheckOutcomeWithNoData The outcome of the fraud check, when available.
type FraudCheckOutcomeWithNoData string

var _ = fmt.Printf

// List of FraudCheckOutcomeWithNoData
const (
	FRAUDCHECKOUTCOMEWITHNODATA_SUCCESS FraudCheckOutcomeWithNoData = "success"
	FRAUDCHECKOUTCOMEWITHNODATA_FAILED FraudCheckOutcomeWithNoData = "failed"
	FRAUDCHECKOUTCOMEWITHNODATA_NO_DATA FraudCheckOutcomeWithNoData = "no_data"
)

var allowedFraudCheckOutcomeWithNoDataEnumValues = []FraudCheckOutcomeWithNoData{
	"success",
	"failed",
	"no_data",
}

func (v *FraudCheckOutcomeWithNoData) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := FraudCheckOutcomeWithNoData(value)


	*v = enumTypeValue
	return nil
}

// NewFraudCheckOutcomeWithNoDataFromValue returns a pointer to a valid FraudCheckOutcomeWithNoData
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFraudCheckOutcomeWithNoDataFromValue(v string) (*FraudCheckOutcomeWithNoData, error) {
	ev := FraudCheckOutcomeWithNoData(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FraudCheckOutcomeWithNoData) IsValid() bool {
	for _, existing := range allowedFraudCheckOutcomeWithNoDataEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FraudCheckOutcomeWithNoData value
func (v FraudCheckOutcomeWithNoData) Ptr() *FraudCheckOutcomeWithNoData {
	return &v
}

type NullableFraudCheckOutcomeWithNoData struct {
	value *FraudCheckOutcomeWithNoData
	isSet bool
}

func (v NullableFraudCheckOutcomeWithNoData) Get() *FraudCheckOutcomeWithNoData {
	return v.value
}

func (v *NullableFraudCheckOutcomeWithNoData) Set(val *FraudCheckOutcomeWithNoData) {
	v.value = val
	v.isSet = true
}

func (v NullableFraudCheckOutcomeWithNoData) IsSet() bool {
	return v.isSet
}

func (v *NullableFraudCheckOutcomeWithNoData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFraudCheckOutcomeWithNoData(val *FraudCheckOutcomeWithNoData) *NullableFraudCheckOutcomeWithNoData {
	return &NullableFraudCheckOutcomeWithNoData{value: val, isSet: true}
}

func (v NullableFraudCheckOutcomeWithNoData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFraudCheckOutcomeWithNoData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

