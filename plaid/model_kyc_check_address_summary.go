/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// KYCCheckAddressSummary Result summary object specifying how the `address` field matched.
type KYCCheckAddressSummary struct {
	Summary MatchSummaryCode `json:"summary"`
	PoBox POBoxStatus `json:"po_box"`
	Type AddressPurposeLabel `json:"type"`
	Street *HiddenMatchSummaryCode `json:"street,omitempty"`
	City *HiddenMatchSummaryCode `json:"city,omitempty"`
	Region *HiddenMatchSummaryCode `json:"region,omitempty"`
	PostalCode *HiddenMatchSummaryCode `json:"postal_code,omitempty"`
	InternationalDetails NullableKYCCheckDetailsInternationalAddress `json:"international_details,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KYCCheckAddressSummary KYCCheckAddressSummary

// NewKYCCheckAddressSummary instantiates a new KYCCheckAddressSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKYCCheckAddressSummary(summary MatchSummaryCode, poBox POBoxStatus, type_ AddressPurposeLabel) *KYCCheckAddressSummary {
	this := KYCCheckAddressSummary{}
	this.Summary = summary
	this.PoBox = poBox
	this.Type = type_
	return &this
}

// NewKYCCheckAddressSummaryWithDefaults instantiates a new KYCCheckAddressSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKYCCheckAddressSummaryWithDefaults() *KYCCheckAddressSummary {
	this := KYCCheckAddressSummary{}
	return &this
}

// GetSummary returns the Summary field value
func (o *KYCCheckAddressSummary) GetSummary() MatchSummaryCode {
	if o == nil {
		var ret MatchSummaryCode
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *KYCCheckAddressSummary) GetSummaryOk() (*MatchSummaryCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *KYCCheckAddressSummary) SetSummary(v MatchSummaryCode) {
	o.Summary = v
}

// GetPoBox returns the PoBox field value
func (o *KYCCheckAddressSummary) GetPoBox() POBoxStatus {
	if o == nil {
		var ret POBoxStatus
		return ret
	}

	return o.PoBox
}

// GetPoBoxOk returns a tuple with the PoBox field value
// and a boolean to check if the value has been set.
func (o *KYCCheckAddressSummary) GetPoBoxOk() (*POBoxStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PoBox, true
}

// SetPoBox sets field value
func (o *KYCCheckAddressSummary) SetPoBox(v POBoxStatus) {
	o.PoBox = v
}

// GetType returns the Type field value
func (o *KYCCheckAddressSummary) GetType() AddressPurposeLabel {
	if o == nil {
		var ret AddressPurposeLabel
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *KYCCheckAddressSummary) GetTypeOk() (*AddressPurposeLabel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *KYCCheckAddressSummary) SetType(v AddressPurposeLabel) {
	o.Type = v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *KYCCheckAddressSummary) GetStreet() HiddenMatchSummaryCode {
	if o == nil || o.Street == nil {
		var ret HiddenMatchSummaryCode
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCCheckAddressSummary) GetStreetOk() (*HiddenMatchSummaryCode, bool) {
	if o == nil || o.Street == nil {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *KYCCheckAddressSummary) HasStreet() bool {
	if o != nil && o.Street != nil {
		return true
	}

	return false
}

// SetStreet gets a reference to the given HiddenMatchSummaryCode and assigns it to the Street field.
func (o *KYCCheckAddressSummary) SetStreet(v HiddenMatchSummaryCode) {
	o.Street = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *KYCCheckAddressSummary) GetCity() HiddenMatchSummaryCode {
	if o == nil || o.City == nil {
		var ret HiddenMatchSummaryCode
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCCheckAddressSummary) GetCityOk() (*HiddenMatchSummaryCode, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *KYCCheckAddressSummary) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given HiddenMatchSummaryCode and assigns it to the City field.
func (o *KYCCheckAddressSummary) SetCity(v HiddenMatchSummaryCode) {
	o.City = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *KYCCheckAddressSummary) GetRegion() HiddenMatchSummaryCode {
	if o == nil || o.Region == nil {
		var ret HiddenMatchSummaryCode
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCCheckAddressSummary) GetRegionOk() (*HiddenMatchSummaryCode, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *KYCCheckAddressSummary) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given HiddenMatchSummaryCode and assigns it to the Region field.
func (o *KYCCheckAddressSummary) SetRegion(v HiddenMatchSummaryCode) {
	o.Region = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *KYCCheckAddressSummary) GetPostalCode() HiddenMatchSummaryCode {
	if o == nil || o.PostalCode == nil {
		var ret HiddenMatchSummaryCode
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCCheckAddressSummary) GetPostalCodeOk() (*HiddenMatchSummaryCode, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *KYCCheckAddressSummary) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given HiddenMatchSummaryCode and assigns it to the PostalCode field.
func (o *KYCCheckAddressSummary) SetPostalCode(v HiddenMatchSummaryCode) {
	o.PostalCode = &v
}

// GetInternationalDetails returns the InternationalDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KYCCheckAddressSummary) GetInternationalDetails() KYCCheckDetailsInternationalAddress {
	if o == nil || o.InternationalDetails.Get() == nil {
		var ret KYCCheckDetailsInternationalAddress
		return ret
	}
	return *o.InternationalDetails.Get()
}

// GetInternationalDetailsOk returns a tuple with the InternationalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KYCCheckAddressSummary) GetInternationalDetailsOk() (*KYCCheckDetailsInternationalAddress, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternationalDetails.Get(), o.InternationalDetails.IsSet()
}

// HasInternationalDetails returns a boolean if a field has been set.
func (o *KYCCheckAddressSummary) HasInternationalDetails() bool {
	if o != nil && o.InternationalDetails.IsSet() {
		return true
	}

	return false
}

// SetInternationalDetails gets a reference to the given NullableKYCCheckDetailsInternationalAddress and assigns it to the InternationalDetails field.
func (o *KYCCheckAddressSummary) SetInternationalDetails(v KYCCheckDetailsInternationalAddress) {
	o.InternationalDetails.Set(&v)
}
// SetInternationalDetailsNil sets the value for InternationalDetails to be an explicit nil
func (o *KYCCheckAddressSummary) SetInternationalDetailsNil() {
	o.InternationalDetails.Set(nil)
}

// UnsetInternationalDetails ensures that no value is present for InternationalDetails, not even an explicit nil
func (o *KYCCheckAddressSummary) UnsetInternationalDetails() {
	o.InternationalDetails.Unset()
}

func (o KYCCheckAddressSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["summary"] = o.Summary
	}
	if true {
		toSerialize["po_box"] = o.PoBox
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Street != nil {
		toSerialize["street"] = o.Street
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.InternationalDetails.IsSet() {
		toSerialize["international_details"] = o.InternationalDetails.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *KYCCheckAddressSummary) UnmarshalJSON(bytes []byte) (err error) {
	varKYCCheckAddressSummary := _KYCCheckAddressSummary{}

	if err = json.Unmarshal(bytes, &varKYCCheckAddressSummary); err == nil {
		*o = KYCCheckAddressSummary(varKYCCheckAddressSummary)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "summary")
		delete(additionalProperties, "po_box")
		delete(additionalProperties, "type")
		delete(additionalProperties, "street")
		delete(additionalProperties, "city")
		delete(additionalProperties, "region")
		delete(additionalProperties, "postal_code")
		delete(additionalProperties, "international_details")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKYCCheckAddressSummary struct {
	value *KYCCheckAddressSummary
	isSet bool
}

func (v NullableKYCCheckAddressSummary) Get() *KYCCheckAddressSummary {
	return v.value
}

func (v *NullableKYCCheckAddressSummary) Set(val *KYCCheckAddressSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableKYCCheckAddressSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableKYCCheckAddressSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKYCCheckAddressSummary(val *KYCCheckAddressSummary) *NullableKYCCheckAddressSummary {
	return &NullableKYCCheckAddressSummary{value: val, isSet: true}
}

func (v NullableKYCCheckAddressSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKYCCheckAddressSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


