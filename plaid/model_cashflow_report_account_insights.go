/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CashflowReportAccountInsights Insights on the account level. These are only returned for Credit and Depository type accounts.
type CashflowReportAccountInsights struct {
	// Calculated data about the historical balances on the account.
	HistoricalBalances []CashflowReportHistoricalBalance `json:"historical_balances"`
	// Monthly summary statistics derived from transaction-level data.
	MonthlySummaries []CashflowReportMonthlySummary `json:"monthly_summaries"`
	AdditionalProperties map[string]interface{}
}

type _CashflowReportAccountInsights CashflowReportAccountInsights

// NewCashflowReportAccountInsights instantiates a new CashflowReportAccountInsights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashflowReportAccountInsights(historicalBalances []CashflowReportHistoricalBalance, monthlySummaries []CashflowReportMonthlySummary) *CashflowReportAccountInsights {
	this := CashflowReportAccountInsights{}
	this.HistoricalBalances = historicalBalances
	this.MonthlySummaries = monthlySummaries
	return &this
}

// NewCashflowReportAccountInsightsWithDefaults instantiates a new CashflowReportAccountInsights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashflowReportAccountInsightsWithDefaults() *CashflowReportAccountInsights {
	this := CashflowReportAccountInsights{}
	return &this
}

// GetHistoricalBalances returns the HistoricalBalances field value
func (o *CashflowReportAccountInsights) GetHistoricalBalances() []CashflowReportHistoricalBalance {
	if o == nil {
		var ret []CashflowReportHistoricalBalance
		return ret
	}

	return o.HistoricalBalances
}

// GetHistoricalBalancesOk returns a tuple with the HistoricalBalances field value
// and a boolean to check if the value has been set.
func (o *CashflowReportAccountInsights) GetHistoricalBalancesOk() (*[]CashflowReportHistoricalBalance, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HistoricalBalances, true
}

// SetHistoricalBalances sets field value
func (o *CashflowReportAccountInsights) SetHistoricalBalances(v []CashflowReportHistoricalBalance) {
	o.HistoricalBalances = v
}

// GetMonthlySummaries returns the MonthlySummaries field value
func (o *CashflowReportAccountInsights) GetMonthlySummaries() []CashflowReportMonthlySummary {
	if o == nil {
		var ret []CashflowReportMonthlySummary
		return ret
	}

	return o.MonthlySummaries
}

// GetMonthlySummariesOk returns a tuple with the MonthlySummaries field value
// and a boolean to check if the value has been set.
func (o *CashflowReportAccountInsights) GetMonthlySummariesOk() (*[]CashflowReportMonthlySummary, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MonthlySummaries, true
}

// SetMonthlySummaries sets field value
func (o *CashflowReportAccountInsights) SetMonthlySummaries(v []CashflowReportMonthlySummary) {
	o.MonthlySummaries = v
}

func (o CashflowReportAccountInsights) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["historical_balances"] = o.HistoricalBalances
	}
	if true {
		toSerialize["monthly_summaries"] = o.MonthlySummaries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CashflowReportAccountInsights) UnmarshalJSON(bytes []byte) (err error) {
	varCashflowReportAccountInsights := _CashflowReportAccountInsights{}

	if err = json.Unmarshal(bytes, &varCashflowReportAccountInsights); err == nil {
		*o = CashflowReportAccountInsights(varCashflowReportAccountInsights)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "historical_balances")
		delete(additionalProperties, "monthly_summaries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCashflowReportAccountInsights struct {
	value *CashflowReportAccountInsights
	isSet bool
}

func (v NullableCashflowReportAccountInsights) Get() *CashflowReportAccountInsights {
	return v.value
}

func (v *NullableCashflowReportAccountInsights) Set(val *CashflowReportAccountInsights) {
	v.value = val
	v.isSet = true
}

func (v NullableCashflowReportAccountInsights) IsSet() bool {
	return v.isSet
}

func (v *NullableCashflowReportAccountInsights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashflowReportAccountInsights(val *CashflowReportAccountInsights) *NullableCashflowReportAccountInsights {
	return &NullableCashflowReportAccountInsights{value: val, isSet: true}
}

func (v NullableCashflowReportAccountInsights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashflowReportAccountInsights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


