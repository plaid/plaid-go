/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// BeaconUserDepositoryAccount Depository account information for the associated user.
type BeaconUserDepositoryAccount struct {
	// The last 2-4 numeric characters of this accountâ€™s account number.
	AccountMask string `json:"account_mask"`
	// The routing number of the account.
	RoutingNumber string `json:"routing_number"`
	// An ISO8601 formatted timestamp.
	AddedAt time.Time `json:"added_at"`
	AdditionalProperties map[string]interface{}
}

type _BeaconUserDepositoryAccount BeaconUserDepositoryAccount

// NewBeaconUserDepositoryAccount instantiates a new BeaconUserDepositoryAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconUserDepositoryAccount(accountMask string, routingNumber string, addedAt time.Time) *BeaconUserDepositoryAccount {
	this := BeaconUserDepositoryAccount{}
	this.AccountMask = accountMask
	this.RoutingNumber = routingNumber
	this.AddedAt = addedAt
	return &this
}

// NewBeaconUserDepositoryAccountWithDefaults instantiates a new BeaconUserDepositoryAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconUserDepositoryAccountWithDefaults() *BeaconUserDepositoryAccount {
	this := BeaconUserDepositoryAccount{}
	return &this
}

// GetAccountMask returns the AccountMask field value
func (o *BeaconUserDepositoryAccount) GetAccountMask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountMask
}

// GetAccountMaskOk returns a tuple with the AccountMask field value
// and a boolean to check if the value has been set.
func (o *BeaconUserDepositoryAccount) GetAccountMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountMask, true
}

// SetAccountMask sets field value
func (o *BeaconUserDepositoryAccount) SetAccountMask(v string) {
	o.AccountMask = v
}

// GetRoutingNumber returns the RoutingNumber field value
func (o *BeaconUserDepositoryAccount) GetRoutingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value
// and a boolean to check if the value has been set.
func (o *BeaconUserDepositoryAccount) GetRoutingNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoutingNumber, true
}

// SetRoutingNumber sets field value
func (o *BeaconUserDepositoryAccount) SetRoutingNumber(v string) {
	o.RoutingNumber = v
}

// GetAddedAt returns the AddedAt field value
func (o *BeaconUserDepositoryAccount) GetAddedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.AddedAt
}

// GetAddedAtOk returns a tuple with the AddedAt field value
// and a boolean to check if the value has been set.
func (o *BeaconUserDepositoryAccount) GetAddedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AddedAt, true
}

// SetAddedAt sets field value
func (o *BeaconUserDepositoryAccount) SetAddedAt(v time.Time) {
	o.AddedAt = v
}

func (o BeaconUserDepositoryAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_mask"] = o.AccountMask
	}
	if true {
		toSerialize["routing_number"] = o.RoutingNumber
	}
	if true {
		toSerialize["added_at"] = o.AddedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconUserDepositoryAccount) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconUserDepositoryAccount := _BeaconUserDepositoryAccount{}

	if err = json.Unmarshal(bytes, &varBeaconUserDepositoryAccount); err == nil {
		*o = BeaconUserDepositoryAccount(varBeaconUserDepositoryAccount)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_mask")
		delete(additionalProperties, "routing_number")
		delete(additionalProperties, "added_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconUserDepositoryAccount struct {
	value *BeaconUserDepositoryAccount
	isSet bool
}

func (v NullableBeaconUserDepositoryAccount) Get() *BeaconUserDepositoryAccount {
	return v.value
}

func (v *NullableBeaconUserDepositoryAccount) Set(val *BeaconUserDepositoryAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconUserDepositoryAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconUserDepositoryAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconUserDepositoryAccount(val *BeaconUserDepositoryAccount) *NullableBeaconUserDepositoryAccount {
	return &NullableBeaconUserDepositoryAccount{value: val, isSet: true}
}

func (v NullableBeaconUserDepositoryAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconUserDepositoryAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


