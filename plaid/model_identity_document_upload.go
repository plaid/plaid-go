/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.534.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// IdentityDocumentUpload Document object with metadata of the uploaded document
type IdentityDocumentUpload struct {
	DocumentId *string `json:"document_id,omitempty"`
	Metadata *IdentityDocumentUploadMetadata `json:"metadata,omitempty"`
	RiskInsights *IdentityDocumentUploadRiskInsights `json:"risk_insights,omitempty"`
}

// NewIdentityDocumentUpload instantiates a new IdentityDocumentUpload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityDocumentUpload() *IdentityDocumentUpload {
	this := IdentityDocumentUpload{}
	return &this
}

// NewIdentityDocumentUploadWithDefaults instantiates a new IdentityDocumentUpload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityDocumentUploadWithDefaults() *IdentityDocumentUpload {
	this := IdentityDocumentUpload{}
	return &this
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *IdentityDocumentUpload) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDocumentUpload) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *IdentityDocumentUpload) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *IdentityDocumentUpload) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityDocumentUpload) GetMetadata() IdentityDocumentUploadMetadata {
	if o == nil || o.Metadata == nil {
		var ret IdentityDocumentUploadMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDocumentUpload) GetMetadataOk() (*IdentityDocumentUploadMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityDocumentUpload) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given IdentityDocumentUploadMetadata and assigns it to the Metadata field.
func (o *IdentityDocumentUpload) SetMetadata(v IdentityDocumentUploadMetadata) {
	o.Metadata = &v
}

// GetRiskInsights returns the RiskInsights field value if set, zero value otherwise.
func (o *IdentityDocumentUpload) GetRiskInsights() IdentityDocumentUploadRiskInsights {
	if o == nil || o.RiskInsights == nil {
		var ret IdentityDocumentUploadRiskInsights
		return ret
	}
	return *o.RiskInsights
}

// GetRiskInsightsOk returns a tuple with the RiskInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDocumentUpload) GetRiskInsightsOk() (*IdentityDocumentUploadRiskInsights, bool) {
	if o == nil || o.RiskInsights == nil {
		return nil, false
	}
	return o.RiskInsights, true
}

// HasRiskInsights returns a boolean if a field has been set.
func (o *IdentityDocumentUpload) HasRiskInsights() bool {
	if o != nil && o.RiskInsights != nil {
		return true
	}

	return false
}

// SetRiskInsights gets a reference to the given IdentityDocumentUploadRiskInsights and assigns it to the RiskInsights field.
func (o *IdentityDocumentUpload) SetRiskInsights(v IdentityDocumentUploadRiskInsights) {
	o.RiskInsights = &v
}

func (o IdentityDocumentUpload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DocumentId != nil {
		toSerialize["document_id"] = o.DocumentId
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.RiskInsights != nil {
		toSerialize["risk_insights"] = o.RiskInsights
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityDocumentUpload struct {
	value *IdentityDocumentUpload
	isSet bool
}

func (v NullableIdentityDocumentUpload) Get() *IdentityDocumentUpload {
	return v.value
}

func (v *NullableIdentityDocumentUpload) Set(val *IdentityDocumentUpload) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityDocumentUpload) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityDocumentUpload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityDocumentUpload(val *IdentityDocumentUpload) *NullableIdentityDocumentUpload {
	return &NullableIdentityDocumentUpload{value: val, isSet: true}
}

func (v NullableIdentityDocumentUpload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityDocumentUpload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


