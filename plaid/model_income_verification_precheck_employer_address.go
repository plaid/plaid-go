/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.40.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// IncomeVerificationPrecheckEmployerAddress The address of the employer
type IncomeVerificationPrecheckEmployerAddress struct {
	// The full city name
	City string `json:"city"`
	// The region or state Example: `\"NC\"`
	Region NullableString `json:"region"`
	// The full street address Example: `\"564 Main Street, APT 15\"`
	Street string `json:"street"`
	// The postal code
	PostalCode NullableString `json:"postal_code"`
	// The ISO 3166-1 alpha-2 country code
	Country NullableString `json:"country"`
}

// NewIncomeVerificationPrecheckEmployerAddress instantiates a new IncomeVerificationPrecheckEmployerAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncomeVerificationPrecheckEmployerAddress(city string, region NullableString, street string, postalCode NullableString, country NullableString) *IncomeVerificationPrecheckEmployerAddress {
	this := IncomeVerificationPrecheckEmployerAddress{}
	this.City = city
	this.Region = region
	this.Street = street
	this.PostalCode = postalCode
	this.Country = country
	return &this
}

// NewIncomeVerificationPrecheckEmployerAddressWithDefaults instantiates a new IncomeVerificationPrecheckEmployerAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncomeVerificationPrecheckEmployerAddressWithDefaults() *IncomeVerificationPrecheckEmployerAddress {
	this := IncomeVerificationPrecheckEmployerAddress{}
	return &this
}

// GetCity returns the City field value
func (o *IncomeVerificationPrecheckEmployerAddress) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *IncomeVerificationPrecheckEmployerAddress) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *IncomeVerificationPrecheckEmployerAddress) SetCity(v string) {
	o.City = v
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IncomeVerificationPrecheckEmployerAddress) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncomeVerificationPrecheckEmployerAddress) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *IncomeVerificationPrecheckEmployerAddress) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetStreet returns the Street field value
func (o *IncomeVerificationPrecheckEmployerAddress) GetStreet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Street
}

// GetStreetOk returns a tuple with the Street field value
// and a boolean to check if the value has been set.
func (o *IncomeVerificationPrecheckEmployerAddress) GetStreetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Street, true
}

// SetStreet sets field value
func (o *IncomeVerificationPrecheckEmployerAddress) SetStreet(v string) {
	o.Street = v
}

// GetPostalCode returns the PostalCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IncomeVerificationPrecheckEmployerAddress) GetPostalCode() string {
	if o == nil || o.PostalCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncomeVerificationPrecheckEmployerAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// SetPostalCode sets field value
func (o *IncomeVerificationPrecheckEmployerAddress) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}

// GetCountry returns the Country field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IncomeVerificationPrecheckEmployerAddress) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}

	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncomeVerificationPrecheckEmployerAddress) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// SetCountry sets field value
func (o *IncomeVerificationPrecheckEmployerAddress) SetCountry(v string) {
	o.Country.Set(&v)
}

func (o IncomeVerificationPrecheckEmployerAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["city"] = o.City
	}
	if true {
		toSerialize["region"] = o.Region.Get()
	}
	if true {
		toSerialize["street"] = o.Street
	}
	if true {
		toSerialize["postal_code"] = o.PostalCode.Get()
	}
	if true {
		toSerialize["country"] = o.Country.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIncomeVerificationPrecheckEmployerAddress struct {
	value *IncomeVerificationPrecheckEmployerAddress
	isSet bool
}

func (v NullableIncomeVerificationPrecheckEmployerAddress) Get() *IncomeVerificationPrecheckEmployerAddress {
	return v.value
}

func (v *NullableIncomeVerificationPrecheckEmployerAddress) Set(val *IncomeVerificationPrecheckEmployerAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableIncomeVerificationPrecheckEmployerAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableIncomeVerificationPrecheckEmployerAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncomeVerificationPrecheckEmployerAddress(val *IncomeVerificationPrecheckEmployerAddress) *NullableIncomeVerificationPrecheckEmployerAddress {
	return &NullableIncomeVerificationPrecheckEmployerAddress{value: val, isSet: true}
}

func (v NullableIncomeVerificationPrecheckEmployerAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncomeVerificationPrecheckEmployerAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


