/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// ProtectIncidentEvent details about the incident event.
type ProtectIncidentEvent struct {
	// A globally unique identifier representing a Protect event that may be associated with this incident.
	ProtectEventId NullableString `json:"protect_event_id,omitempty"`
	// A unique identifier for a Link session that may be associated with this incident.
	LinkSessionId NullableString `json:"link_session_id,omitempty"`
	// A unique identifier for an Identity Verification session that may be associated with this incident.
	IdvSessionId NullableString `json:"idv_session_id,omitempty"`
	// The unique ID used to refer to a Signal transaction evaluation that may be associated with this incident.
	SignalClientTransactionId NullableString `json:"signal_client_transaction_id,omitempty"`
	// A unique ID representing the incident in your system. Personally identifiable information, such as an email address or phone number, should not be used in this field.
	InternalReference NullableString `json:"internal_reference,omitempty"`
	// The timestamp when the incident occurred, in ISO 8601 format (e.g., '2020-07-24T03:26:02Z').
	Time NullableTime `json:"time,omitempty"`
	Amount NullableProtectIncidentAmount `json:"amount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProtectIncidentEvent ProtectIncidentEvent

// NewProtectIncidentEvent instantiates a new ProtectIncidentEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectIncidentEvent() *ProtectIncidentEvent {
	this := ProtectIncidentEvent{}
	return &this
}

// NewProtectIncidentEventWithDefaults instantiates a new ProtectIncidentEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectIncidentEventWithDefaults() *ProtectIncidentEvent {
	this := ProtectIncidentEvent{}
	return &this
}

// GetProtectEventId returns the ProtectEventId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentEvent) GetProtectEventId() string {
	if o == nil || o.ProtectEventId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProtectEventId.Get()
}

// GetProtectEventIdOk returns a tuple with the ProtectEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentEvent) GetProtectEventIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProtectEventId.Get(), o.ProtectEventId.IsSet()
}

// HasProtectEventId returns a boolean if a field has been set.
func (o *ProtectIncidentEvent) HasProtectEventId() bool {
	if o != nil && o.ProtectEventId.IsSet() {
		return true
	}

	return false
}

// SetProtectEventId gets a reference to the given NullableString and assigns it to the ProtectEventId field.
func (o *ProtectIncidentEvent) SetProtectEventId(v string) {
	o.ProtectEventId.Set(&v)
}
// SetProtectEventIdNil sets the value for ProtectEventId to be an explicit nil
func (o *ProtectIncidentEvent) SetProtectEventIdNil() {
	o.ProtectEventId.Set(nil)
}

// UnsetProtectEventId ensures that no value is present for ProtectEventId, not even an explicit nil
func (o *ProtectIncidentEvent) UnsetProtectEventId() {
	o.ProtectEventId.Unset()
}

// GetLinkSessionId returns the LinkSessionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentEvent) GetLinkSessionId() string {
	if o == nil || o.LinkSessionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.LinkSessionId.Get()
}

// GetLinkSessionIdOk returns a tuple with the LinkSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentEvent) GetLinkSessionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LinkSessionId.Get(), o.LinkSessionId.IsSet()
}

// HasLinkSessionId returns a boolean if a field has been set.
func (o *ProtectIncidentEvent) HasLinkSessionId() bool {
	if o != nil && o.LinkSessionId.IsSet() {
		return true
	}

	return false
}

// SetLinkSessionId gets a reference to the given NullableString and assigns it to the LinkSessionId field.
func (o *ProtectIncidentEvent) SetLinkSessionId(v string) {
	o.LinkSessionId.Set(&v)
}
// SetLinkSessionIdNil sets the value for LinkSessionId to be an explicit nil
func (o *ProtectIncidentEvent) SetLinkSessionIdNil() {
	o.LinkSessionId.Set(nil)
}

// UnsetLinkSessionId ensures that no value is present for LinkSessionId, not even an explicit nil
func (o *ProtectIncidentEvent) UnsetLinkSessionId() {
	o.LinkSessionId.Unset()
}

// GetIdvSessionId returns the IdvSessionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentEvent) GetIdvSessionId() string {
	if o == nil || o.IdvSessionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.IdvSessionId.Get()
}

// GetIdvSessionIdOk returns a tuple with the IdvSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentEvent) GetIdvSessionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IdvSessionId.Get(), o.IdvSessionId.IsSet()
}

// HasIdvSessionId returns a boolean if a field has been set.
func (o *ProtectIncidentEvent) HasIdvSessionId() bool {
	if o != nil && o.IdvSessionId.IsSet() {
		return true
	}

	return false
}

// SetIdvSessionId gets a reference to the given NullableString and assigns it to the IdvSessionId field.
func (o *ProtectIncidentEvent) SetIdvSessionId(v string) {
	o.IdvSessionId.Set(&v)
}
// SetIdvSessionIdNil sets the value for IdvSessionId to be an explicit nil
func (o *ProtectIncidentEvent) SetIdvSessionIdNil() {
	o.IdvSessionId.Set(nil)
}

// UnsetIdvSessionId ensures that no value is present for IdvSessionId, not even an explicit nil
func (o *ProtectIncidentEvent) UnsetIdvSessionId() {
	o.IdvSessionId.Unset()
}

// GetSignalClientTransactionId returns the SignalClientTransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentEvent) GetSignalClientTransactionId() string {
	if o == nil || o.SignalClientTransactionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SignalClientTransactionId.Get()
}

// GetSignalClientTransactionIdOk returns a tuple with the SignalClientTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentEvent) GetSignalClientTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SignalClientTransactionId.Get(), o.SignalClientTransactionId.IsSet()
}

// HasSignalClientTransactionId returns a boolean if a field has been set.
func (o *ProtectIncidentEvent) HasSignalClientTransactionId() bool {
	if o != nil && o.SignalClientTransactionId.IsSet() {
		return true
	}

	return false
}

// SetSignalClientTransactionId gets a reference to the given NullableString and assigns it to the SignalClientTransactionId field.
func (o *ProtectIncidentEvent) SetSignalClientTransactionId(v string) {
	o.SignalClientTransactionId.Set(&v)
}
// SetSignalClientTransactionIdNil sets the value for SignalClientTransactionId to be an explicit nil
func (o *ProtectIncidentEvent) SetSignalClientTransactionIdNil() {
	o.SignalClientTransactionId.Set(nil)
}

// UnsetSignalClientTransactionId ensures that no value is present for SignalClientTransactionId, not even an explicit nil
func (o *ProtectIncidentEvent) UnsetSignalClientTransactionId() {
	o.SignalClientTransactionId.Unset()
}

// GetInternalReference returns the InternalReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentEvent) GetInternalReference() string {
	if o == nil || o.InternalReference.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalReference.Get()
}

// GetInternalReferenceOk returns a tuple with the InternalReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentEvent) GetInternalReferenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalReference.Get(), o.InternalReference.IsSet()
}

// HasInternalReference returns a boolean if a field has been set.
func (o *ProtectIncidentEvent) HasInternalReference() bool {
	if o != nil && o.InternalReference.IsSet() {
		return true
	}

	return false
}

// SetInternalReference gets a reference to the given NullableString and assigns it to the InternalReference field.
func (o *ProtectIncidentEvent) SetInternalReference(v string) {
	o.InternalReference.Set(&v)
}
// SetInternalReferenceNil sets the value for InternalReference to be an explicit nil
func (o *ProtectIncidentEvent) SetInternalReferenceNil() {
	o.InternalReference.Set(nil)
}

// UnsetInternalReference ensures that no value is present for InternalReference, not even an explicit nil
func (o *ProtectIncidentEvent) UnsetInternalReference() {
	o.InternalReference.Unset()
}

// GetTime returns the Time field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentEvent) GetTime() time.Time {
	if o == nil || o.Time.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Time.Get()
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentEvent) GetTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Time.Get(), o.Time.IsSet()
}

// HasTime returns a boolean if a field has been set.
func (o *ProtectIncidentEvent) HasTime() bool {
	if o != nil && o.Time.IsSet() {
		return true
	}

	return false
}

// SetTime gets a reference to the given NullableTime and assigns it to the Time field.
func (o *ProtectIncidentEvent) SetTime(v time.Time) {
	o.Time.Set(&v)
}
// SetTimeNil sets the value for Time to be an explicit nil
func (o *ProtectIncidentEvent) SetTimeNil() {
	o.Time.Set(nil)
}

// UnsetTime ensures that no value is present for Time, not even an explicit nil
func (o *ProtectIncidentEvent) UnsetTime() {
	o.Time.Unset()
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectIncidentEvent) GetAmount() ProtectIncidentAmount {
	if o == nil || o.Amount.Get() == nil {
		var ret ProtectIncidentAmount
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectIncidentEvent) GetAmountOk() (*ProtectIncidentAmount, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *ProtectIncidentEvent) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableProtectIncidentAmount and assigns it to the Amount field.
func (o *ProtectIncidentEvent) SetAmount(v ProtectIncidentAmount) {
	o.Amount.Set(&v)
}
// SetAmountNil sets the value for Amount to be an explicit nil
func (o *ProtectIncidentEvent) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *ProtectIncidentEvent) UnsetAmount() {
	o.Amount.Unset()
}

func (o ProtectIncidentEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProtectEventId.IsSet() {
		toSerialize["protect_event_id"] = o.ProtectEventId.Get()
	}
	if o.LinkSessionId.IsSet() {
		toSerialize["link_session_id"] = o.LinkSessionId.Get()
	}
	if o.IdvSessionId.IsSet() {
		toSerialize["idv_session_id"] = o.IdvSessionId.Get()
	}
	if o.SignalClientTransactionId.IsSet() {
		toSerialize["signal_client_transaction_id"] = o.SignalClientTransactionId.Get()
	}
	if o.InternalReference.IsSet() {
		toSerialize["internal_reference"] = o.InternalReference.Get()
	}
	if o.Time.IsSet() {
		toSerialize["time"] = o.Time.Get()
	}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProtectIncidentEvent) UnmarshalJSON(bytes []byte) (err error) {
	varProtectIncidentEvent := _ProtectIncidentEvent{}

	if err = json.Unmarshal(bytes, &varProtectIncidentEvent); err == nil {
		*o = ProtectIncidentEvent(varProtectIncidentEvent)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "protect_event_id")
		delete(additionalProperties, "link_session_id")
		delete(additionalProperties, "idv_session_id")
		delete(additionalProperties, "signal_client_transaction_id")
		delete(additionalProperties, "internal_reference")
		delete(additionalProperties, "time")
		delete(additionalProperties, "amount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProtectIncidentEvent struct {
	value *ProtectIncidentEvent
	isSet bool
}

func (v NullableProtectIncidentEvent) Get() *ProtectIncidentEvent {
	return v.value
}

func (v *NullableProtectIncidentEvent) Set(val *ProtectIncidentEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectIncidentEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectIncidentEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectIncidentEvent(val *ProtectIncidentEvent) *NullableProtectIncidentEvent {
	return &NullableProtectIncidentEvent{value: val, isSet: true}
}

func (v NullableProtectIncidentEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectIncidentEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


