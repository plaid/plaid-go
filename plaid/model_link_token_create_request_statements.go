/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// LinkTokenCreateRequestStatements Specifies options for initializing Link for use with the Statements product. This field is required for the statements product.
type LinkTokenCreateRequestStatements struct {
	// The start date for statements, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) “YYYY-MM-DD” format, e.g. \"2020-10-30\".
	StartDate string `json:"start_date"`
	// The end date for statements, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) “YYYY-MM-DD” format, e.g. \"2020-10-30\". You can request up to two years of data.
	EndDate string `json:"end_date"`
}

// NewLinkTokenCreateRequestStatements instantiates a new LinkTokenCreateRequestStatements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkTokenCreateRequestStatements(startDate string, endDate string) *LinkTokenCreateRequestStatements {
	this := LinkTokenCreateRequestStatements{}
	this.StartDate = startDate
	this.EndDate = endDate
	return &this
}

// NewLinkTokenCreateRequestStatementsWithDefaults instantiates a new LinkTokenCreateRequestStatements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkTokenCreateRequestStatementsWithDefaults() *LinkTokenCreateRequestStatements {
	this := LinkTokenCreateRequestStatements{}
	return &this
}

// GetStartDate returns the StartDate field value
func (o *LinkTokenCreateRequestStatements) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestStatements) GetStartDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *LinkTokenCreateRequestStatements) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *LinkTokenCreateRequestStatements) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestStatements) GetEndDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *LinkTokenCreateRequestStatements) SetEndDate(v string) {
	o.EndDate = v
}

func (o LinkTokenCreateRequestStatements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["start_date"] = o.StartDate
	}
	if true {
		toSerialize["end_date"] = o.EndDate
	}
	return json.Marshal(toSerialize)
}

type NullableLinkTokenCreateRequestStatements struct {
	value *LinkTokenCreateRequestStatements
	isSet bool
}

func (v NullableLinkTokenCreateRequestStatements) Get() *LinkTokenCreateRequestStatements {
	return v.value
}

func (v *NullableLinkTokenCreateRequestStatements) Set(val *LinkTokenCreateRequestStatements) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkTokenCreateRequestStatements) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkTokenCreateRequestStatements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkTokenCreateRequestStatements(val *LinkTokenCreateRequestStatements) *NullableLinkTokenCreateRequestStatements {
	return &NullableLinkTokenCreateRequestStatements{value: val, isSet: true}
}

func (v NullableLinkTokenCreateRequestStatements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkTokenCreateRequestStatements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


