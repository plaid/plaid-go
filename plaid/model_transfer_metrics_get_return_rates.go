/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.525.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransferMetricsGetReturnRates Details regarding return rates.
type TransferMetricsGetReturnRates struct {
	Last60d NullableTransferMetricsGetReturnRatesOverInterval `json:"last_60d,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransferMetricsGetReturnRates TransferMetricsGetReturnRates

// NewTransferMetricsGetReturnRates instantiates a new TransferMetricsGetReturnRates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferMetricsGetReturnRates() *TransferMetricsGetReturnRates {
	this := TransferMetricsGetReturnRates{}
	return &this
}

// NewTransferMetricsGetReturnRatesWithDefaults instantiates a new TransferMetricsGetReturnRates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferMetricsGetReturnRatesWithDefaults() *TransferMetricsGetReturnRates {
	this := TransferMetricsGetReturnRates{}
	return &this
}

// GetLast60d returns the Last60d field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferMetricsGetReturnRates) GetLast60d() TransferMetricsGetReturnRatesOverInterval {
	if o == nil || o.Last60d.Get() == nil {
		var ret TransferMetricsGetReturnRatesOverInterval
		return ret
	}
	return *o.Last60d.Get()
}

// GetLast60dOk returns a tuple with the Last60d field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferMetricsGetReturnRates) GetLast60dOk() (*TransferMetricsGetReturnRatesOverInterval, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Last60d.Get(), o.Last60d.IsSet()
}

// HasLast60d returns a boolean if a field has been set.
func (o *TransferMetricsGetReturnRates) HasLast60d() bool {
	if o != nil && o.Last60d.IsSet() {
		return true
	}

	return false
}

// SetLast60d gets a reference to the given NullableTransferMetricsGetReturnRatesOverInterval and assigns it to the Last60d field.
func (o *TransferMetricsGetReturnRates) SetLast60d(v TransferMetricsGetReturnRatesOverInterval) {
	o.Last60d.Set(&v)
}
// SetLast60dNil sets the value for Last60d to be an explicit nil
func (o *TransferMetricsGetReturnRates) SetLast60dNil() {
	o.Last60d.Set(nil)
}

// UnsetLast60d ensures that no value is present for Last60d, not even an explicit nil
func (o *TransferMetricsGetReturnRates) UnsetLast60d() {
	o.Last60d.Unset()
}

func (o TransferMetricsGetReturnRates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Last60d.IsSet() {
		toSerialize["last_60d"] = o.Last60d.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransferMetricsGetReturnRates) UnmarshalJSON(bytes []byte) (err error) {
	varTransferMetricsGetReturnRates := _TransferMetricsGetReturnRates{}

	if err = json.Unmarshal(bytes, &varTransferMetricsGetReturnRates); err == nil {
		*o = TransferMetricsGetReturnRates(varTransferMetricsGetReturnRates)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "last_60d")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransferMetricsGetReturnRates struct {
	value *TransferMetricsGetReturnRates
	isSet bool
}

func (v NullableTransferMetricsGetReturnRates) Get() *TransferMetricsGetReturnRates {
	return v.value
}

func (v *NullableTransferMetricsGetReturnRates) Set(val *TransferMetricsGetReturnRates) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferMetricsGetReturnRates) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferMetricsGetReturnRates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferMetricsGetReturnRates(val *TransferMetricsGetReturnRates) *NullableTransferMetricsGetReturnRates {
	return &NullableTransferMetricsGetReturnRates{value: val, isSet: true}
}

func (v NullableTransferMetricsGetReturnRates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferMetricsGetReturnRates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


