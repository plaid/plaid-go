/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// BankIncomeRefreshCompleteResult The result of the bank income refresh report generation  `SUCCESS`: The refreshed report was successfully generated and can be retrieved via `/credit/bank_income/get`.  `FAILURE`: The refreshed report failed to be generated
type BankIncomeRefreshCompleteResult string

var _ = fmt.Printf

// List of BankIncomeRefreshCompleteResult
const (
	BANKINCOMEREFRESHCOMPLETERESULT_SUCCESS BankIncomeRefreshCompleteResult = "SUCCESS"
	BANKINCOMEREFRESHCOMPLETERESULT_FAILURE BankIncomeRefreshCompleteResult = "FAILURE"
)

var allowedBankIncomeRefreshCompleteResultEnumValues = []BankIncomeRefreshCompleteResult{
	"SUCCESS",
	"FAILURE",
}

func (v *BankIncomeRefreshCompleteResult) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := BankIncomeRefreshCompleteResult(value)


	*v = enumTypeValue
	return nil
}

// NewBankIncomeRefreshCompleteResultFromValue returns a pointer to a valid BankIncomeRefreshCompleteResult
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBankIncomeRefreshCompleteResultFromValue(v string) (*BankIncomeRefreshCompleteResult, error) {
	ev := BankIncomeRefreshCompleteResult(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BankIncomeRefreshCompleteResult) IsValid() bool {
	for _, existing := range allowedBankIncomeRefreshCompleteResultEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BankIncomeRefreshCompleteResult value
func (v BankIncomeRefreshCompleteResult) Ptr() *BankIncomeRefreshCompleteResult {
	return &v
}

type NullableBankIncomeRefreshCompleteResult struct {
	value *BankIncomeRefreshCompleteResult
	isSet bool
}

func (v NullableBankIncomeRefreshCompleteResult) Get() *BankIncomeRefreshCompleteResult {
	return v.value
}

func (v *NullableBankIncomeRefreshCompleteResult) Set(val *BankIncomeRefreshCompleteResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBankIncomeRefreshCompleteResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBankIncomeRefreshCompleteResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankIncomeRefreshCompleteResult(val *BankIncomeRefreshCompleteResult) *NullableBankIncomeRefreshCompleteResult {
	return &NullableBankIncomeRefreshCompleteResult{value: val, isSet: true}
}

func (v NullableBankIncomeRefreshCompleteResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankIncomeRefreshCompleteResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

