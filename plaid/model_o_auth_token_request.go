/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.658.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// OAuthTokenRequest OAuth token grant request.
type OAuthTokenRequest struct {
	GrantType OAuthGrantType `json:"grant_type"`
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body as either `secret` or `client_secret`.
	ClientSecret *string `json:"client_secret,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body as either `secret` or `client_secret`.
	Secret *string `json:"secret,omitempty"`
	// A JSON string containing a space-separated list of scopes associated with this token, in the format described in [https://datatracker.ietf.org/doc/html/rfc6749#section-3.3](https://datatracker.ietf.org/doc/html/rfc6749#section-3.3). Currently accepted values are:  - `user:read` allows reading user data. - `user:write` allows writing user data. - `exchange` allows exchanging a token using the `urn:plaid:params:oauth:user-token` grant type. - `mcp:dashboard` allows access to the MCP dashboard server.
	Scope *string `json:"scope,omitempty"`
	// Refresh token for OAuth
	RefreshToken *string `json:"refresh_token,omitempty"`
	// URI of the target resource server
	Resource *string `json:"resource,omitempty"`
	// Used when exchanging a token. The meaning depends on the `subject_token_type`.
	Audience *string `json:"audience,omitempty"`
	// Token representing the subject. The `subject token` must be an OAuth refresh token issued from the `/oauth/token` endpoint. The meaning depends on the `subject_token_type`.
	SubjectToken *string `json:"subject_token,omitempty"`
	SubjectTokenType *OAuthSubjectTokenType `json:"subject_token_type,omitempty"`
}

// NewOAuthTokenRequest instantiates a new OAuthTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthTokenRequest(grantType OAuthGrantType) *OAuthTokenRequest {
	this := OAuthTokenRequest{}
	this.GrantType = grantType
	return &this
}

// NewOAuthTokenRequestWithDefaults instantiates a new OAuthTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthTokenRequestWithDefaults() *OAuthTokenRequest {
	this := OAuthTokenRequest{}
	return &this
}

// GetGrantType returns the GrantType field value
func (o *OAuthTokenRequest) GetGrantType() OAuthGrantType {
	if o == nil {
		var ret OAuthGrantType
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetGrantTypeOk() (*OAuthGrantType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *OAuthTokenRequest) SetGrantType(v OAuthGrantType) {
	o.GrantType = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *OAuthTokenRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *OAuthTokenRequest) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *OAuthTokenRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *OAuthTokenRequest) SetScope(v string) {
	o.Scope = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetRefreshToken() string {
	if o == nil || o.RefreshToken == nil {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetRefreshTokenOk() (*string, bool) {
	if o == nil || o.RefreshToken == nil {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasRefreshToken() bool {
	if o != nil && o.RefreshToken != nil {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *OAuthTokenRequest) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetResource() string {
	if o == nil || o.Resource == nil {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetResourceOk() (*string, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *OAuthTokenRequest) SetResource(v string) {
	o.Resource = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetAudience() string {
	if o == nil || o.Audience == nil {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetAudienceOk() (*string, bool) {
	if o == nil || o.Audience == nil {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasAudience() bool {
	if o != nil && o.Audience != nil {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *OAuthTokenRequest) SetAudience(v string) {
	o.Audience = &v
}

// GetSubjectToken returns the SubjectToken field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetSubjectToken() string {
	if o == nil || o.SubjectToken == nil {
		var ret string
		return ret
	}
	return *o.SubjectToken
}

// GetSubjectTokenOk returns a tuple with the SubjectToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetSubjectTokenOk() (*string, bool) {
	if o == nil || o.SubjectToken == nil {
		return nil, false
	}
	return o.SubjectToken, true
}

// HasSubjectToken returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasSubjectToken() bool {
	if o != nil && o.SubjectToken != nil {
		return true
	}

	return false
}

// SetSubjectToken gets a reference to the given string and assigns it to the SubjectToken field.
func (o *OAuthTokenRequest) SetSubjectToken(v string) {
	o.SubjectToken = &v
}

// GetSubjectTokenType returns the SubjectTokenType field value if set, zero value otherwise.
func (o *OAuthTokenRequest) GetSubjectTokenType() OAuthSubjectTokenType {
	if o == nil || o.SubjectTokenType == nil {
		var ret OAuthSubjectTokenType
		return ret
	}
	return *o.SubjectTokenType
}

// GetSubjectTokenTypeOk returns a tuple with the SubjectTokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthTokenRequest) GetSubjectTokenTypeOk() (*OAuthSubjectTokenType, bool) {
	if o == nil || o.SubjectTokenType == nil {
		return nil, false
	}
	return o.SubjectTokenType, true
}

// HasSubjectTokenType returns a boolean if a field has been set.
func (o *OAuthTokenRequest) HasSubjectTokenType() bool {
	if o != nil && o.SubjectTokenType != nil {
		return true
	}

	return false
}

// SetSubjectTokenType gets a reference to the given OAuthSubjectTokenType and assigns it to the SubjectTokenType field.
func (o *OAuthTokenRequest) SetSubjectTokenType(v OAuthSubjectTokenType) {
	o.SubjectTokenType = &v
}

func (o OAuthTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["grant_type"] = o.GrantType
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.RefreshToken != nil {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.Audience != nil {
		toSerialize["audience"] = o.Audience
	}
	if o.SubjectToken != nil {
		toSerialize["subject_token"] = o.SubjectToken
	}
	if o.SubjectTokenType != nil {
		toSerialize["subject_token_type"] = o.SubjectTokenType
	}
	return json.Marshal(toSerialize)
}

type NullableOAuthTokenRequest struct {
	value *OAuthTokenRequest
	isSet bool
}

func (v NullableOAuthTokenRequest) Get() *OAuthTokenRequest {
	return v.value
}

func (v *NullableOAuthTokenRequest) Set(val *OAuthTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthTokenRequest(val *OAuthTokenRequest) *NullableOAuthTokenRequest {
	return &NullableOAuthTokenRequest{value: val, isSet: true}
}

func (v NullableOAuthTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


