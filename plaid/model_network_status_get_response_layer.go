/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.641.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// NetworkStatusGetResponseLayer An object representing Layer-related metadata for the requested user.
type NetworkStatusGetResponseLayer struct {
	// Indicates if the user is eligible for a Layer session.
	Eligible bool `json:"eligible"`
	AdditionalProperties map[string]interface{}
}

type _NetworkStatusGetResponseLayer NetworkStatusGetResponseLayer

// NewNetworkStatusGetResponseLayer instantiates a new NetworkStatusGetResponseLayer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkStatusGetResponseLayer(eligible bool) *NetworkStatusGetResponseLayer {
	this := NetworkStatusGetResponseLayer{}
	this.Eligible = eligible
	return &this
}

// NewNetworkStatusGetResponseLayerWithDefaults instantiates a new NetworkStatusGetResponseLayer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkStatusGetResponseLayerWithDefaults() *NetworkStatusGetResponseLayer {
	this := NetworkStatusGetResponseLayer{}
	return &this
}

// GetEligible returns the Eligible field value
func (o *NetworkStatusGetResponseLayer) GetEligible() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Eligible
}

// GetEligibleOk returns a tuple with the Eligible field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusGetResponseLayer) GetEligibleOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Eligible, true
}

// SetEligible sets field value
func (o *NetworkStatusGetResponseLayer) SetEligible(v bool) {
	o.Eligible = v
}

func (o NetworkStatusGetResponseLayer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["eligible"] = o.Eligible
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *NetworkStatusGetResponseLayer) UnmarshalJSON(bytes []byte) (err error) {
	varNetworkStatusGetResponseLayer := _NetworkStatusGetResponseLayer{}

	if err = json.Unmarshal(bytes, &varNetworkStatusGetResponseLayer); err == nil {
		*o = NetworkStatusGetResponseLayer(varNetworkStatusGetResponseLayer)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "eligible")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkStatusGetResponseLayer struct {
	value *NetworkStatusGetResponseLayer
	isSet bool
}

func (v NullableNetworkStatusGetResponseLayer) Get() *NetworkStatusGetResponseLayer {
	return v.value
}

func (v *NullableNetworkStatusGetResponseLayer) Set(val *NetworkStatusGetResponseLayer) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkStatusGetResponseLayer) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkStatusGetResponseLayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkStatusGetResponseLayer(val *NetworkStatusGetResponseLayer) *NullableNetworkStatusGetResponseLayer {
	return &NullableNetworkStatusGetResponseLayer{value: val, isSet: true}
}

func (v NullableNetworkStatusGetResponseLayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkStatusGetResponseLayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


