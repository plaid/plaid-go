/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// HostedMMDVerificationWebhook Contains the state of a SMS same-day microdeposits verification session.
type HostedMMDVerificationWebhook struct {
	// `AUTH`
	WebhookType string `json:"webhook_type"`
	// `SMS_MICRODEPOSITS_VERIFICATION`
	WebhookCode string `json:"webhook_code"`
	// The final status of the same-day microdeposits verification. Will always be `MANUALLY_VERIFIED` or `VERIFICATION_FAILED`.
	Status string `json:"status"`
	// The `item_id` of the Item associated with this webhook, warning, or error
	ItemId string `json:"item_id"`
	// The external account ID of the affected account
	AccountId string `json:"account_id"`
	Environment *WebhookEnvironmentValues `json:"environment,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HostedMMDVerificationWebhook HostedMMDVerificationWebhook

// NewHostedMMDVerificationWebhook instantiates a new HostedMMDVerificationWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostedMMDVerificationWebhook(webhookType string, webhookCode string, status string, itemId string, accountId string) *HostedMMDVerificationWebhook {
	this := HostedMMDVerificationWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.Status = status
	this.ItemId = itemId
	this.AccountId = accountId
	return &this
}

// NewHostedMMDVerificationWebhookWithDefaults instantiates a new HostedMMDVerificationWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostedMMDVerificationWebhookWithDefaults() *HostedMMDVerificationWebhook {
	this := HostedMMDVerificationWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *HostedMMDVerificationWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *HostedMMDVerificationWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *HostedMMDVerificationWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *HostedMMDVerificationWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *HostedMMDVerificationWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *HostedMMDVerificationWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetStatus returns the Status field value
func (o *HostedMMDVerificationWebhook) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *HostedMMDVerificationWebhook) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *HostedMMDVerificationWebhook) SetStatus(v string) {
	o.Status = v
}

// GetItemId returns the ItemId field value
func (o *HostedMMDVerificationWebhook) GetItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *HostedMMDVerificationWebhook) GetItemIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *HostedMMDVerificationWebhook) SetItemId(v string) {
	o.ItemId = v
}

// GetAccountId returns the AccountId field value
func (o *HostedMMDVerificationWebhook) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *HostedMMDVerificationWebhook) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *HostedMMDVerificationWebhook) SetAccountId(v string) {
	o.AccountId = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *HostedMMDVerificationWebhook) GetEnvironment() WebhookEnvironmentValues {
	if o == nil || o.Environment == nil {
		var ret WebhookEnvironmentValues
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostedMMDVerificationWebhook) GetEnvironmentOk() (*WebhookEnvironmentValues, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *HostedMMDVerificationWebhook) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given WebhookEnvironmentValues and assigns it to the Environment field.
func (o *HostedMMDVerificationWebhook) SetEnvironment(v WebhookEnvironmentValues) {
	o.Environment = &v
}

func (o HostedMMDVerificationWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["item_id"] = o.ItemId
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *HostedMMDVerificationWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varHostedMMDVerificationWebhook := _HostedMMDVerificationWebhook{}

	if err = json.Unmarshal(bytes, &varHostedMMDVerificationWebhook); err == nil {
		*o = HostedMMDVerificationWebhook(varHostedMMDVerificationWebhook)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "status")
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHostedMMDVerificationWebhook struct {
	value *HostedMMDVerificationWebhook
	isSet bool
}

func (v NullableHostedMMDVerificationWebhook) Get() *HostedMMDVerificationWebhook {
	return v.value
}

func (v *NullableHostedMMDVerificationWebhook) Set(val *HostedMMDVerificationWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableHostedMMDVerificationWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableHostedMMDVerificationWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostedMMDVerificationWebhook(val *HostedMMDVerificationWebhook) *NullableHostedMMDVerificationWebhook {
	return &NullableHostedMMDVerificationWebhook{value: val, isSet: true}
}

func (v NullableHostedMMDVerificationWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostedMMDVerificationWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


