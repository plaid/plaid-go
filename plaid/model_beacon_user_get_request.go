/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconUserGetRequest Request input for fetching a Beacon User
type BeaconUserGetRequest struct {
	// ID of the associated Beacon User.
	BeaconUserId string `json:"beacon_user_id"`
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
}

// NewBeaconUserGetRequest instantiates a new BeaconUserGetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconUserGetRequest(beaconUserId string) *BeaconUserGetRequest {
	this := BeaconUserGetRequest{}
	this.BeaconUserId = beaconUserId
	return &this
}

// NewBeaconUserGetRequestWithDefaults instantiates a new BeaconUserGetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconUserGetRequestWithDefaults() *BeaconUserGetRequest {
	this := BeaconUserGetRequest{}
	return &this
}

// GetBeaconUserId returns the BeaconUserId field value
func (o *BeaconUserGetRequest) GetBeaconUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeaconUserId
}

// GetBeaconUserIdOk returns a tuple with the BeaconUserId field value
// and a boolean to check if the value has been set.
func (o *BeaconUserGetRequest) GetBeaconUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BeaconUserId, true
}

// SetBeaconUserId sets field value
func (o *BeaconUserGetRequest) SetBeaconUserId(v string) {
	o.BeaconUserId = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *BeaconUserGetRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconUserGetRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *BeaconUserGetRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *BeaconUserGetRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *BeaconUserGetRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconUserGetRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *BeaconUserGetRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *BeaconUserGetRequest) SetSecret(v string) {
	o.Secret = &v
}

func (o BeaconUserGetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["beacon_user_id"] = o.BeaconUserId
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	return json.Marshal(toSerialize)
}

type NullableBeaconUserGetRequest struct {
	value *BeaconUserGetRequest
	isSet bool
}

func (v NullableBeaconUserGetRequest) Get() *BeaconUserGetRequest {
	return v.value
}

func (v *NullableBeaconUserGetRequest) Set(val *BeaconUserGetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconUserGetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconUserGetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconUserGetRequest(val *BeaconUserGetRequest) *NullableBeaconUserGetRequest {
	return &NullableBeaconUserGetRequest{value: val, isSet: true}
}

func (v NullableBeaconUserGetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconUserGetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


