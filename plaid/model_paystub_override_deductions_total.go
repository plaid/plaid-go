/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.534.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PaystubOverrideDeductionsTotal An object representing the total deductions for the pay period
type PaystubOverrideDeductionsTotal struct {
	// Raw amount of the deduction
	CurrentAmount NullableFloat64 `json:"current_amount,omitempty"`
	// The ISO-4217 currency code of the line item.
	Currency NullableString `json:"currency,omitempty"`
	// The year-to-date total amount of the deductions
	YtdAmount NullableFloat64 `json:"ytd_amount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaystubOverrideDeductionsTotal PaystubOverrideDeductionsTotal

// NewPaystubOverrideDeductionsTotal instantiates a new PaystubOverrideDeductionsTotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaystubOverrideDeductionsTotal() *PaystubOverrideDeductionsTotal {
	this := PaystubOverrideDeductionsTotal{}
	return &this
}

// NewPaystubOverrideDeductionsTotalWithDefaults instantiates a new PaystubOverrideDeductionsTotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaystubOverrideDeductionsTotalWithDefaults() *PaystubOverrideDeductionsTotal {
	this := PaystubOverrideDeductionsTotal{}
	return &this
}

// GetCurrentAmount returns the CurrentAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaystubOverrideDeductionsTotal) GetCurrentAmount() float64 {
	if o == nil || o.CurrentAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.CurrentAmount.Get()
}

// GetCurrentAmountOk returns a tuple with the CurrentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaystubOverrideDeductionsTotal) GetCurrentAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CurrentAmount.Get(), o.CurrentAmount.IsSet()
}

// HasCurrentAmount returns a boolean if a field has been set.
func (o *PaystubOverrideDeductionsTotal) HasCurrentAmount() bool {
	if o != nil && o.CurrentAmount.IsSet() {
		return true
	}

	return false
}

// SetCurrentAmount gets a reference to the given NullableFloat64 and assigns it to the CurrentAmount field.
func (o *PaystubOverrideDeductionsTotal) SetCurrentAmount(v float64) {
	o.CurrentAmount.Set(&v)
}
// SetCurrentAmountNil sets the value for CurrentAmount to be an explicit nil
func (o *PaystubOverrideDeductionsTotal) SetCurrentAmountNil() {
	o.CurrentAmount.Set(nil)
}

// UnsetCurrentAmount ensures that no value is present for CurrentAmount, not even an explicit nil
func (o *PaystubOverrideDeductionsTotal) UnsetCurrentAmount() {
	o.CurrentAmount.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaystubOverrideDeductionsTotal) GetCurrency() string {
	if o == nil || o.Currency.Get() == nil {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaystubOverrideDeductionsTotal) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaystubOverrideDeductionsTotal) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *PaystubOverrideDeductionsTotal) SetCurrency(v string) {
	o.Currency.Set(&v)
}
// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *PaystubOverrideDeductionsTotal) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *PaystubOverrideDeductionsTotal) UnsetCurrency() {
	o.Currency.Unset()
}

// GetYtdAmount returns the YtdAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaystubOverrideDeductionsTotal) GetYtdAmount() float64 {
	if o == nil || o.YtdAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.YtdAmount.Get()
}

// GetYtdAmountOk returns a tuple with the YtdAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaystubOverrideDeductionsTotal) GetYtdAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.YtdAmount.Get(), o.YtdAmount.IsSet()
}

// HasYtdAmount returns a boolean if a field has been set.
func (o *PaystubOverrideDeductionsTotal) HasYtdAmount() bool {
	if o != nil && o.YtdAmount.IsSet() {
		return true
	}

	return false
}

// SetYtdAmount gets a reference to the given NullableFloat64 and assigns it to the YtdAmount field.
func (o *PaystubOverrideDeductionsTotal) SetYtdAmount(v float64) {
	o.YtdAmount.Set(&v)
}
// SetYtdAmountNil sets the value for YtdAmount to be an explicit nil
func (o *PaystubOverrideDeductionsTotal) SetYtdAmountNil() {
	o.YtdAmount.Set(nil)
}

// UnsetYtdAmount ensures that no value is present for YtdAmount, not even an explicit nil
func (o *PaystubOverrideDeductionsTotal) UnsetYtdAmount() {
	o.YtdAmount.Unset()
}

func (o PaystubOverrideDeductionsTotal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentAmount.IsSet() {
		toSerialize["current_amount"] = o.CurrentAmount.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.YtdAmount.IsSet() {
		toSerialize["ytd_amount"] = o.YtdAmount.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PaystubOverrideDeductionsTotal) UnmarshalJSON(bytes []byte) (err error) {
	varPaystubOverrideDeductionsTotal := _PaystubOverrideDeductionsTotal{}

	if err = json.Unmarshal(bytes, &varPaystubOverrideDeductionsTotal); err == nil {
		*o = PaystubOverrideDeductionsTotal(varPaystubOverrideDeductionsTotal)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "current_amount")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "ytd_amount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaystubOverrideDeductionsTotal struct {
	value *PaystubOverrideDeductionsTotal
	isSet bool
}

func (v NullablePaystubOverrideDeductionsTotal) Get() *PaystubOverrideDeductionsTotal {
	return v.value
}

func (v *NullablePaystubOverrideDeductionsTotal) Set(val *PaystubOverrideDeductionsTotal) {
	v.value = val
	v.isSet = true
}

func (v NullablePaystubOverrideDeductionsTotal) IsSet() bool {
	return v.isSet
}

func (v *NullablePaystubOverrideDeductionsTotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaystubOverrideDeductionsTotal(val *PaystubOverrideDeductionsTotal) *NullablePaystubOverrideDeductionsTotal {
	return &NullablePaystubOverrideDeductionsTotal{value: val, isSet: true}
}

func (v NullablePaystubOverrideDeductionsTotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaystubOverrideDeductionsTotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


