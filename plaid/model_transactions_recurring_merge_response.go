/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// TransactionsRecurringMergeResponse TransactionsRecurringMergeResponse defines the response schema for the `/transactions/recurring/streams/merge` endpoint.
type TransactionsRecurringMergeResponse struct {
	// Directly modified stream, along with other streams with transactions removed from them as a result of the operation (in no particular order).
	ModifiedStreams []TransactionStream `json:"modified_streams"`
	// The ids of streams that are no longer qualified as recurring transaction streams (in no particular order).
	RemovedStreamIds *[]string `json:"removed_stream_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransactionsRecurringMergeResponse TransactionsRecurringMergeResponse

// NewTransactionsRecurringMergeResponse instantiates a new TransactionsRecurringMergeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionsRecurringMergeResponse(modifiedStreams []TransactionStream) *TransactionsRecurringMergeResponse {
	this := TransactionsRecurringMergeResponse{}
	this.ModifiedStreams = modifiedStreams
	return &this
}

// NewTransactionsRecurringMergeResponseWithDefaults instantiates a new TransactionsRecurringMergeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionsRecurringMergeResponseWithDefaults() *TransactionsRecurringMergeResponse {
	this := TransactionsRecurringMergeResponse{}
	return &this
}

// GetModifiedStreams returns the ModifiedStreams field value
func (o *TransactionsRecurringMergeResponse) GetModifiedStreams() []TransactionStream {
	if o == nil {
		var ret []TransactionStream
		return ret
	}

	return o.ModifiedStreams
}

// GetModifiedStreamsOk returns a tuple with the ModifiedStreams field value
// and a boolean to check if the value has been set.
func (o *TransactionsRecurringMergeResponse) GetModifiedStreamsOk() (*[]TransactionStream, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ModifiedStreams, true
}

// SetModifiedStreams sets field value
func (o *TransactionsRecurringMergeResponse) SetModifiedStreams(v []TransactionStream) {
	o.ModifiedStreams = v
}

// GetRemovedStreamIds returns the RemovedStreamIds field value if set, zero value otherwise.
func (o *TransactionsRecurringMergeResponse) GetRemovedStreamIds() []string {
	if o == nil || o.RemovedStreamIds == nil {
		var ret []string
		return ret
	}
	return *o.RemovedStreamIds
}

// GetRemovedStreamIdsOk returns a tuple with the RemovedStreamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsRecurringMergeResponse) GetRemovedStreamIdsOk() (*[]string, bool) {
	if o == nil || o.RemovedStreamIds == nil {
		return nil, false
	}
	return o.RemovedStreamIds, true
}

// HasRemovedStreamIds returns a boolean if a field has been set.
func (o *TransactionsRecurringMergeResponse) HasRemovedStreamIds() bool {
	if o != nil && o.RemovedStreamIds != nil {
		return true
	}

	return false
}

// SetRemovedStreamIds gets a reference to the given []string and assigns it to the RemovedStreamIds field.
func (o *TransactionsRecurringMergeResponse) SetRemovedStreamIds(v []string) {
	o.RemovedStreamIds = &v
}

func (o TransactionsRecurringMergeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["modified_streams"] = o.ModifiedStreams
	}
	if o.RemovedStreamIds != nil {
		toSerialize["removed_stream_ids"] = o.RemovedStreamIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TransactionsRecurringMergeResponse) UnmarshalJSON(bytes []byte) (err error) {
	varTransactionsRecurringMergeResponse := _TransactionsRecurringMergeResponse{}

	if err = json.Unmarshal(bytes, &varTransactionsRecurringMergeResponse); err == nil {
		*o = TransactionsRecurringMergeResponse(varTransactionsRecurringMergeResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "modified_streams")
		delete(additionalProperties, "removed_stream_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransactionsRecurringMergeResponse struct {
	value *TransactionsRecurringMergeResponse
	isSet bool
}

func (v NullableTransactionsRecurringMergeResponse) Get() *TransactionsRecurringMergeResponse {
	return v.value
}

func (v *NullableTransactionsRecurringMergeResponse) Set(val *TransactionsRecurringMergeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionsRecurringMergeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionsRecurringMergeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionsRecurringMergeResponse(val *TransactionsRecurringMergeResponse) *NullableTransactionsRecurringMergeResponse {
	return &NullableTransactionsRecurringMergeResponse{value: val, isSet: true}
}

func (v NullableTransactionsRecurringMergeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionsRecurringMergeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


