/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.658.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// ProtectEventSendRequest Request object for /protect/event/send
type ProtectEventSendRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// Timestamp of the event. Might be the current moment or a time in the past. In [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Event NullableProtectEvent `json:"event"`
	// Protect Session ID should be provided for any event correlated with a frontend user session started via the Protect SDK.
	ProtectSessionId *string `json:"protect_session_id,omitempty"`
	// Whether this event should be scored with Trust Index. The default is false.
	RequestTrustIndex *bool `json:"request_trust_index,omitempty"`
}

// NewProtectEventSendRequest instantiates a new ProtectEventSendRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectEventSendRequest(event NullableProtectEvent) *ProtectEventSendRequest {
	this := ProtectEventSendRequest{}
	this.Event = event
	return &this
}

// NewProtectEventSendRequestWithDefaults instantiates a new ProtectEventSendRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectEventSendRequestWithDefaults() *ProtectEventSendRequest {
	this := ProtectEventSendRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ProtectEventSendRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectEventSendRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ProtectEventSendRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ProtectEventSendRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *ProtectEventSendRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectEventSendRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *ProtectEventSendRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *ProtectEventSendRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ProtectEventSendRequest) GetTimestamp() time.Time {
	if o == nil || o.Timestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectEventSendRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ProtectEventSendRequest) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ProtectEventSendRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetEvent returns the Event field value
// If the value is explicit nil, the zero value for ProtectEvent will be returned
func (o *ProtectEventSendRequest) GetEvent() ProtectEvent {
	if o == nil || o.Event.Get() == nil {
		var ret ProtectEvent
		return ret
	}

	return *o.Event.Get()
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectEventSendRequest) GetEventOk() (*ProtectEvent, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Event.Get(), o.Event.IsSet()
}

// SetEvent sets field value
func (o *ProtectEventSendRequest) SetEvent(v ProtectEvent) {
	o.Event.Set(&v)
}

// GetProtectSessionId returns the ProtectSessionId field value if set, zero value otherwise.
func (o *ProtectEventSendRequest) GetProtectSessionId() string {
	if o == nil || o.ProtectSessionId == nil {
		var ret string
		return ret
	}
	return *o.ProtectSessionId
}

// GetProtectSessionIdOk returns a tuple with the ProtectSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectEventSendRequest) GetProtectSessionIdOk() (*string, bool) {
	if o == nil || o.ProtectSessionId == nil {
		return nil, false
	}
	return o.ProtectSessionId, true
}

// HasProtectSessionId returns a boolean if a field has been set.
func (o *ProtectEventSendRequest) HasProtectSessionId() bool {
	if o != nil && o.ProtectSessionId != nil {
		return true
	}

	return false
}

// SetProtectSessionId gets a reference to the given string and assigns it to the ProtectSessionId field.
func (o *ProtectEventSendRequest) SetProtectSessionId(v string) {
	o.ProtectSessionId = &v
}

// GetRequestTrustIndex returns the RequestTrustIndex field value if set, zero value otherwise.
func (o *ProtectEventSendRequest) GetRequestTrustIndex() bool {
	if o == nil || o.RequestTrustIndex == nil {
		var ret bool
		return ret
	}
	return *o.RequestTrustIndex
}

// GetRequestTrustIndexOk returns a tuple with the RequestTrustIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectEventSendRequest) GetRequestTrustIndexOk() (*bool, bool) {
	if o == nil || o.RequestTrustIndex == nil {
		return nil, false
	}
	return o.RequestTrustIndex, true
}

// HasRequestTrustIndex returns a boolean if a field has been set.
func (o *ProtectEventSendRequest) HasRequestTrustIndex() bool {
	if o != nil && o.RequestTrustIndex != nil {
		return true
	}

	return false
}

// SetRequestTrustIndex gets a reference to the given bool and assigns it to the RequestTrustIndex field.
func (o *ProtectEventSendRequest) SetRequestTrustIndex(v bool) {
	o.RequestTrustIndex = &v
}

func (o ProtectEventSendRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["event"] = o.Event.Get()
	}
	if o.ProtectSessionId != nil {
		toSerialize["protect_session_id"] = o.ProtectSessionId
	}
	if o.RequestTrustIndex != nil {
		toSerialize["request_trust_index"] = o.RequestTrustIndex
	}
	return json.Marshal(toSerialize)
}

type NullableProtectEventSendRequest struct {
	value *ProtectEventSendRequest
	isSet bool
}

func (v NullableProtectEventSendRequest) Get() *ProtectEventSendRequest {
	return v.value
}

func (v *NullableProtectEventSendRequest) Set(val *ProtectEventSendRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectEventSendRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectEventSendRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectEventSendRequest(val *ProtectEventSendRequest) *NullableProtectEventSendRequest {
	return &NullableProtectEventSendRequest{value: val, isSet: true}
}

func (v NullableProtectEventSendRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectEventSendRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


