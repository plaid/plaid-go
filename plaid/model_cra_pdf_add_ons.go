/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// CraPDFAddOns A list of add-ons that can be included in the PDF.  `cra_income_insights`: Include Income Insights report in the PDF.
type CraPDFAddOns string

var _ = fmt.Printf

// List of CraPDFAddOns
const (
	CRAPDFADDONS_CRA_INCOME_INSIGHTS CraPDFAddOns = "cra_income_insights"
)

var allowedCraPDFAddOnsEnumValues = []CraPDFAddOns{
	"cra_income_insights",
}

func (v *CraPDFAddOns) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := CraPDFAddOns(value)


	*v = enumTypeValue
	return nil
}

// NewCraPDFAddOnsFromValue returns a pointer to a valid CraPDFAddOns
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCraPDFAddOnsFromValue(v string) (*CraPDFAddOns, error) {
	ev := CraPDFAddOns(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CraPDFAddOns) IsValid() bool {
	for _, existing := range allowedCraPDFAddOnsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CraPDFAddOns value
func (v CraPDFAddOns) Ptr() *CraPDFAddOns {
	return &v
}

type NullableCraPDFAddOns struct {
	value *CraPDFAddOns
	isSet bool
}

func (v NullableCraPDFAddOns) Get() *CraPDFAddOns {
	return v.value
}

func (v *NullableCraPDFAddOns) Set(val *CraPDFAddOns) {
	v.value = val
	v.isSet = true
}

func (v NullableCraPDFAddOns) IsSet() bool {
	return v.isSet
}

func (v *NullableCraPDFAddOns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraPDFAddOns(val *CraPDFAddOns) *NullableCraPDFAddOns {
	return &NullableCraPDFAddOns{value: val, isSet: true}
}

func (v NullableCraPDFAddOns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraPDFAddOns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

