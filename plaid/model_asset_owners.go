/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.343.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// AssetOwners Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
type AssetOwners struct {
	// Multiple Occurances of Account Owners Full Name up to 4.
	ASSET_OWNER []AssetOwner `json:"ASSET_OWNER"`
	AdditionalProperties map[string]interface{}
}

type _AssetOwners AssetOwners

// NewAssetOwners instantiates a new AssetOwners object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetOwners(aSSETOWNER []AssetOwner) *AssetOwners {
	this := AssetOwners{}
	this.ASSET_OWNER = aSSETOWNER
	return &this
}

// NewAssetOwnersWithDefaults instantiates a new AssetOwners object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetOwnersWithDefaults() *AssetOwners {
	this := AssetOwners{}
	return &this
}

// GetASSET_OWNER returns the ASSET_OWNER field value
func (o *AssetOwners) GetASSET_OWNER() []AssetOwner {
	if o == nil {
		var ret []AssetOwner
		return ret
	}

	return o.ASSET_OWNER
}

// GetASSET_OWNEROk returns a tuple with the ASSET_OWNER field value
// and a boolean to check if the value has been set.
func (o *AssetOwners) GetASSET_OWNEROk() (*[]AssetOwner, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ASSET_OWNER, true
}

// SetASSET_OWNER sets field value
func (o *AssetOwners) SetASSET_OWNER(v []AssetOwner) {
	o.ASSET_OWNER = v
}

func (o AssetOwners) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ASSET_OWNER"] = o.ASSET_OWNER
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AssetOwners) UnmarshalJSON(bytes []byte) (err error) {
	varAssetOwners := _AssetOwners{}

	if err = json.Unmarshal(bytes, &varAssetOwners); err == nil {
		*o = AssetOwners(varAssetOwners)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ASSET_OWNER")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetOwners struct {
	value *AssetOwners
	isSet bool
}

func (v NullableAssetOwners) Get() *AssetOwners {
	return v.value
}

func (v *NullableAssetOwners) Set(val *AssetOwners) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetOwners) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetOwners) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetOwners(val *AssetOwners) *NullableAssetOwners {
	return &NullableAssetOwners{value: val, isSet: true}
}

func (v NullableAssetOwners) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetOwners) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


