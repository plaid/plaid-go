/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.370.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ClientProvidedEnrichedTransaction A client-provided transaction that Plaid has enriched.
type ClientProvidedEnrichedTransaction struct {
	// The unique ID for the transaction as provided by you in the request.
	Id string `json:"id"`
	// The raw description of the transaction.
	Description string `json:"description"`
	// The absolute value of the transaction (>= 0)
	Amount float64 `json:"amount"`
	Direction *EnrichTransactionDirection `json:"direction,omitempty"`
	// The ISO-4217 currency code of the transaction e.g. USD.
	IsoCurrencyCode string `json:"iso_currency_code"`
	Enrichments Enrichments `json:"enrichments"`
	AdditionalProperties map[string]interface{}
}

type _ClientProvidedEnrichedTransaction ClientProvidedEnrichedTransaction

// NewClientProvidedEnrichedTransaction instantiates a new ClientProvidedEnrichedTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientProvidedEnrichedTransaction(id string, description string, amount float64, isoCurrencyCode string, enrichments Enrichments) *ClientProvidedEnrichedTransaction {
	this := ClientProvidedEnrichedTransaction{}
	this.Id = id
	this.Description = description
	this.Amount = amount
	this.IsoCurrencyCode = isoCurrencyCode
	this.Enrichments = enrichments
	return &this
}

// NewClientProvidedEnrichedTransactionWithDefaults instantiates a new ClientProvidedEnrichedTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientProvidedEnrichedTransactionWithDefaults() *ClientProvidedEnrichedTransaction {
	this := ClientProvidedEnrichedTransaction{}
	return &this
}

// GetId returns the Id field value
func (o *ClientProvidedEnrichedTransaction) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ClientProvidedEnrichedTransaction) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ClientProvidedEnrichedTransaction) SetId(v string) {
	o.Id = v
}

// GetDescription returns the Description field value
func (o *ClientProvidedEnrichedTransaction) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ClientProvidedEnrichedTransaction) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ClientProvidedEnrichedTransaction) SetDescription(v string) {
	o.Description = v
}

// GetAmount returns the Amount field value
func (o *ClientProvidedEnrichedTransaction) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ClientProvidedEnrichedTransaction) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ClientProvidedEnrichedTransaction) SetAmount(v float64) {
	o.Amount = v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *ClientProvidedEnrichedTransaction) GetDirection() EnrichTransactionDirection {
	if o == nil || o.Direction == nil {
		var ret EnrichTransactionDirection
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientProvidedEnrichedTransaction) GetDirectionOk() (*EnrichTransactionDirection, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *ClientProvidedEnrichedTransaction) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given EnrichTransactionDirection and assigns it to the Direction field.
func (o *ClientProvidedEnrichedTransaction) SetDirection(v EnrichTransactionDirection) {
	o.Direction = &v
}

// GetIsoCurrencyCode returns the IsoCurrencyCode field value
func (o *ClientProvidedEnrichedTransaction) GetIsoCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IsoCurrencyCode
}

// GetIsoCurrencyCodeOk returns a tuple with the IsoCurrencyCode field value
// and a boolean to check if the value has been set.
func (o *ClientProvidedEnrichedTransaction) GetIsoCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsoCurrencyCode, true
}

// SetIsoCurrencyCode sets field value
func (o *ClientProvidedEnrichedTransaction) SetIsoCurrencyCode(v string) {
	o.IsoCurrencyCode = v
}

// GetEnrichments returns the Enrichments field value
func (o *ClientProvidedEnrichedTransaction) GetEnrichments() Enrichments {
	if o == nil {
		var ret Enrichments
		return ret
	}

	return o.Enrichments
}

// GetEnrichmentsOk returns a tuple with the Enrichments field value
// and a boolean to check if the value has been set.
func (o *ClientProvidedEnrichedTransaction) GetEnrichmentsOk() (*Enrichments, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enrichments, true
}

// SetEnrichments sets field value
func (o *ClientProvidedEnrichedTransaction) SetEnrichments(v Enrichments) {
	o.Enrichments = v
}

func (o ClientProvidedEnrichedTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if true {
		toSerialize["iso_currency_code"] = o.IsoCurrencyCode
	}
	if true {
		toSerialize["enrichments"] = o.Enrichments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ClientProvidedEnrichedTransaction) UnmarshalJSON(bytes []byte) (err error) {
	varClientProvidedEnrichedTransaction := _ClientProvidedEnrichedTransaction{}

	if err = json.Unmarshal(bytes, &varClientProvidedEnrichedTransaction); err == nil {
		*o = ClientProvidedEnrichedTransaction(varClientProvidedEnrichedTransaction)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "description")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "direction")
		delete(additionalProperties, "iso_currency_code")
		delete(additionalProperties, "enrichments")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientProvidedEnrichedTransaction struct {
	value *ClientProvidedEnrichedTransaction
	isSet bool
}

func (v NullableClientProvidedEnrichedTransaction) Get() *ClientProvidedEnrichedTransaction {
	return v.value
}

func (v *NullableClientProvidedEnrichedTransaction) Set(val *ClientProvidedEnrichedTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableClientProvidedEnrichedTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableClientProvidedEnrichedTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientProvidedEnrichedTransaction(val *ClientProvidedEnrichedTransaction) *NullableClientProvidedEnrichedTransaction {
	return &NullableClientProvidedEnrichedTransaction{value: val, isSet: true}
}

func (v NullableClientProvidedEnrichedTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientProvidedEnrichedTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


