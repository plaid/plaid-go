/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.410.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconReportCreateRequest Request input for creating a Beacon Report
type BeaconReportCreateRequest struct {
	// ID of the associated Beacon User.
	BeaconUserId string `json:"beacon_user_id"`
	Type BeaconReportType `json:"type"`
	// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
	FraudDate string `json:"fraud_date"`
	FraudAmount *FraudAmount `json:"fraud_amount,omitempty"`
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
}

// NewBeaconReportCreateRequest instantiates a new BeaconReportCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconReportCreateRequest(beaconUserId string, type_ BeaconReportType, fraudDate string) *BeaconReportCreateRequest {
	this := BeaconReportCreateRequest{}
	this.BeaconUserId = beaconUserId
	this.Type = type_
	this.FraudDate = fraudDate
	return &this
}

// NewBeaconReportCreateRequestWithDefaults instantiates a new BeaconReportCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconReportCreateRequestWithDefaults() *BeaconReportCreateRequest {
	this := BeaconReportCreateRequest{}
	return &this
}

// GetBeaconUserId returns the BeaconUserId field value
func (o *BeaconReportCreateRequest) GetBeaconUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeaconUserId
}

// GetBeaconUserIdOk returns a tuple with the BeaconUserId field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateRequest) GetBeaconUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BeaconUserId, true
}

// SetBeaconUserId sets field value
func (o *BeaconReportCreateRequest) SetBeaconUserId(v string) {
	o.BeaconUserId = v
}

// GetType returns the Type field value
func (o *BeaconReportCreateRequest) GetType() BeaconReportType {
	if o == nil {
		var ret BeaconReportType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateRequest) GetTypeOk() (*BeaconReportType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BeaconReportCreateRequest) SetType(v BeaconReportType) {
	o.Type = v
}

// GetFraudDate returns the FraudDate field value
func (o *BeaconReportCreateRequest) GetFraudDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FraudDate
}

// GetFraudDateOk returns a tuple with the FraudDate field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateRequest) GetFraudDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FraudDate, true
}

// SetFraudDate sets field value
func (o *BeaconReportCreateRequest) SetFraudDate(v string) {
	o.FraudDate = v
}

// GetFraudAmount returns the FraudAmount field value if set, zero value otherwise.
func (o *BeaconReportCreateRequest) GetFraudAmount() FraudAmount {
	if o == nil || o.FraudAmount == nil {
		var ret FraudAmount
		return ret
	}
	return *o.FraudAmount
}

// GetFraudAmountOk returns a tuple with the FraudAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateRequest) GetFraudAmountOk() (*FraudAmount, bool) {
	if o == nil || o.FraudAmount == nil {
		return nil, false
	}
	return o.FraudAmount, true
}

// HasFraudAmount returns a boolean if a field has been set.
func (o *BeaconReportCreateRequest) HasFraudAmount() bool {
	if o != nil && o.FraudAmount != nil {
		return true
	}

	return false
}

// SetFraudAmount gets a reference to the given FraudAmount and assigns it to the FraudAmount field.
func (o *BeaconReportCreateRequest) SetFraudAmount(v FraudAmount) {
	o.FraudAmount = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *BeaconReportCreateRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *BeaconReportCreateRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *BeaconReportCreateRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *BeaconReportCreateRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *BeaconReportCreateRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *BeaconReportCreateRequest) SetSecret(v string) {
	o.Secret = &v
}

func (o BeaconReportCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["beacon_user_id"] = o.BeaconUserId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["fraud_date"] = o.FraudDate
	}
	if o.FraudAmount != nil {
		toSerialize["fraud_amount"] = o.FraudAmount
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	return json.Marshal(toSerialize)
}

type NullableBeaconReportCreateRequest struct {
	value *BeaconReportCreateRequest
	isSet bool
}

func (v NullableBeaconReportCreateRequest) Get() *BeaconReportCreateRequest {
	return v.value
}

func (v *NullableBeaconReportCreateRequest) Set(val *BeaconReportCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconReportCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconReportCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconReportCreateRequest(val *BeaconReportCreateRequest) *NullableBeaconReportCreateRequest {
	return &NullableBeaconReportCreateRequest{value: val, isSet: true}
}

func (v NullableBeaconReportCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconReportCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


