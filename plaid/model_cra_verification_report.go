/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.652.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CraVerificationReport Contains data for the CRA Verification Report.
type CraVerificationReport struct {
	// The unique identifier associated with the Verification Report object. This ID will be the same as the Base Report ID.
	ReportId string `json:"report_id"`
	// Client-generated identifier, which can be used by lenders to track loan applications.
	ClientReportId NullableString `json:"client_report_id,omitempty"`
	Voa NullableCraVoaReport `json:"voa,omitempty"`
	EmploymentRefresh NullableCraEmploymentRefreshReport `json:"employment_refresh,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CraVerificationReport CraVerificationReport

// NewCraVerificationReport instantiates a new CraVerificationReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCraVerificationReport(reportId string) *CraVerificationReport {
	this := CraVerificationReport{}
	this.ReportId = reportId
	return &this
}

// NewCraVerificationReportWithDefaults instantiates a new CraVerificationReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCraVerificationReportWithDefaults() *CraVerificationReport {
	this := CraVerificationReport{}
	return &this
}

// GetReportId returns the ReportId field value
func (o *CraVerificationReport) GetReportId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportId
}

// GetReportIdOk returns a tuple with the ReportId field value
// and a boolean to check if the value has been set.
func (o *CraVerificationReport) GetReportIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReportId, true
}

// SetReportId sets field value
func (o *CraVerificationReport) SetReportId(v string) {
	o.ReportId = v
}

// GetClientReportId returns the ClientReportId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraVerificationReport) GetClientReportId() string {
	if o == nil || o.ClientReportId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientReportId.Get()
}

// GetClientReportIdOk returns a tuple with the ClientReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraVerificationReport) GetClientReportIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientReportId.Get(), o.ClientReportId.IsSet()
}

// HasClientReportId returns a boolean if a field has been set.
func (o *CraVerificationReport) HasClientReportId() bool {
	if o != nil && o.ClientReportId.IsSet() {
		return true
	}

	return false
}

// SetClientReportId gets a reference to the given NullableString and assigns it to the ClientReportId field.
func (o *CraVerificationReport) SetClientReportId(v string) {
	o.ClientReportId.Set(&v)
}
// SetClientReportIdNil sets the value for ClientReportId to be an explicit nil
func (o *CraVerificationReport) SetClientReportIdNil() {
	o.ClientReportId.Set(nil)
}

// UnsetClientReportId ensures that no value is present for ClientReportId, not even an explicit nil
func (o *CraVerificationReport) UnsetClientReportId() {
	o.ClientReportId.Unset()
}

// GetVoa returns the Voa field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraVerificationReport) GetVoa() CraVoaReport {
	if o == nil || o.Voa.Get() == nil {
		var ret CraVoaReport
		return ret
	}
	return *o.Voa.Get()
}

// GetVoaOk returns a tuple with the Voa field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraVerificationReport) GetVoaOk() (*CraVoaReport, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Voa.Get(), o.Voa.IsSet()
}

// HasVoa returns a boolean if a field has been set.
func (o *CraVerificationReport) HasVoa() bool {
	if o != nil && o.Voa.IsSet() {
		return true
	}

	return false
}

// SetVoa gets a reference to the given NullableCraVoaReport and assigns it to the Voa field.
func (o *CraVerificationReport) SetVoa(v CraVoaReport) {
	o.Voa.Set(&v)
}
// SetVoaNil sets the value for Voa to be an explicit nil
func (o *CraVerificationReport) SetVoaNil() {
	o.Voa.Set(nil)
}

// UnsetVoa ensures that no value is present for Voa, not even an explicit nil
func (o *CraVerificationReport) UnsetVoa() {
	o.Voa.Unset()
}

// GetEmploymentRefresh returns the EmploymentRefresh field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CraVerificationReport) GetEmploymentRefresh() CraEmploymentRefreshReport {
	if o == nil || o.EmploymentRefresh.Get() == nil {
		var ret CraEmploymentRefreshReport
		return ret
	}
	return *o.EmploymentRefresh.Get()
}

// GetEmploymentRefreshOk returns a tuple with the EmploymentRefresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CraVerificationReport) GetEmploymentRefreshOk() (*CraEmploymentRefreshReport, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmploymentRefresh.Get(), o.EmploymentRefresh.IsSet()
}

// HasEmploymentRefresh returns a boolean if a field has been set.
func (o *CraVerificationReport) HasEmploymentRefresh() bool {
	if o != nil && o.EmploymentRefresh.IsSet() {
		return true
	}

	return false
}

// SetEmploymentRefresh gets a reference to the given NullableCraEmploymentRefreshReport and assigns it to the EmploymentRefresh field.
func (o *CraVerificationReport) SetEmploymentRefresh(v CraEmploymentRefreshReport) {
	o.EmploymentRefresh.Set(&v)
}
// SetEmploymentRefreshNil sets the value for EmploymentRefresh to be an explicit nil
func (o *CraVerificationReport) SetEmploymentRefreshNil() {
	o.EmploymentRefresh.Set(nil)
}

// UnsetEmploymentRefresh ensures that no value is present for EmploymentRefresh, not even an explicit nil
func (o *CraVerificationReport) UnsetEmploymentRefresh() {
	o.EmploymentRefresh.Unset()
}

func (o CraVerificationReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["report_id"] = o.ReportId
	}
	if o.ClientReportId.IsSet() {
		toSerialize["client_report_id"] = o.ClientReportId.Get()
	}
	if o.Voa.IsSet() {
		toSerialize["voa"] = o.Voa.Get()
	}
	if o.EmploymentRefresh.IsSet() {
		toSerialize["employment_refresh"] = o.EmploymentRefresh.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CraVerificationReport) UnmarshalJSON(bytes []byte) (err error) {
	varCraVerificationReport := _CraVerificationReport{}

	if err = json.Unmarshal(bytes, &varCraVerificationReport); err == nil {
		*o = CraVerificationReport(varCraVerificationReport)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "report_id")
		delete(additionalProperties, "client_report_id")
		delete(additionalProperties, "voa")
		delete(additionalProperties, "employment_refresh")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCraVerificationReport struct {
	value *CraVerificationReport
	isSet bool
}

func (v NullableCraVerificationReport) Get() *CraVerificationReport {
	return v.value
}

func (v *NullableCraVerificationReport) Set(val *CraVerificationReport) {
	v.value = val
	v.isSet = true
}

func (v NullableCraVerificationReport) IsSet() bool {
	return v.isSet
}

func (v *NullableCraVerificationReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraVerificationReport(val *CraVerificationReport) *NullableCraVerificationReport {
	return &NullableCraVerificationReport{value: val, isSet: true}
}

func (v NullableCraVerificationReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraVerificationReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


