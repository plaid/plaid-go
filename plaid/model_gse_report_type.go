/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.664.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// GSEReportType The types of GSE Reports supported by the Plaid API
type GSEReportType string

var _ = fmt.Printf

// List of GSEReportType
const (
	GSEREPORTTYPE_VOA GSEReportType = "VOA"
	GSEREPORTTYPE_EMPLOYMENT_REFRESH GSEReportType = "EMPLOYMENT_REFRESH"
)

var allowedGSEReportTypeEnumValues = []GSEReportType{
	"VOA",
	"EMPLOYMENT_REFRESH",
}

func (v *GSEReportType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := GSEReportType(value)


	*v = enumTypeValue
	return nil
}

// NewGSEReportTypeFromValue returns a pointer to a valid GSEReportType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGSEReportTypeFromValue(v string) (*GSEReportType, error) {
	ev := GSEReportType(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GSEReportType) IsValid() bool {
	for _, existing := range allowedGSEReportTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GSEReportType value
func (v GSEReportType) Ptr() *GSEReportType {
	return &v
}

type NullableGSEReportType struct {
	value *GSEReportType
	isSet bool
}

func (v NullableGSEReportType) Get() *GSEReportType {
	return v.value
}

func (v *NullableGSEReportType) Set(val *GSEReportType) {
	v.value = val
	v.isSet = true
}

func (v NullableGSEReportType) IsSet() bool {
	return v.isSet
}

func (v *NullableGSEReportType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGSEReportType(val *GSEReportType) *NullableGSEReportType {
	return &NullableGSEReportType{value: val, isSet: true}
}

func (v NullableGSEReportType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGSEReportType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

