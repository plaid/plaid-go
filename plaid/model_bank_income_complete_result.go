/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// BankIncomeCompleteResult The result of the bank income refresh report generation  `SUCCESS`: The refreshed report was successfully generated and can be retrieved via `/cra/bank_income/get`.  `FAILURE`: The refreshed report failed to be generated
type BankIncomeCompleteResult string

var _ = fmt.Printf

// List of BankIncomeCompleteResult
const (
	BANKINCOMECOMPLETERESULT_SUCCESS BankIncomeCompleteResult = "SUCCESS"
	BANKINCOMECOMPLETERESULT_FAILURE BankIncomeCompleteResult = "FAILURE"
)

var allowedBankIncomeCompleteResultEnumValues = []BankIncomeCompleteResult{
	"SUCCESS",
	"FAILURE",
}

func (v *BankIncomeCompleteResult) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := BankIncomeCompleteResult(value)


	*v = enumTypeValue
	return nil
}

// NewBankIncomeCompleteResultFromValue returns a pointer to a valid BankIncomeCompleteResult
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBankIncomeCompleteResultFromValue(v string) (*BankIncomeCompleteResult, error) {
	ev := BankIncomeCompleteResult(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BankIncomeCompleteResult) IsValid() bool {
	for _, existing := range allowedBankIncomeCompleteResultEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BankIncomeCompleteResult value
func (v BankIncomeCompleteResult) Ptr() *BankIncomeCompleteResult {
	return &v
}

type NullableBankIncomeCompleteResult struct {
	value *BankIncomeCompleteResult
	isSet bool
}

func (v NullableBankIncomeCompleteResult) Get() *BankIncomeCompleteResult {
	return v.value
}

func (v *NullableBankIncomeCompleteResult) Set(val *BankIncomeCompleteResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBankIncomeCompleteResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBankIncomeCompleteResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankIncomeCompleteResult(val *BankIncomeCompleteResult) *NullableBankIncomeCompleteResult {
	return &NullableBankIncomeCompleteResult{value: val, isSet: true}
}

func (v NullableBankIncomeCompleteResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankIncomeCompleteResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

