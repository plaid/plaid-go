/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.658.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// ProtectEventSendResponse Response object for /protect/event/send
type ProtectEventSendResponse struct {
	// The id of the recorded event.
	EventId string `json:"event_id"`
	TrustIndex NullableTrustIndex `json:"trust_index,omitempty"`
	// Event fraud attributes as an arbitrary set of key-value pairs.
	FraudAttributes map[string]map[string]interface{} `json:"fraud_attributes,omitempty"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _ProtectEventSendResponse ProtectEventSendResponse

// NewProtectEventSendResponse instantiates a new ProtectEventSendResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectEventSendResponse(eventId string, requestId string) *ProtectEventSendResponse {
	this := ProtectEventSendResponse{}
	this.EventId = eventId
	this.RequestId = requestId
	return &this
}

// NewProtectEventSendResponseWithDefaults instantiates a new ProtectEventSendResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectEventSendResponseWithDefaults() *ProtectEventSendResponse {
	this := ProtectEventSendResponse{}
	return &this
}

// GetEventId returns the EventId field value
func (o *ProtectEventSendResponse) GetEventId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *ProtectEventSendResponse) GetEventIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *ProtectEventSendResponse) SetEventId(v string) {
	o.EventId = v
}

// GetTrustIndex returns the TrustIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectEventSendResponse) GetTrustIndex() TrustIndex {
	if o == nil || o.TrustIndex.Get() == nil {
		var ret TrustIndex
		return ret
	}
	return *o.TrustIndex.Get()
}

// GetTrustIndexOk returns a tuple with the TrustIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectEventSendResponse) GetTrustIndexOk() (*TrustIndex, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TrustIndex.Get(), o.TrustIndex.IsSet()
}

// HasTrustIndex returns a boolean if a field has been set.
func (o *ProtectEventSendResponse) HasTrustIndex() bool {
	if o != nil && o.TrustIndex.IsSet() {
		return true
	}

	return false
}

// SetTrustIndex gets a reference to the given NullableTrustIndex and assigns it to the TrustIndex field.
func (o *ProtectEventSendResponse) SetTrustIndex(v TrustIndex) {
	o.TrustIndex.Set(&v)
}
// SetTrustIndexNil sets the value for TrustIndex to be an explicit nil
func (o *ProtectEventSendResponse) SetTrustIndexNil() {
	o.TrustIndex.Set(nil)
}

// UnsetTrustIndex ensures that no value is present for TrustIndex, not even an explicit nil
func (o *ProtectEventSendResponse) UnsetTrustIndex() {
	o.TrustIndex.Unset()
}

// GetFraudAttributes returns the FraudAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProtectEventSendResponse) GetFraudAttributes() map[string]map[string]interface{} {
	if o == nil  {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.FraudAttributes
}

// GetFraudAttributesOk returns a tuple with the FraudAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProtectEventSendResponse) GetFraudAttributesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.FraudAttributes == nil {
		return nil, false
	}
	return &o.FraudAttributes, true
}

// HasFraudAttributes returns a boolean if a field has been set.
func (o *ProtectEventSendResponse) HasFraudAttributes() bool {
	if o != nil && o.FraudAttributes != nil {
		return true
	}

	return false
}

// SetFraudAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the FraudAttributes field.
func (o *ProtectEventSendResponse) SetFraudAttributes(v map[string]map[string]interface{}) {
	o.FraudAttributes = v
}

// GetRequestId returns the RequestId field value
func (o *ProtectEventSendResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ProtectEventSendResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ProtectEventSendResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o ProtectEventSendResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["event_id"] = o.EventId
	}
	if o.TrustIndex.IsSet() {
		toSerialize["trust_index"] = o.TrustIndex.Get()
	}
	if o.FraudAttributes != nil {
		toSerialize["fraud_attributes"] = o.FraudAttributes
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProtectEventSendResponse) UnmarshalJSON(bytes []byte) (err error) {
	varProtectEventSendResponse := _ProtectEventSendResponse{}

	if err = json.Unmarshal(bytes, &varProtectEventSendResponse); err == nil {
		*o = ProtectEventSendResponse(varProtectEventSendResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "event_id")
		delete(additionalProperties, "trust_index")
		delete(additionalProperties, "fraud_attributes")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProtectEventSendResponse struct {
	value *ProtectEventSendResponse
	isSet bool
}

func (v NullableProtectEventSendResponse) Get() *ProtectEventSendResponse {
	return v.value
}

func (v *NullableProtectEventSendResponse) Set(val *ProtectEventSendResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectEventSendResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectEventSendResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectEventSendResponse(val *ProtectEventSendResponse) *NullableProtectEventSendResponse {
	return &NullableProtectEventSendResponse{value: val, isSet: true}
}

func (v NullableProtectEventSendResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectEventSendResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


