/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.410.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// BeaconReportCreateResponse A Beacon Report describes the type of fraud committed by a user as well as the date the fraud was committed and the total amount of money lost due to the fraud incident.  This information is used to block similar fraud attempts on your platform as well as alert other companies who screen a user with matching identity information. Other companies will not receive any new identity information, just what matched, plus information such as industry, type of fraud, and date of fraud.  You can manage your fraud reports by adding, deleting, or editing reports as you get additional information on fraudulent users.
type BeaconReportCreateResponse struct {
	// ID of the associated Beacon Report.
	Id string `json:"id"`
	// ID of the associated Beacon User.
	BeaconUserId string `json:"beacon_user_id"`
	// An ISO8601 formatted timestamp.
	CreatedAt time.Time `json:"created_at"`
	Type BeaconReportType `json:"type"`
	// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
	FraudDate string `json:"fraud_date"`
	FraudAmount FraudAmount `json:"fraud_amount"`
	AuditTrail BeaconAuditTrail `json:"audit_trail"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _BeaconReportCreateResponse BeaconReportCreateResponse

// NewBeaconReportCreateResponse instantiates a new BeaconReportCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconReportCreateResponse(id string, beaconUserId string, createdAt time.Time, type_ BeaconReportType, fraudDate string, fraudAmount FraudAmount, auditTrail BeaconAuditTrail, requestId string) *BeaconReportCreateResponse {
	this := BeaconReportCreateResponse{}
	this.Id = id
	this.BeaconUserId = beaconUserId
	this.CreatedAt = createdAt
	this.Type = type_
	this.FraudDate = fraudDate
	this.FraudAmount = fraudAmount
	this.AuditTrail = auditTrail
	this.RequestId = requestId
	return &this
}

// NewBeaconReportCreateResponseWithDefaults instantiates a new BeaconReportCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconReportCreateResponseWithDefaults() *BeaconReportCreateResponse {
	this := BeaconReportCreateResponse{}
	return &this
}

// GetId returns the Id field value
func (o *BeaconReportCreateResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BeaconReportCreateResponse) SetId(v string) {
	o.Id = v
}

// GetBeaconUserId returns the BeaconUserId field value
func (o *BeaconReportCreateResponse) GetBeaconUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeaconUserId
}

// GetBeaconUserIdOk returns a tuple with the BeaconUserId field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetBeaconUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BeaconUserId, true
}

// SetBeaconUserId sets field value
func (o *BeaconReportCreateResponse) SetBeaconUserId(v string) {
	o.BeaconUserId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BeaconReportCreateResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BeaconReportCreateResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetType returns the Type field value
func (o *BeaconReportCreateResponse) GetType() BeaconReportType {
	if o == nil {
		var ret BeaconReportType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetTypeOk() (*BeaconReportType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BeaconReportCreateResponse) SetType(v BeaconReportType) {
	o.Type = v
}

// GetFraudDate returns the FraudDate field value
func (o *BeaconReportCreateResponse) GetFraudDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FraudDate
}

// GetFraudDateOk returns a tuple with the FraudDate field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetFraudDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FraudDate, true
}

// SetFraudDate sets field value
func (o *BeaconReportCreateResponse) SetFraudDate(v string) {
	o.FraudDate = v
}

// GetFraudAmount returns the FraudAmount field value
func (o *BeaconReportCreateResponse) GetFraudAmount() FraudAmount {
	if o == nil {
		var ret FraudAmount
		return ret
	}

	return o.FraudAmount
}

// GetFraudAmountOk returns a tuple with the FraudAmount field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetFraudAmountOk() (*FraudAmount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FraudAmount, true
}

// SetFraudAmount sets field value
func (o *BeaconReportCreateResponse) SetFraudAmount(v FraudAmount) {
	o.FraudAmount = v
}

// GetAuditTrail returns the AuditTrail field value
func (o *BeaconReportCreateResponse) GetAuditTrail() BeaconAuditTrail {
	if o == nil {
		var ret BeaconAuditTrail
		return ret
	}

	return o.AuditTrail
}

// GetAuditTrailOk returns a tuple with the AuditTrail field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetAuditTrailOk() (*BeaconAuditTrail, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuditTrail, true
}

// SetAuditTrail sets field value
func (o *BeaconReportCreateResponse) SetAuditTrail(v BeaconAuditTrail) {
	o.AuditTrail = v
}

// GetRequestId returns the RequestId field value
func (o *BeaconReportCreateResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *BeaconReportCreateResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *BeaconReportCreateResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o BeaconReportCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["beacon_user_id"] = o.BeaconUserId
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["fraud_date"] = o.FraudDate
	}
	if true {
		toSerialize["fraud_amount"] = o.FraudAmount
	}
	if true {
		toSerialize["audit_trail"] = o.AuditTrail
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconReportCreateResponse) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconReportCreateResponse := _BeaconReportCreateResponse{}

	if err = json.Unmarshal(bytes, &varBeaconReportCreateResponse); err == nil {
		*o = BeaconReportCreateResponse(varBeaconReportCreateResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "beacon_user_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "type")
		delete(additionalProperties, "fraud_date")
		delete(additionalProperties, "fraud_amount")
		delete(additionalProperties, "audit_trail")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconReportCreateResponse struct {
	value *BeaconReportCreateResponse
	isSet bool
}

func (v NullableBeaconReportCreateResponse) Get() *BeaconReportCreateResponse {
	return v.value
}

func (v *NullableBeaconReportCreateResponse) Set(val *BeaconReportCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconReportCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconReportCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconReportCreateResponse(val *BeaconReportCreateResponse) *NullableBeaconReportCreateResponse {
	return &NullableBeaconReportCreateResponse{value: val, isSet: true}
}

func (v NullableBeaconReportCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconReportCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


