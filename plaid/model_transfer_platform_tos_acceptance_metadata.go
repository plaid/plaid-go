/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// TransferPlatformTOSAcceptanceMetadata Metadata related to the acceptance of Terms of Service
type TransferPlatformTOSAcceptanceMetadata struct {
	// Indicates whether the TOS agreement was accepted
	AgreementAccepted bool `json:"agreement_accepted"`
	// The IP address of the originator when they accepted the TOS. Formatted as an IPv4 or IPv6 IP address
	OriginatorIpAddress string `json:"originator_ip_address"`
	// ISO8601 timestamp indicating when the originator accepted the TOS
	AgreementAcceptedAt time.Time `json:"agreement_accepted_at"`
}

// NewTransferPlatformTOSAcceptanceMetadata instantiates a new TransferPlatformTOSAcceptanceMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferPlatformTOSAcceptanceMetadata(agreementAccepted bool, originatorIpAddress string, agreementAcceptedAt time.Time) *TransferPlatformTOSAcceptanceMetadata {
	this := TransferPlatformTOSAcceptanceMetadata{}
	this.AgreementAccepted = agreementAccepted
	this.OriginatorIpAddress = originatorIpAddress
	this.AgreementAcceptedAt = agreementAcceptedAt
	return &this
}

// NewTransferPlatformTOSAcceptanceMetadataWithDefaults instantiates a new TransferPlatformTOSAcceptanceMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferPlatformTOSAcceptanceMetadataWithDefaults() *TransferPlatformTOSAcceptanceMetadata {
	this := TransferPlatformTOSAcceptanceMetadata{}
	return &this
}

// GetAgreementAccepted returns the AgreementAccepted field value
func (o *TransferPlatformTOSAcceptanceMetadata) GetAgreementAccepted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AgreementAccepted
}

// GetAgreementAcceptedOk returns a tuple with the AgreementAccepted field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformTOSAcceptanceMetadata) GetAgreementAcceptedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AgreementAccepted, true
}

// SetAgreementAccepted sets field value
func (o *TransferPlatformTOSAcceptanceMetadata) SetAgreementAccepted(v bool) {
	o.AgreementAccepted = v
}

// GetOriginatorIpAddress returns the OriginatorIpAddress field value
func (o *TransferPlatformTOSAcceptanceMetadata) GetOriginatorIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatorIpAddress
}

// GetOriginatorIpAddressOk returns a tuple with the OriginatorIpAddress field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformTOSAcceptanceMetadata) GetOriginatorIpAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OriginatorIpAddress, true
}

// SetOriginatorIpAddress sets field value
func (o *TransferPlatformTOSAcceptanceMetadata) SetOriginatorIpAddress(v string) {
	o.OriginatorIpAddress = v
}

// GetAgreementAcceptedAt returns the AgreementAcceptedAt field value
func (o *TransferPlatformTOSAcceptanceMetadata) GetAgreementAcceptedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.AgreementAcceptedAt
}

// GetAgreementAcceptedAtOk returns a tuple with the AgreementAcceptedAt field value
// and a boolean to check if the value has been set.
func (o *TransferPlatformTOSAcceptanceMetadata) GetAgreementAcceptedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AgreementAcceptedAt, true
}

// SetAgreementAcceptedAt sets field value
func (o *TransferPlatformTOSAcceptanceMetadata) SetAgreementAcceptedAt(v time.Time) {
	o.AgreementAcceptedAt = v
}

func (o TransferPlatformTOSAcceptanceMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["agreement_accepted"] = o.AgreementAccepted
	}
	if true {
		toSerialize["originator_ip_address"] = o.OriginatorIpAddress
	}
	if true {
		toSerialize["agreement_accepted_at"] = o.AgreementAcceptedAt
	}
	return json.Marshal(toSerialize)
}

type NullableTransferPlatformTOSAcceptanceMetadata struct {
	value *TransferPlatformTOSAcceptanceMetadata
	isSet bool
}

func (v NullableTransferPlatformTOSAcceptanceMetadata) Get() *TransferPlatformTOSAcceptanceMetadata {
	return v.value
}

func (v *NullableTransferPlatformTOSAcceptanceMetadata) Set(val *TransferPlatformTOSAcceptanceMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferPlatformTOSAcceptanceMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferPlatformTOSAcceptanceMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferPlatformTOSAcceptanceMetadata(val *TransferPlatformTOSAcceptanceMetadata) *NullableTransferPlatformTOSAcceptanceMetadata {
	return &NullableTransferPlatformTOSAcceptanceMetadata{value: val, isSet: true}
}

func (v NullableTransferPlatformTOSAcceptanceMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferPlatformTOSAcceptanceMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


