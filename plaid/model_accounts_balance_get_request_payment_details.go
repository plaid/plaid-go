/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// AccountsBalanceGetRequestPaymentDetails To enable Balance Plus (beta), send this object as part of the `/accounts/balance/get` request. Only available to customers participating in the Balance Plus beta program; to enroll in the beta, contact your account manager. If this object is present in the request, the [`payment_risk_assessment`](https://plaid.com/docs/balance/balance-plus/#accounts-balance-get-response-payment-risk-assessment-risk-level) object will be present in the response.
type AccountsBalanceGetRequestPaymentDetails struct {
	// The Plaid `account_id` of the account that is the funding source for the proposed transaction. The `account_id` is returned in the `/accounts/get` endpoint as well as the [`onSuccess`](/docs/link/ios/#link-ios-onsuccess-linkSuccess-metadata-accounts-id) callback metadata.  This will return an [`INVALID_ACCOUNT_ID`](/docs/errors/invalid-input/#invalid_account_id) error if the account has been removed at the bank or if the `account_id` is no longer valid.
	AccountId string `json:"account_id"`
	// The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal identifier for this transaction.
	ClientTransactionId string `json:"client_transaction_id"`
	// The transaction amount, in USD (e.g. `102.05`)
	Amount float64 `json:"amount"`
	// If the `amount` multiplied by the `balance_threshold_percentage` (as a percentage) exceeds the balance in the account, then [`payment_risk_assessment.exceeds_balance_threshold`](https://plaid.com/docs/balance/balance-plus/#accounts-balance-get-response-payment-risk-assessment-exceeds-balance-threshold) in the response will be true, otherwise, it will be false. For example, if the `amount` is 200 and the `balance_threshold_percentage` is 90, then the account balance must be at least 180 for `exceeds_balance_threshold` to be false.   By default, the available balance will be used for this calculation; if it cannot be obtained, the current balance will be used.   This field is particularly useful for customers using indirect Items and who do not have direct access to raw balance data.
	BalanceThresholdPercentage *int32 `json:"balance_threshold_percentage,omitempty"`
	// A boolean that determines whether the balance has to be refreshed in real time as part of the API call when using Balance Plus. Setting this to field to `true` will result in more recent balances, but latency may be up to 30 seconds or more. If making a regular (non-Balance Plus) Balance call, without the `payment_details` object present, `/accounts/balance/get` will always return real-time balances.
	RequiresRealTimeBalanceRefresh *bool `json:"requires_real_time_balance_refresh,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountsBalanceGetRequestPaymentDetails AccountsBalanceGetRequestPaymentDetails

// NewAccountsBalanceGetRequestPaymentDetails instantiates a new AccountsBalanceGetRequestPaymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountsBalanceGetRequestPaymentDetails(accountId string, clientTransactionId string, amount float64) *AccountsBalanceGetRequestPaymentDetails {
	this := AccountsBalanceGetRequestPaymentDetails{}
	this.AccountId = accountId
	this.ClientTransactionId = clientTransactionId
	this.Amount = amount
	var balanceThresholdPercentage int32 = 90
	this.BalanceThresholdPercentage = &balanceThresholdPercentage
	var requiresRealTimeBalanceRefresh bool = false
	this.RequiresRealTimeBalanceRefresh = &requiresRealTimeBalanceRefresh
	return &this
}

// NewAccountsBalanceGetRequestPaymentDetailsWithDefaults instantiates a new AccountsBalanceGetRequestPaymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountsBalanceGetRequestPaymentDetailsWithDefaults() *AccountsBalanceGetRequestPaymentDetails {
	this := AccountsBalanceGetRequestPaymentDetails{}
	var balanceThresholdPercentage int32 = 90
	this.BalanceThresholdPercentage = &balanceThresholdPercentage
	var requiresRealTimeBalanceRefresh bool = false
	this.RequiresRealTimeBalanceRefresh = &requiresRealTimeBalanceRefresh
	return &this
}

// GetAccountId returns the AccountId field value
func (o *AccountsBalanceGetRequestPaymentDetails) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AccountsBalanceGetRequestPaymentDetails) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AccountsBalanceGetRequestPaymentDetails) SetAccountId(v string) {
	o.AccountId = v
}

// GetClientTransactionId returns the ClientTransactionId field value
func (o *AccountsBalanceGetRequestPaymentDetails) GetClientTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientTransactionId
}

// GetClientTransactionIdOk returns a tuple with the ClientTransactionId field value
// and a boolean to check if the value has been set.
func (o *AccountsBalanceGetRequestPaymentDetails) GetClientTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientTransactionId, true
}

// SetClientTransactionId sets field value
func (o *AccountsBalanceGetRequestPaymentDetails) SetClientTransactionId(v string) {
	o.ClientTransactionId = v
}

// GetAmount returns the Amount field value
func (o *AccountsBalanceGetRequestPaymentDetails) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *AccountsBalanceGetRequestPaymentDetails) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *AccountsBalanceGetRequestPaymentDetails) SetAmount(v float64) {
	o.Amount = v
}

// GetBalanceThresholdPercentage returns the BalanceThresholdPercentage field value if set, zero value otherwise.
func (o *AccountsBalanceGetRequestPaymentDetails) GetBalanceThresholdPercentage() int32 {
	if o == nil || o.BalanceThresholdPercentage == nil {
		var ret int32
		return ret
	}
	return *o.BalanceThresholdPercentage
}

// GetBalanceThresholdPercentageOk returns a tuple with the BalanceThresholdPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountsBalanceGetRequestPaymentDetails) GetBalanceThresholdPercentageOk() (*int32, bool) {
	if o == nil || o.BalanceThresholdPercentage == nil {
		return nil, false
	}
	return o.BalanceThresholdPercentage, true
}

// HasBalanceThresholdPercentage returns a boolean if a field has been set.
func (o *AccountsBalanceGetRequestPaymentDetails) HasBalanceThresholdPercentage() bool {
	if o != nil && o.BalanceThresholdPercentage != nil {
		return true
	}

	return false
}

// SetBalanceThresholdPercentage gets a reference to the given int32 and assigns it to the BalanceThresholdPercentage field.
func (o *AccountsBalanceGetRequestPaymentDetails) SetBalanceThresholdPercentage(v int32) {
	o.BalanceThresholdPercentage = &v
}

// GetRequiresRealTimeBalanceRefresh returns the RequiresRealTimeBalanceRefresh field value if set, zero value otherwise.
func (o *AccountsBalanceGetRequestPaymentDetails) GetRequiresRealTimeBalanceRefresh() bool {
	if o == nil || o.RequiresRealTimeBalanceRefresh == nil {
		var ret bool
		return ret
	}
	return *o.RequiresRealTimeBalanceRefresh
}

// GetRequiresRealTimeBalanceRefreshOk returns a tuple with the RequiresRealTimeBalanceRefresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountsBalanceGetRequestPaymentDetails) GetRequiresRealTimeBalanceRefreshOk() (*bool, bool) {
	if o == nil || o.RequiresRealTimeBalanceRefresh == nil {
		return nil, false
	}
	return o.RequiresRealTimeBalanceRefresh, true
}

// HasRequiresRealTimeBalanceRefresh returns a boolean if a field has been set.
func (o *AccountsBalanceGetRequestPaymentDetails) HasRequiresRealTimeBalanceRefresh() bool {
	if o != nil && o.RequiresRealTimeBalanceRefresh != nil {
		return true
	}

	return false
}

// SetRequiresRealTimeBalanceRefresh gets a reference to the given bool and assigns it to the RequiresRealTimeBalanceRefresh field.
func (o *AccountsBalanceGetRequestPaymentDetails) SetRequiresRealTimeBalanceRefresh(v bool) {
	o.RequiresRealTimeBalanceRefresh = &v
}

func (o AccountsBalanceGetRequestPaymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["client_transaction_id"] = o.ClientTransactionId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.BalanceThresholdPercentage != nil {
		toSerialize["balance_threshold_percentage"] = o.BalanceThresholdPercentage
	}
	if o.RequiresRealTimeBalanceRefresh != nil {
		toSerialize["requires_real_time_balance_refresh"] = o.RequiresRealTimeBalanceRefresh
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AccountsBalanceGetRequestPaymentDetails) UnmarshalJSON(bytes []byte) (err error) {
	varAccountsBalanceGetRequestPaymentDetails := _AccountsBalanceGetRequestPaymentDetails{}

	if err = json.Unmarshal(bytes, &varAccountsBalanceGetRequestPaymentDetails); err == nil {
		*o = AccountsBalanceGetRequestPaymentDetails(varAccountsBalanceGetRequestPaymentDetails)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "client_transaction_id")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "balance_threshold_percentage")
		delete(additionalProperties, "requires_real_time_balance_refresh")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountsBalanceGetRequestPaymentDetails struct {
	value *AccountsBalanceGetRequestPaymentDetails
	isSet bool
}

func (v NullableAccountsBalanceGetRequestPaymentDetails) Get() *AccountsBalanceGetRequestPaymentDetails {
	return v.value
}

func (v *NullableAccountsBalanceGetRequestPaymentDetails) Set(val *AccountsBalanceGetRequestPaymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountsBalanceGetRequestPaymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountsBalanceGetRequestPaymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountsBalanceGetRequestPaymentDetails(val *AccountsBalanceGetRequestPaymentDetails) *NullableAccountsBalanceGetRequestPaymentDetails {
	return &NullableAccountsBalanceGetRequestPaymentDetails{value: val, isSet: true}
}

func (v NullableAccountsBalanceGetRequestPaymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountsBalanceGetRequestPaymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


