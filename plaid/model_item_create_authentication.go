/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.586.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// ItemCreateAuthentication Enum representing the entity authenticating the user.
type ItemCreateAuthentication string

var _ = fmt.Printf

// List of ItemCreateAuthentication
const (
	ITEMCREATEAUTHENTICATION_UNKNOWN ItemCreateAuthentication = "UNKNOWN"
	ITEMCREATEAUTHENTICATION_DATA_PARTNER ItemCreateAuthentication = "DATA_PARTNER"
	ITEMCREATEAUTHENTICATION_PLAID ItemCreateAuthentication = "PLAID"
)

var allowedItemCreateAuthenticationEnumValues = []ItemCreateAuthentication{
	"UNKNOWN",
	"DATA_PARTNER",
	"PLAID",
}

func (v *ItemCreateAuthentication) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := ItemCreateAuthentication(value)


	*v = enumTypeValue
	return nil
}

// NewItemCreateAuthenticationFromValue returns a pointer to a valid ItemCreateAuthentication
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewItemCreateAuthenticationFromValue(v string) (*ItemCreateAuthentication, error) {
	ev := ItemCreateAuthentication(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ItemCreateAuthentication) IsValid() bool {
	for _, existing := range allowedItemCreateAuthenticationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ItemCreateAuthentication value
func (v ItemCreateAuthentication) Ptr() *ItemCreateAuthentication {
	return &v
}

type NullableItemCreateAuthentication struct {
	value *ItemCreateAuthentication
	isSet bool
}

func (v NullableItemCreateAuthentication) Get() *ItemCreateAuthentication {
	return v.value
}

func (v *NullableItemCreateAuthentication) Set(val *ItemCreateAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableItemCreateAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableItemCreateAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemCreateAuthentication(val *ItemCreateAuthentication) *NullableItemCreateAuthentication {
	return &NullableItemCreateAuthentication{value: val, isSet: true}
}

func (v NullableItemCreateAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemCreateAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

