/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// IdentityCreationResultType The outcome of the identity creation operation.
type IdentityCreationResultType string

var _ = fmt.Printf

// List of IdentityCreationResultType
const (
	IDENTITYCREATIONRESULTTYPE_SUCCEEDED IdentityCreationResultType = "SUCCEEDED"
	IDENTITYCREATIONRESULTTYPE_FAILED IdentityCreationResultType = "FAILED"
	IDENTITYCREATIONRESULTTYPE_NOT_PROVIDED IdentityCreationResultType = "NOT_PROVIDED"
)

var allowedIdentityCreationResultTypeEnumValues = []IdentityCreationResultType{
	"SUCCEEDED",
	"FAILED",
	"NOT_PROVIDED",
}

func (v *IdentityCreationResultType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := IdentityCreationResultType(value)


	*v = enumTypeValue
	return nil
}

// NewIdentityCreationResultTypeFromValue returns a pointer to a valid IdentityCreationResultType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIdentityCreationResultTypeFromValue(v string) (*IdentityCreationResultType, error) {
	ev := IdentityCreationResultType(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IdentityCreationResultType) IsValid() bool {
	for _, existing := range allowedIdentityCreationResultTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to IdentityCreationResultType value
func (v IdentityCreationResultType) Ptr() *IdentityCreationResultType {
	return &v
}

type NullableIdentityCreationResultType struct {
	value *IdentityCreationResultType
	isSet bool
}

func (v NullableIdentityCreationResultType) Get() *IdentityCreationResultType {
	return v.value
}

func (v *NullableIdentityCreationResultType) Set(val *IdentityCreationResultType) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityCreationResultType) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityCreationResultType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityCreationResultType(val *IdentityCreationResultType) *NullableIdentityCreationResultType {
	return &NullableIdentityCreationResultType{value: val, isSet: true}
}

func (v NullableIdentityCreationResultType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityCreationResultType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

