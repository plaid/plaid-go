/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// IdentityCreationResult The result of creating an identity, indicating success or failure with optional error details.
type IdentityCreationResult struct {
	Result IdentityCreationResultType `json:"result"`
	ErrorType NullablePlaidErrorType `json:"error_type,omitempty"`
	// Specific error code indicating the nature of the failure. Safe for programmatic use.
	ErrorCode NullableString `json:"error_code,omitempty"`
	// Human-readable error message providing details about the failure.
	ErrorMessage NullableString `json:"error_message,omitempty"`
}

// NewIdentityCreationResult instantiates a new IdentityCreationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityCreationResult(result IdentityCreationResultType) *IdentityCreationResult {
	this := IdentityCreationResult{}
	this.Result = result
	return &this
}

// NewIdentityCreationResultWithDefaults instantiates a new IdentityCreationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityCreationResultWithDefaults() *IdentityCreationResult {
	this := IdentityCreationResult{}
	return &this
}

// GetResult returns the Result field value
func (o *IdentityCreationResult) GetResult() IdentityCreationResultType {
	if o == nil {
		var ret IdentityCreationResultType
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *IdentityCreationResult) GetResultOk() (*IdentityCreationResultType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *IdentityCreationResult) SetResult(v IdentityCreationResultType) {
	o.Result = v
}

// GetErrorType returns the ErrorType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityCreationResult) GetErrorType() PlaidErrorType {
	if o == nil || o.ErrorType.Get() == nil {
		var ret PlaidErrorType
		return ret
	}
	return *o.ErrorType.Get()
}

// GetErrorTypeOk returns a tuple with the ErrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityCreationResult) GetErrorTypeOk() (*PlaidErrorType, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorType.Get(), o.ErrorType.IsSet()
}

// HasErrorType returns a boolean if a field has been set.
func (o *IdentityCreationResult) HasErrorType() bool {
	if o != nil && o.ErrorType.IsSet() {
		return true
	}

	return false
}

// SetErrorType gets a reference to the given NullablePlaidErrorType and assigns it to the ErrorType field.
func (o *IdentityCreationResult) SetErrorType(v PlaidErrorType) {
	o.ErrorType.Set(&v)
}
// SetErrorTypeNil sets the value for ErrorType to be an explicit nil
func (o *IdentityCreationResult) SetErrorTypeNil() {
	o.ErrorType.Set(nil)
}

// UnsetErrorType ensures that no value is present for ErrorType, not even an explicit nil
func (o *IdentityCreationResult) UnsetErrorType() {
	o.ErrorType.Unset()
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityCreationResult) GetErrorCode() string {
	if o == nil || o.ErrorCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode.Get()
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityCreationResult) GetErrorCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorCode.Get(), o.ErrorCode.IsSet()
}

// HasErrorCode returns a boolean if a field has been set.
func (o *IdentityCreationResult) HasErrorCode() bool {
	if o != nil && o.ErrorCode.IsSet() {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given NullableString and assigns it to the ErrorCode field.
func (o *IdentityCreationResult) SetErrorCode(v string) {
	o.ErrorCode.Set(&v)
}
// SetErrorCodeNil sets the value for ErrorCode to be an explicit nil
func (o *IdentityCreationResult) SetErrorCodeNil() {
	o.ErrorCode.Set(nil)
}

// UnsetErrorCode ensures that no value is present for ErrorCode, not even an explicit nil
func (o *IdentityCreationResult) UnsetErrorCode() {
	o.ErrorCode.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityCreationResult) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityCreationResult) GetErrorMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *IdentityCreationResult) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *IdentityCreationResult) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *IdentityCreationResult) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *IdentityCreationResult) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

func (o IdentityCreationResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["result"] = o.Result
	}
	if o.ErrorType.IsSet() {
		toSerialize["error_type"] = o.ErrorType.Get()
	}
	if o.ErrorCode.IsSet() {
		toSerialize["error_code"] = o.ErrorCode.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["error_message"] = o.ErrorMessage.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityCreationResult struct {
	value *IdentityCreationResult
	isSet bool
}

func (v NullableIdentityCreationResult) Get() *IdentityCreationResult {
	return v.value
}

func (v *NullableIdentityCreationResult) Set(val *IdentityCreationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityCreationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityCreationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityCreationResult(val *IdentityCreationResult) *NullableIdentityCreationResult {
	return &NullableIdentityCreationResult{value: val, isSet: true}
}

func (v NullableIdentityCreationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityCreationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


