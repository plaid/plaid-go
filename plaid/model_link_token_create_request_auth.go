/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.575.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// LinkTokenCreateRequestAuth Specifies options for initializing Link for use with the Auth product. This field can be used to enable or disable extended Auth flows for the resulting Link session. Omitting any field will result in a default that can be configured by your account manager. The default behavior described in the documentation is the default behavior that will apply if you have not requested your account manager to apply a different default.
type LinkTokenCreateRequestAuth struct {
	// Specifies whether Auth Type Select is enabled for the Link session, allowing the end user to choose between linking via a credentials-based flow (i.e. Instant Auth, Instant Match, Automated Micro-deposits) or a manual flow that does not require login (all other Auth flows) prior to selecting their financial institution. Default behavior is `false`.
	AuthTypeSelectEnabled *bool `json:"auth_type_select_enabled,omitempty"`
	// Specifies whether the Link session is enabled for the Automated Micro-deposits flow. Default behavior is `false`.
	AutomatedMicrodepositsEnabled *bool `json:"automated_microdeposits_enabled,omitempty"`
	// Specifies whether the Link session is enabled for the Instant Match flow. Instant Match is enabled by default. Instant Match can be disabled by setting this field to `false`.
	InstantMatchEnabled *bool `json:"instant_match_enabled,omitempty"`
	// Specifies whether the Link session is enabled for the Same Day Micro-deposits flow.  Default behavior is `false`.
	SameDayMicrodepositsEnabled *bool `json:"same_day_microdeposits_enabled,omitempty"`
	// Specifies whether the Link session is enabled for the Instant Micro-deposits flow.  Default behavior for Plaid teams created after November 2023 is `false`; default behavior for Plaid teams created before that date is `true`.
	InstantMicrodepositsEnabled *bool `json:"instant_microdeposits_enabled,omitempty"`
	// Specifies what type of [Reroute to Credentials](https://plaid.com/docs/auth/coverage/same-day/#reroute-to-credentials) pane should be used in the Link session for the Same Day Micro-deposits flow. Default behavior is `OPTIONAL`.
	RerouteToCredentials *string `json:"reroute_to_credentials,omitempty"`
	// Specifies whether the Link session is enabled for the Database Match flow. Default behavior is `false`.
	DatabaseMatchEnabled *bool `json:"database_match_enabled,omitempty"`
	// Specifies whether the Link session is enabled for the Database Insights flow. Database Insights is currently in closed beta; for access, contact your Account Manager. Default behavior is `false`.
	DatabaseInsightsEnabled *bool `json:"database_insights_enabled,omitempty"`
	// This field has been deprecated in favor of `auth_type_select_enabled`.
	FlowType *string `json:"flow_type,omitempty"`
	// Specifies whether the Link session is enabled for SMS micro-deposits verification. Default behavior is `true`.
	SmsMicrodepositsVerificationEnabled *bool `json:"sms_microdeposits_verification_enabled,omitempty"`
}

// NewLinkTokenCreateRequestAuth instantiates a new LinkTokenCreateRequestAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkTokenCreateRequestAuth() *LinkTokenCreateRequestAuth {
	this := LinkTokenCreateRequestAuth{}
	return &this
}

// NewLinkTokenCreateRequestAuthWithDefaults instantiates a new LinkTokenCreateRequestAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkTokenCreateRequestAuthWithDefaults() *LinkTokenCreateRequestAuth {
	this := LinkTokenCreateRequestAuth{}
	return &this
}

// GetAuthTypeSelectEnabled returns the AuthTypeSelectEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetAuthTypeSelectEnabled() bool {
	if o == nil || o.AuthTypeSelectEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AuthTypeSelectEnabled
}

// GetAuthTypeSelectEnabledOk returns a tuple with the AuthTypeSelectEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetAuthTypeSelectEnabledOk() (*bool, bool) {
	if o == nil || o.AuthTypeSelectEnabled == nil {
		return nil, false
	}
	return o.AuthTypeSelectEnabled, true
}

// HasAuthTypeSelectEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasAuthTypeSelectEnabled() bool {
	if o != nil && o.AuthTypeSelectEnabled != nil {
		return true
	}

	return false
}

// SetAuthTypeSelectEnabled gets a reference to the given bool and assigns it to the AuthTypeSelectEnabled field.
func (o *LinkTokenCreateRequestAuth) SetAuthTypeSelectEnabled(v bool) {
	o.AuthTypeSelectEnabled = &v
}

// GetAutomatedMicrodepositsEnabled returns the AutomatedMicrodepositsEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetAutomatedMicrodepositsEnabled() bool {
	if o == nil || o.AutomatedMicrodepositsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AutomatedMicrodepositsEnabled
}

// GetAutomatedMicrodepositsEnabledOk returns a tuple with the AutomatedMicrodepositsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetAutomatedMicrodepositsEnabledOk() (*bool, bool) {
	if o == nil || o.AutomatedMicrodepositsEnabled == nil {
		return nil, false
	}
	return o.AutomatedMicrodepositsEnabled, true
}

// HasAutomatedMicrodepositsEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasAutomatedMicrodepositsEnabled() bool {
	if o != nil && o.AutomatedMicrodepositsEnabled != nil {
		return true
	}

	return false
}

// SetAutomatedMicrodepositsEnabled gets a reference to the given bool and assigns it to the AutomatedMicrodepositsEnabled field.
func (o *LinkTokenCreateRequestAuth) SetAutomatedMicrodepositsEnabled(v bool) {
	o.AutomatedMicrodepositsEnabled = &v
}

// GetInstantMatchEnabled returns the InstantMatchEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetInstantMatchEnabled() bool {
	if o == nil || o.InstantMatchEnabled == nil {
		var ret bool
		return ret
	}
	return *o.InstantMatchEnabled
}

// GetInstantMatchEnabledOk returns a tuple with the InstantMatchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetInstantMatchEnabledOk() (*bool, bool) {
	if o == nil || o.InstantMatchEnabled == nil {
		return nil, false
	}
	return o.InstantMatchEnabled, true
}

// HasInstantMatchEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasInstantMatchEnabled() bool {
	if o != nil && o.InstantMatchEnabled != nil {
		return true
	}

	return false
}

// SetInstantMatchEnabled gets a reference to the given bool and assigns it to the InstantMatchEnabled field.
func (o *LinkTokenCreateRequestAuth) SetInstantMatchEnabled(v bool) {
	o.InstantMatchEnabled = &v
}

// GetSameDayMicrodepositsEnabled returns the SameDayMicrodepositsEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetSameDayMicrodepositsEnabled() bool {
	if o == nil || o.SameDayMicrodepositsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SameDayMicrodepositsEnabled
}

// GetSameDayMicrodepositsEnabledOk returns a tuple with the SameDayMicrodepositsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetSameDayMicrodepositsEnabledOk() (*bool, bool) {
	if o == nil || o.SameDayMicrodepositsEnabled == nil {
		return nil, false
	}
	return o.SameDayMicrodepositsEnabled, true
}

// HasSameDayMicrodepositsEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasSameDayMicrodepositsEnabled() bool {
	if o != nil && o.SameDayMicrodepositsEnabled != nil {
		return true
	}

	return false
}

// SetSameDayMicrodepositsEnabled gets a reference to the given bool and assigns it to the SameDayMicrodepositsEnabled field.
func (o *LinkTokenCreateRequestAuth) SetSameDayMicrodepositsEnabled(v bool) {
	o.SameDayMicrodepositsEnabled = &v
}

// GetInstantMicrodepositsEnabled returns the InstantMicrodepositsEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetInstantMicrodepositsEnabled() bool {
	if o == nil || o.InstantMicrodepositsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.InstantMicrodepositsEnabled
}

// GetInstantMicrodepositsEnabledOk returns a tuple with the InstantMicrodepositsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetInstantMicrodepositsEnabledOk() (*bool, bool) {
	if o == nil || o.InstantMicrodepositsEnabled == nil {
		return nil, false
	}
	return o.InstantMicrodepositsEnabled, true
}

// HasInstantMicrodepositsEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasInstantMicrodepositsEnabled() bool {
	if o != nil && o.InstantMicrodepositsEnabled != nil {
		return true
	}

	return false
}

// SetInstantMicrodepositsEnabled gets a reference to the given bool and assigns it to the InstantMicrodepositsEnabled field.
func (o *LinkTokenCreateRequestAuth) SetInstantMicrodepositsEnabled(v bool) {
	o.InstantMicrodepositsEnabled = &v
}

// GetRerouteToCredentials returns the RerouteToCredentials field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetRerouteToCredentials() string {
	if o == nil || o.RerouteToCredentials == nil {
		var ret string
		return ret
	}
	return *o.RerouteToCredentials
}

// GetRerouteToCredentialsOk returns a tuple with the RerouteToCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetRerouteToCredentialsOk() (*string, bool) {
	if o == nil || o.RerouteToCredentials == nil {
		return nil, false
	}
	return o.RerouteToCredentials, true
}

// HasRerouteToCredentials returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasRerouteToCredentials() bool {
	if o != nil && o.RerouteToCredentials != nil {
		return true
	}

	return false
}

// SetRerouteToCredentials gets a reference to the given string and assigns it to the RerouteToCredentials field.
func (o *LinkTokenCreateRequestAuth) SetRerouteToCredentials(v string) {
	o.RerouteToCredentials = &v
}

// GetDatabaseMatchEnabled returns the DatabaseMatchEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetDatabaseMatchEnabled() bool {
	if o == nil || o.DatabaseMatchEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DatabaseMatchEnabled
}

// GetDatabaseMatchEnabledOk returns a tuple with the DatabaseMatchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetDatabaseMatchEnabledOk() (*bool, bool) {
	if o == nil || o.DatabaseMatchEnabled == nil {
		return nil, false
	}
	return o.DatabaseMatchEnabled, true
}

// HasDatabaseMatchEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasDatabaseMatchEnabled() bool {
	if o != nil && o.DatabaseMatchEnabled != nil {
		return true
	}

	return false
}

// SetDatabaseMatchEnabled gets a reference to the given bool and assigns it to the DatabaseMatchEnabled field.
func (o *LinkTokenCreateRequestAuth) SetDatabaseMatchEnabled(v bool) {
	o.DatabaseMatchEnabled = &v
}

// GetDatabaseInsightsEnabled returns the DatabaseInsightsEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetDatabaseInsightsEnabled() bool {
	if o == nil || o.DatabaseInsightsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DatabaseInsightsEnabled
}

// GetDatabaseInsightsEnabledOk returns a tuple with the DatabaseInsightsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetDatabaseInsightsEnabledOk() (*bool, bool) {
	if o == nil || o.DatabaseInsightsEnabled == nil {
		return nil, false
	}
	return o.DatabaseInsightsEnabled, true
}

// HasDatabaseInsightsEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasDatabaseInsightsEnabled() bool {
	if o != nil && o.DatabaseInsightsEnabled != nil {
		return true
	}

	return false
}

// SetDatabaseInsightsEnabled gets a reference to the given bool and assigns it to the DatabaseInsightsEnabled field.
func (o *LinkTokenCreateRequestAuth) SetDatabaseInsightsEnabled(v bool) {
	o.DatabaseInsightsEnabled = &v
}

// GetFlowType returns the FlowType field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetFlowType() string {
	if o == nil || o.FlowType == nil {
		var ret string
		return ret
	}
	return *o.FlowType
}

// GetFlowTypeOk returns a tuple with the FlowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetFlowTypeOk() (*string, bool) {
	if o == nil || o.FlowType == nil {
		return nil, false
	}
	return o.FlowType, true
}

// HasFlowType returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasFlowType() bool {
	if o != nil && o.FlowType != nil {
		return true
	}

	return false
}

// SetFlowType gets a reference to the given string and assigns it to the FlowType field.
func (o *LinkTokenCreateRequestAuth) SetFlowType(v string) {
	o.FlowType = &v
}

// GetSmsMicrodepositsVerificationEnabled returns the SmsMicrodepositsVerificationEnabled field value if set, zero value otherwise.
func (o *LinkTokenCreateRequestAuth) GetSmsMicrodepositsVerificationEnabled() bool {
	if o == nil || o.SmsMicrodepositsVerificationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SmsMicrodepositsVerificationEnabled
}

// GetSmsMicrodepositsVerificationEnabledOk returns a tuple with the SmsMicrodepositsVerificationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkTokenCreateRequestAuth) GetSmsMicrodepositsVerificationEnabledOk() (*bool, bool) {
	if o == nil || o.SmsMicrodepositsVerificationEnabled == nil {
		return nil, false
	}
	return o.SmsMicrodepositsVerificationEnabled, true
}

// HasSmsMicrodepositsVerificationEnabled returns a boolean if a field has been set.
func (o *LinkTokenCreateRequestAuth) HasSmsMicrodepositsVerificationEnabled() bool {
	if o != nil && o.SmsMicrodepositsVerificationEnabled != nil {
		return true
	}

	return false
}

// SetSmsMicrodepositsVerificationEnabled gets a reference to the given bool and assigns it to the SmsMicrodepositsVerificationEnabled field.
func (o *LinkTokenCreateRequestAuth) SetSmsMicrodepositsVerificationEnabled(v bool) {
	o.SmsMicrodepositsVerificationEnabled = &v
}

func (o LinkTokenCreateRequestAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthTypeSelectEnabled != nil {
		toSerialize["auth_type_select_enabled"] = o.AuthTypeSelectEnabled
	}
	if o.AutomatedMicrodepositsEnabled != nil {
		toSerialize["automated_microdeposits_enabled"] = o.AutomatedMicrodepositsEnabled
	}
	if o.InstantMatchEnabled != nil {
		toSerialize["instant_match_enabled"] = o.InstantMatchEnabled
	}
	if o.SameDayMicrodepositsEnabled != nil {
		toSerialize["same_day_microdeposits_enabled"] = o.SameDayMicrodepositsEnabled
	}
	if o.InstantMicrodepositsEnabled != nil {
		toSerialize["instant_microdeposits_enabled"] = o.InstantMicrodepositsEnabled
	}
	if o.RerouteToCredentials != nil {
		toSerialize["reroute_to_credentials"] = o.RerouteToCredentials
	}
	if o.DatabaseMatchEnabled != nil {
		toSerialize["database_match_enabled"] = o.DatabaseMatchEnabled
	}
	if o.DatabaseInsightsEnabled != nil {
		toSerialize["database_insights_enabled"] = o.DatabaseInsightsEnabled
	}
	if o.FlowType != nil {
		toSerialize["flow_type"] = o.FlowType
	}
	if o.SmsMicrodepositsVerificationEnabled != nil {
		toSerialize["sms_microdeposits_verification_enabled"] = o.SmsMicrodepositsVerificationEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableLinkTokenCreateRequestAuth struct {
	value *LinkTokenCreateRequestAuth
	isSet bool
}

func (v NullableLinkTokenCreateRequestAuth) Get() *LinkTokenCreateRequestAuth {
	return v.value
}

func (v *NullableLinkTokenCreateRequestAuth) Set(val *LinkTokenCreateRequestAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkTokenCreateRequestAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkTokenCreateRequestAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkTokenCreateRequestAuth(val *LinkTokenCreateRequestAuth) *NullableLinkTokenCreateRequestAuth {
	return &NullableLinkTokenCreateRequestAuth{value: val, isSet: true}
}

func (v NullableLinkTokenCreateRequestAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkTokenCreateRequestAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


