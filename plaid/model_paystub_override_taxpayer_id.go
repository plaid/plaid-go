/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.534.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PaystubOverrideTaxpayerID Taxpayer ID of the individual receiving the paystub.
type PaystubOverrideTaxpayerID struct {
	// Type of ID, e.g. 'SSN'
	IdType NullableString `json:"id_type,omitempty"`
	// ID mask; i.e. last 4 digits of the taxpayer ID
	IdMask NullableString `json:"id_mask,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaystubOverrideTaxpayerID PaystubOverrideTaxpayerID

// NewPaystubOverrideTaxpayerID instantiates a new PaystubOverrideTaxpayerID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaystubOverrideTaxpayerID() *PaystubOverrideTaxpayerID {
	this := PaystubOverrideTaxpayerID{}
	return &this
}

// NewPaystubOverrideTaxpayerIDWithDefaults instantiates a new PaystubOverrideTaxpayerID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaystubOverrideTaxpayerIDWithDefaults() *PaystubOverrideTaxpayerID {
	this := PaystubOverrideTaxpayerID{}
	return &this
}

// GetIdType returns the IdType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaystubOverrideTaxpayerID) GetIdType() string {
	if o == nil || o.IdType.Get() == nil {
		var ret string
		return ret
	}
	return *o.IdType.Get()
}

// GetIdTypeOk returns a tuple with the IdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaystubOverrideTaxpayerID) GetIdTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IdType.Get(), o.IdType.IsSet()
}

// HasIdType returns a boolean if a field has been set.
func (o *PaystubOverrideTaxpayerID) HasIdType() bool {
	if o != nil && o.IdType.IsSet() {
		return true
	}

	return false
}

// SetIdType gets a reference to the given NullableString and assigns it to the IdType field.
func (o *PaystubOverrideTaxpayerID) SetIdType(v string) {
	o.IdType.Set(&v)
}
// SetIdTypeNil sets the value for IdType to be an explicit nil
func (o *PaystubOverrideTaxpayerID) SetIdTypeNil() {
	o.IdType.Set(nil)
}

// UnsetIdType ensures that no value is present for IdType, not even an explicit nil
func (o *PaystubOverrideTaxpayerID) UnsetIdType() {
	o.IdType.Unset()
}

// GetIdMask returns the IdMask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaystubOverrideTaxpayerID) GetIdMask() string {
	if o == nil || o.IdMask.Get() == nil {
		var ret string
		return ret
	}
	return *o.IdMask.Get()
}

// GetIdMaskOk returns a tuple with the IdMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaystubOverrideTaxpayerID) GetIdMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IdMask.Get(), o.IdMask.IsSet()
}

// HasIdMask returns a boolean if a field has been set.
func (o *PaystubOverrideTaxpayerID) HasIdMask() bool {
	if o != nil && o.IdMask.IsSet() {
		return true
	}

	return false
}

// SetIdMask gets a reference to the given NullableString and assigns it to the IdMask field.
func (o *PaystubOverrideTaxpayerID) SetIdMask(v string) {
	o.IdMask.Set(&v)
}
// SetIdMaskNil sets the value for IdMask to be an explicit nil
func (o *PaystubOverrideTaxpayerID) SetIdMaskNil() {
	o.IdMask.Set(nil)
}

// UnsetIdMask ensures that no value is present for IdMask, not even an explicit nil
func (o *PaystubOverrideTaxpayerID) UnsetIdMask() {
	o.IdMask.Unset()
}

func (o PaystubOverrideTaxpayerID) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IdType.IsSet() {
		toSerialize["id_type"] = o.IdType.Get()
	}
	if o.IdMask.IsSet() {
		toSerialize["id_mask"] = o.IdMask.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PaystubOverrideTaxpayerID) UnmarshalJSON(bytes []byte) (err error) {
	varPaystubOverrideTaxpayerID := _PaystubOverrideTaxpayerID{}

	if err = json.Unmarshal(bytes, &varPaystubOverrideTaxpayerID); err == nil {
		*o = PaystubOverrideTaxpayerID(varPaystubOverrideTaxpayerID)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id_type")
		delete(additionalProperties, "id_mask")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaystubOverrideTaxpayerID struct {
	value *PaystubOverrideTaxpayerID
	isSet bool
}

func (v NullablePaystubOverrideTaxpayerID) Get() *PaystubOverrideTaxpayerID {
	return v.value
}

func (v *NullablePaystubOverrideTaxpayerID) Set(val *PaystubOverrideTaxpayerID) {
	v.value = val
	v.isSet = true
}

func (v NullablePaystubOverrideTaxpayerID) IsSet() bool {
	return v.isSet
}

func (v *NullablePaystubOverrideTaxpayerID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaystubOverrideTaxpayerID(val *PaystubOverrideTaxpayerID) *NullablePaystubOverrideTaxpayerID {
	return &NullablePaystubOverrideTaxpayerID{value: val, isSet: true}
}

func (v NullablePaystubOverrideTaxpayerID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaystubOverrideTaxpayerID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


