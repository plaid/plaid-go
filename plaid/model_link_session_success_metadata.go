/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// LinkSessionSuccessMetadata Displayed once a user has successfully linked their Item.
type LinkSessionSuccessMetadata struct {
	Institution NullableLinkSessionSuccessMetadataInstitution `json:"institution,omitempty"`
	// A list of accounts attached to the connected Item. If Account Select is enabled via the developer dashboard, `accounts` will only include selected accounts.
	Accounts *[]LinkSessionSuccessMetadataAccount `json:"accounts,omitempty"`
	// A unique identifier associated with a user's actions and events through the Link flow. Include this identifier when opening a support ticket for faster turnaround.
	LinkSessionId *string `json:"link_session_id,omitempty"`
	TransferStatus NullableLinkSessionSuccessMetadataTransferStatus `json:"transfer_status,omitempty"`
}

// NewLinkSessionSuccessMetadata instantiates a new LinkSessionSuccessMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkSessionSuccessMetadata() *LinkSessionSuccessMetadata {
	this := LinkSessionSuccessMetadata{}
	return &this
}

// NewLinkSessionSuccessMetadataWithDefaults instantiates a new LinkSessionSuccessMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkSessionSuccessMetadataWithDefaults() *LinkSessionSuccessMetadata {
	this := LinkSessionSuccessMetadata{}
	return &this
}

// GetInstitution returns the Institution field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkSessionSuccessMetadata) GetInstitution() LinkSessionSuccessMetadataInstitution {
	if o == nil || o.Institution.Get() == nil {
		var ret LinkSessionSuccessMetadataInstitution
		return ret
	}
	return *o.Institution.Get()
}

// GetInstitutionOk returns a tuple with the Institution field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkSessionSuccessMetadata) GetInstitutionOk() (*LinkSessionSuccessMetadataInstitution, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Institution.Get(), o.Institution.IsSet()
}

// HasInstitution returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadata) HasInstitution() bool {
	if o != nil && o.Institution.IsSet() {
		return true
	}

	return false
}

// SetInstitution gets a reference to the given NullableLinkSessionSuccessMetadataInstitution and assigns it to the Institution field.
func (o *LinkSessionSuccessMetadata) SetInstitution(v LinkSessionSuccessMetadataInstitution) {
	o.Institution.Set(&v)
}
// SetInstitutionNil sets the value for Institution to be an explicit nil
func (o *LinkSessionSuccessMetadata) SetInstitutionNil() {
	o.Institution.Set(nil)
}

// UnsetInstitution ensures that no value is present for Institution, not even an explicit nil
func (o *LinkSessionSuccessMetadata) UnsetInstitution() {
	o.Institution.Unset()
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *LinkSessionSuccessMetadata) GetAccounts() []LinkSessionSuccessMetadataAccount {
	if o == nil || o.Accounts == nil {
		var ret []LinkSessionSuccessMetadataAccount
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSessionSuccessMetadata) GetAccountsOk() (*[]LinkSessionSuccessMetadataAccount, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadata) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []LinkSessionSuccessMetadataAccount and assigns it to the Accounts field.
func (o *LinkSessionSuccessMetadata) SetAccounts(v []LinkSessionSuccessMetadataAccount) {
	o.Accounts = &v
}

// GetLinkSessionId returns the LinkSessionId field value if set, zero value otherwise.
func (o *LinkSessionSuccessMetadata) GetLinkSessionId() string {
	if o == nil || o.LinkSessionId == nil {
		var ret string
		return ret
	}
	return *o.LinkSessionId
}

// GetLinkSessionIdOk returns a tuple with the LinkSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSessionSuccessMetadata) GetLinkSessionIdOk() (*string, bool) {
	if o == nil || o.LinkSessionId == nil {
		return nil, false
	}
	return o.LinkSessionId, true
}

// HasLinkSessionId returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadata) HasLinkSessionId() bool {
	if o != nil && o.LinkSessionId != nil {
		return true
	}

	return false
}

// SetLinkSessionId gets a reference to the given string and assigns it to the LinkSessionId field.
func (o *LinkSessionSuccessMetadata) SetLinkSessionId(v string) {
	o.LinkSessionId = &v
}

// GetTransferStatus returns the TransferStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkSessionSuccessMetadata) GetTransferStatus() LinkSessionSuccessMetadataTransferStatus {
	if o == nil || o.TransferStatus.Get() == nil {
		var ret LinkSessionSuccessMetadataTransferStatus
		return ret
	}
	return *o.TransferStatus.Get()
}

// GetTransferStatusOk returns a tuple with the TransferStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkSessionSuccessMetadata) GetTransferStatusOk() (*LinkSessionSuccessMetadataTransferStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TransferStatus.Get(), o.TransferStatus.IsSet()
}

// HasTransferStatus returns a boolean if a field has been set.
func (o *LinkSessionSuccessMetadata) HasTransferStatus() bool {
	if o != nil && o.TransferStatus.IsSet() {
		return true
	}

	return false
}

// SetTransferStatus gets a reference to the given NullableLinkSessionSuccessMetadataTransferStatus and assigns it to the TransferStatus field.
func (o *LinkSessionSuccessMetadata) SetTransferStatus(v LinkSessionSuccessMetadataTransferStatus) {
	o.TransferStatus.Set(&v)
}
// SetTransferStatusNil sets the value for TransferStatus to be an explicit nil
func (o *LinkSessionSuccessMetadata) SetTransferStatusNil() {
	o.TransferStatus.Set(nil)
}

// UnsetTransferStatus ensures that no value is present for TransferStatus, not even an explicit nil
func (o *LinkSessionSuccessMetadata) UnsetTransferStatus() {
	o.TransferStatus.Unset()
}

func (o LinkSessionSuccessMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Institution.IsSet() {
		toSerialize["institution"] = o.Institution.Get()
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.LinkSessionId != nil {
		toSerialize["link_session_id"] = o.LinkSessionId
	}
	if o.TransferStatus.IsSet() {
		toSerialize["transfer_status"] = o.TransferStatus.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLinkSessionSuccessMetadata struct {
	value *LinkSessionSuccessMetadata
	isSet bool
}

func (v NullableLinkSessionSuccessMetadata) Get() *LinkSessionSuccessMetadata {
	return v.value
}

func (v *NullableLinkSessionSuccessMetadata) Set(val *LinkSessionSuccessMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkSessionSuccessMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkSessionSuccessMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkSessionSuccessMetadata(val *LinkSessionSuccessMetadata) *NullableLinkSessionSuccessMetadata {
	return &NullableLinkSessionSuccessMetadata{value: val, isSet: true}
}

func (v NullableLinkSessionSuccessMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkSessionSuccessMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


