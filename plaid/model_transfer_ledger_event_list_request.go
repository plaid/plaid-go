/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.664.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// TransferLedgerEventListRequest Defines the request schema for `/transfer/ledger/event/list`
type TransferLedgerEventListRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Filter transfer events to only those with the specified originator client. (This field is specifically for resellers. Caller's client ID will be used if this field is not specified.)
	OriginatorClientId NullableString `json:"originator_client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The start created datetime of transfers to list. This should be in RFC 3339 format (i.e. 2019-12-06T22:35:49Z)
	StartDate NullableTime `json:"start_date,omitempty"`
	// The end created datetime of transfers to list. This should be in RFC 3339 format (i.e. 2019-12-06T22:35:49Z)
	EndDate NullableTime `json:"end_date,omitempty"`
	// Plaid's unique identifier for a Plaid Ledger Balance.
	LedgerId NullableString `json:"ledger_id,omitempty"`
	// Plaid's unique identifier for the ledger event.
	LedgerEventId NullableString `json:"ledger_event_id,omitempty"`
	SourceType NullableLedgerEventSourceType `json:"source_type,omitempty"`
	// Plaid's unique identifier for a transfer, sweep, or refund.
	SourceId NullableString `json:"source_id,omitempty"`
	// The maximum number of transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
	Count NullableInt32 `json:"count,omitempty"`
	// The offset into the list of transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 events will be returned.
	Offset NullableInt32 `json:"offset,omitempty"`
}

// NewTransferLedgerEventListRequest instantiates a new TransferLedgerEventListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferLedgerEventListRequest() *TransferLedgerEventListRequest {
	this := TransferLedgerEventListRequest{}
	var count int32 = 25
	this.Count = *NewNullableInt32(&count)
	var offset int32 = 0
	this.Offset = *NewNullableInt32(&offset)
	return &this
}

// NewTransferLedgerEventListRequestWithDefaults instantiates a new TransferLedgerEventListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferLedgerEventListRequestWithDefaults() *TransferLedgerEventListRequest {
	this := TransferLedgerEventListRequest{}
	var count int32 = 25
	this.Count = *NewNullableInt32(&count)
	var offset int32 = 0
	this.Offset = *NewNullableInt32(&offset)
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *TransferLedgerEventListRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferLedgerEventListRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *TransferLedgerEventListRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetOriginatorClientId returns the OriginatorClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetOriginatorClientId() string {
	if o == nil || o.OriginatorClientId.Get() == nil {
		var ret string
		return ret
	}
	return *o.OriginatorClientId.Get()
}

// GetOriginatorClientIdOk returns a tuple with the OriginatorClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetOriginatorClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OriginatorClientId.Get(), o.OriginatorClientId.IsSet()
}

// HasOriginatorClientId returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasOriginatorClientId() bool {
	if o != nil && o.OriginatorClientId.IsSet() {
		return true
	}

	return false
}

// SetOriginatorClientId gets a reference to the given NullableString and assigns it to the OriginatorClientId field.
func (o *TransferLedgerEventListRequest) SetOriginatorClientId(v string) {
	o.OriginatorClientId.Set(&v)
}
// SetOriginatorClientIdNil sets the value for OriginatorClientId to be an explicit nil
func (o *TransferLedgerEventListRequest) SetOriginatorClientIdNil() {
	o.OriginatorClientId.Set(nil)
}

// UnsetOriginatorClientId ensures that no value is present for OriginatorClientId, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetOriginatorClientId() {
	o.OriginatorClientId.Unset()
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *TransferLedgerEventListRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferLedgerEventListRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *TransferLedgerEventListRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetStartDate() time.Time {
	if o == nil || o.StartDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetStartDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableTime and assigns it to the StartDate field.
func (o *TransferLedgerEventListRequest) SetStartDate(v time.Time) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *TransferLedgerEventListRequest) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetEndDate() time.Time {
	if o == nil || o.EndDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetEndDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *TransferLedgerEventListRequest) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *TransferLedgerEventListRequest) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetLedgerId returns the LedgerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetLedgerId() string {
	if o == nil || o.LedgerId.Get() == nil {
		var ret string
		return ret
	}
	return *o.LedgerId.Get()
}

// GetLedgerIdOk returns a tuple with the LedgerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetLedgerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LedgerId.Get(), o.LedgerId.IsSet()
}

// HasLedgerId returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasLedgerId() bool {
	if o != nil && o.LedgerId.IsSet() {
		return true
	}

	return false
}

// SetLedgerId gets a reference to the given NullableString and assigns it to the LedgerId field.
func (o *TransferLedgerEventListRequest) SetLedgerId(v string) {
	o.LedgerId.Set(&v)
}
// SetLedgerIdNil sets the value for LedgerId to be an explicit nil
func (o *TransferLedgerEventListRequest) SetLedgerIdNil() {
	o.LedgerId.Set(nil)
}

// UnsetLedgerId ensures that no value is present for LedgerId, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetLedgerId() {
	o.LedgerId.Unset()
}

// GetLedgerEventId returns the LedgerEventId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetLedgerEventId() string {
	if o == nil || o.LedgerEventId.Get() == nil {
		var ret string
		return ret
	}
	return *o.LedgerEventId.Get()
}

// GetLedgerEventIdOk returns a tuple with the LedgerEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetLedgerEventIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LedgerEventId.Get(), o.LedgerEventId.IsSet()
}

// HasLedgerEventId returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasLedgerEventId() bool {
	if o != nil && o.LedgerEventId.IsSet() {
		return true
	}

	return false
}

// SetLedgerEventId gets a reference to the given NullableString and assigns it to the LedgerEventId field.
func (o *TransferLedgerEventListRequest) SetLedgerEventId(v string) {
	o.LedgerEventId.Set(&v)
}
// SetLedgerEventIdNil sets the value for LedgerEventId to be an explicit nil
func (o *TransferLedgerEventListRequest) SetLedgerEventIdNil() {
	o.LedgerEventId.Set(nil)
}

// UnsetLedgerEventId ensures that no value is present for LedgerEventId, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetLedgerEventId() {
	o.LedgerEventId.Unset()
}

// GetSourceType returns the SourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetSourceType() LedgerEventSourceType {
	if o == nil || o.SourceType.Get() == nil {
		var ret LedgerEventSourceType
		return ret
	}
	return *o.SourceType.Get()
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetSourceTypeOk() (*LedgerEventSourceType, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceType.Get(), o.SourceType.IsSet()
}

// HasSourceType returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasSourceType() bool {
	if o != nil && o.SourceType.IsSet() {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given NullableLedgerEventSourceType and assigns it to the SourceType field.
func (o *TransferLedgerEventListRequest) SetSourceType(v LedgerEventSourceType) {
	o.SourceType.Set(&v)
}
// SetSourceTypeNil sets the value for SourceType to be an explicit nil
func (o *TransferLedgerEventListRequest) SetSourceTypeNil() {
	o.SourceType.Set(nil)
}

// UnsetSourceType ensures that no value is present for SourceType, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetSourceType() {
	o.SourceType.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetSourceId() string {
	if o == nil || o.SourceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceId.Get()
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetSourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceId.Get(), o.SourceId.IsSet()
}

// HasSourceId returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasSourceId() bool {
	if o != nil && o.SourceId.IsSet() {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given NullableString and assigns it to the SourceId field.
func (o *TransferLedgerEventListRequest) SetSourceId(v string) {
	o.SourceId.Set(&v)
}
// SetSourceIdNil sets the value for SourceId to be an explicit nil
func (o *TransferLedgerEventListRequest) SetSourceIdNil() {
	o.SourceId.Set(nil)
}

// UnsetSourceId ensures that no value is present for SourceId, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetSourceId() {
	o.SourceId.Unset()
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetCount() int32 {
	if o == nil || o.Count.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt32 and assigns it to the Count field.
func (o *TransferLedgerEventListRequest) SetCount(v int32) {
	o.Count.Set(&v)
}
// SetCountNil sets the value for Count to be an explicit nil
func (o *TransferLedgerEventListRequest) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetCount() {
	o.Count.Unset()
}

// GetOffset returns the Offset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferLedgerEventListRequest) GetOffset() int32 {
	if o == nil || o.Offset.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Offset.Get()
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferLedgerEventListRequest) GetOffsetOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Offset.Get(), o.Offset.IsSet()
}

// HasOffset returns a boolean if a field has been set.
func (o *TransferLedgerEventListRequest) HasOffset() bool {
	if o != nil && o.Offset.IsSet() {
		return true
	}

	return false
}

// SetOffset gets a reference to the given NullableInt32 and assigns it to the Offset field.
func (o *TransferLedgerEventListRequest) SetOffset(v int32) {
	o.Offset.Set(&v)
}
// SetOffsetNil sets the value for Offset to be an explicit nil
func (o *TransferLedgerEventListRequest) SetOffsetNil() {
	o.Offset.Set(nil)
}

// UnsetOffset ensures that no value is present for Offset, not even an explicit nil
func (o *TransferLedgerEventListRequest) UnsetOffset() {
	o.Offset.Unset()
}

func (o TransferLedgerEventListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.OriginatorClientId.IsSet() {
		toSerialize["originator_client_id"] = o.OriginatorClientId.Get()
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.StartDate.IsSet() {
		toSerialize["start_date"] = o.StartDate.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["end_date"] = o.EndDate.Get()
	}
	if o.LedgerId.IsSet() {
		toSerialize["ledger_id"] = o.LedgerId.Get()
	}
	if o.LedgerEventId.IsSet() {
		toSerialize["ledger_event_id"] = o.LedgerEventId.Get()
	}
	if o.SourceType.IsSet() {
		toSerialize["source_type"] = o.SourceType.Get()
	}
	if o.SourceId.IsSet() {
		toSerialize["source_id"] = o.SourceId.Get()
	}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if o.Offset.IsSet() {
		toSerialize["offset"] = o.Offset.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTransferLedgerEventListRequest struct {
	value *TransferLedgerEventListRequest
	isSet bool
}

func (v NullableTransferLedgerEventListRequest) Get() *TransferLedgerEventListRequest {
	return v.value
}

func (v *NullableTransferLedgerEventListRequest) Set(val *TransferLedgerEventListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferLedgerEventListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferLedgerEventListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferLedgerEventListRequest(val *TransferLedgerEventListRequest) *NullableTransferLedgerEventListRequest {
	return &NullableTransferLedgerEventListRequest{value: val, isSet: true}
}

func (v NullableTransferLedgerEventListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferLedgerEventListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


