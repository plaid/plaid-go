/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.667.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// SignalScheduleRequest SignalScheduleRequest defines the request schema for `/signal/schedule`
type SignalScheduleRequest struct {
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The access token associated with the Item data is being requested for.
	AccessToken string `json:"access_token"`
	// The Plaid `account_id` of the account that is the funding source for the proposed transaction. The `account_id` is returned in the `/accounts/get` endpoint as well as the [`onSuccess`](https://plaid.com/docs/link/ios/#link-ios-onsuccess-linkSuccess-metadata-accounts-id) callback metadata.  This will return an [`INVALID_ACCOUNT_ID`](https://plaid.com/docs/errors/invalid-input/#invalid_account_id) error if the account has been removed at the bank or if the `account_id` is no longer valid.
	AccountId string `json:"account_id"`
	// The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters.
	ClientTransactionId string `json:"client_transaction_id"`
	// The transaction amount, in USD (e.g. `102.05`)
	Amount float64 `json:"amount"`
	DefaultPaymentMethod *SignalScheduleDefaultPaymentMethod `json:"default_payment_method,omitempty"`
}

// NewSignalScheduleRequest instantiates a new SignalScheduleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignalScheduleRequest(accessToken string, accountId string, clientTransactionId string, amount float64) *SignalScheduleRequest {
	this := SignalScheduleRequest{}
	this.AccessToken = accessToken
	this.AccountId = accountId
	this.ClientTransactionId = clientTransactionId
	this.Amount = amount
	return &this
}

// NewSignalScheduleRequestWithDefaults instantiates a new SignalScheduleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignalScheduleRequestWithDefaults() *SignalScheduleRequest {
	this := SignalScheduleRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *SignalScheduleRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignalScheduleRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *SignalScheduleRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *SignalScheduleRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *SignalScheduleRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignalScheduleRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *SignalScheduleRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *SignalScheduleRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetAccessToken returns the AccessToken field value
func (o *SignalScheduleRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *SignalScheduleRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *SignalScheduleRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetAccountId returns the AccountId field value
func (o *SignalScheduleRequest) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SignalScheduleRequest) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SignalScheduleRequest) SetAccountId(v string) {
	o.AccountId = v
}

// GetClientTransactionId returns the ClientTransactionId field value
func (o *SignalScheduleRequest) GetClientTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientTransactionId
}

// GetClientTransactionIdOk returns a tuple with the ClientTransactionId field value
// and a boolean to check if the value has been set.
func (o *SignalScheduleRequest) GetClientTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientTransactionId, true
}

// SetClientTransactionId sets field value
func (o *SignalScheduleRequest) SetClientTransactionId(v string) {
	o.ClientTransactionId = v
}

// GetAmount returns the Amount field value
func (o *SignalScheduleRequest) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *SignalScheduleRequest) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *SignalScheduleRequest) SetAmount(v float64) {
	o.Amount = v
}

// GetDefaultPaymentMethod returns the DefaultPaymentMethod field value if set, zero value otherwise.
func (o *SignalScheduleRequest) GetDefaultPaymentMethod() SignalScheduleDefaultPaymentMethod {
	if o == nil || o.DefaultPaymentMethod == nil {
		var ret SignalScheduleDefaultPaymentMethod
		return ret
	}
	return *o.DefaultPaymentMethod
}

// GetDefaultPaymentMethodOk returns a tuple with the DefaultPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignalScheduleRequest) GetDefaultPaymentMethodOk() (*SignalScheduleDefaultPaymentMethod, bool) {
	if o == nil || o.DefaultPaymentMethod == nil {
		return nil, false
	}
	return o.DefaultPaymentMethod, true
}

// HasDefaultPaymentMethod returns a boolean if a field has been set.
func (o *SignalScheduleRequest) HasDefaultPaymentMethod() bool {
	if o != nil && o.DefaultPaymentMethod != nil {
		return true
	}

	return false
}

// SetDefaultPaymentMethod gets a reference to the given SignalScheduleDefaultPaymentMethod and assigns it to the DefaultPaymentMethod field.
func (o *SignalScheduleRequest) SetDefaultPaymentMethod(v SignalScheduleDefaultPaymentMethod) {
	o.DefaultPaymentMethod = &v
}

func (o SignalScheduleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["client_transaction_id"] = o.ClientTransactionId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.DefaultPaymentMethod != nil {
		toSerialize["default_payment_method"] = o.DefaultPaymentMethod
	}
	return json.Marshal(toSerialize)
}

type NullableSignalScheduleRequest struct {
	value *SignalScheduleRequest
	isSet bool
}

func (v NullableSignalScheduleRequest) Get() *SignalScheduleRequest {
	return v.value
}

func (v *NullableSignalScheduleRequest) Set(val *SignalScheduleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSignalScheduleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSignalScheduleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignalScheduleRequest(val *SignalScheduleRequest) *NullableSignalScheduleRequest {
	return &NullableSignalScheduleRequest{value: val, isSet: true}
}

func (v NullableSignalScheduleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignalScheduleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


