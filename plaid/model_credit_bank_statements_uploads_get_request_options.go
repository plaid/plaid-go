/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.503.5
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// CreditBankStatementsUploadsGetRequestOptions An optional object for `/credit/bank_statements/uploads/get` request options.
type CreditBankStatementsUploadsGetRequestOptions struct {
	// An array of `item_id`s whose bank statements information is returned. Each `item_id` should uniquely identify a bank statements uploaded item. If this field is not provided, all `item_id`s associated with the `user_token` will returned in the response.
	ItemIds *[]string `json:"item_ids,omitempty"`
}

// NewCreditBankStatementsUploadsGetRequestOptions instantiates a new CreditBankStatementsUploadsGetRequestOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditBankStatementsUploadsGetRequestOptions() *CreditBankStatementsUploadsGetRequestOptions {
	this := CreditBankStatementsUploadsGetRequestOptions{}
	return &this
}

// NewCreditBankStatementsUploadsGetRequestOptionsWithDefaults instantiates a new CreditBankStatementsUploadsGetRequestOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditBankStatementsUploadsGetRequestOptionsWithDefaults() *CreditBankStatementsUploadsGetRequestOptions {
	this := CreditBankStatementsUploadsGetRequestOptions{}
	return &this
}

// GetItemIds returns the ItemIds field value if set, zero value otherwise.
func (o *CreditBankStatementsUploadsGetRequestOptions) GetItemIds() []string {
	if o == nil || o.ItemIds == nil {
		var ret []string
		return ret
	}
	return *o.ItemIds
}

// GetItemIdsOk returns a tuple with the ItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditBankStatementsUploadsGetRequestOptions) GetItemIdsOk() (*[]string, bool) {
	if o == nil || o.ItemIds == nil {
		return nil, false
	}
	return o.ItemIds, true
}

// HasItemIds returns a boolean if a field has been set.
func (o *CreditBankStatementsUploadsGetRequestOptions) HasItemIds() bool {
	if o != nil && o.ItemIds != nil {
		return true
	}

	return false
}

// SetItemIds gets a reference to the given []string and assigns it to the ItemIds field.
func (o *CreditBankStatementsUploadsGetRequestOptions) SetItemIds(v []string) {
	o.ItemIds = &v
}

func (o CreditBankStatementsUploadsGetRequestOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ItemIds != nil {
		toSerialize["item_ids"] = o.ItemIds
	}
	return json.Marshal(toSerialize)
}

type NullableCreditBankStatementsUploadsGetRequestOptions struct {
	value *CreditBankStatementsUploadsGetRequestOptions
	isSet bool
}

func (v NullableCreditBankStatementsUploadsGetRequestOptions) Get() *CreditBankStatementsUploadsGetRequestOptions {
	return v.value
}

func (v *NullableCreditBankStatementsUploadsGetRequestOptions) Set(val *CreditBankStatementsUploadsGetRequestOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditBankStatementsUploadsGetRequestOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditBankStatementsUploadsGetRequestOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditBankStatementsUploadsGetRequestOptions(val *CreditBankStatementsUploadsGetRequestOptions) *NullableCreditBankStatementsUploadsGetRequestOptions {
	return &NullableCreditBankStatementsUploadsGetRequestOptions{value: val, isSet: true}
}

func (v NullableCreditBankStatementsUploadsGetRequestOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditBankStatementsUploadsGetRequestOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


