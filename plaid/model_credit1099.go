/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.413.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// Credit1099 An object representing an end user's 1099 tax form
type Credit1099 struct {
	// An identifier of the document referenced by the document metadata.
	DocumentId NullableString `json:"document_id"`
	DocumentMetadata *CreditDocumentMetadata `json:"document_metadata,omitempty"`
	Form1099Type *Form1099Type `json:"form_1099_type,omitempty"`
	Recipient *Credit1099Recipient `json:"recipient,omitempty"`
	Payer *Credit1099Payer `json:"payer,omitempty"`
	Filer *Credit1099Filer `json:"filer,omitempty"`
	// Tax year of the tax form.
	TaxYear NullableString `json:"tax_year,omitempty"`
	// Amount in rent by payer.
	Rents NullableFloat64 `json:"rents,omitempty"`
	// Amount in royalties by payer.
	Royalties NullableFloat64 `json:"royalties,omitempty"`
	// Amount in other income by payer.
	OtherIncome NullableFloat64 `json:"other_income,omitempty"`
	// Amount of federal income tax withheld from payer.
	FederalIncomeTaxWithheld NullableFloat64 `json:"federal_income_tax_withheld,omitempty"`
	// Amount of fishing boat proceeds from payer.
	FishingBoatProceeds NullableFloat64 `json:"fishing_boat_proceeds,omitempty"`
	// Amount of medical and healthcare payments from payer.
	MedicalAndHealthcarePayments NullableFloat64 `json:"medical_and_healthcare_payments,omitempty"`
	// Amount of nonemployee compensation from payer.
	NonemployeeCompensation NullableFloat64 `json:"nonemployee_compensation,omitempty"`
	// Amount of substitute payments made by payer.
	SubstitutePaymentsInLieuOfDividendsOrInterest NullableFloat64 `json:"substitute_payments_in_lieu_of_dividends_or_interest,omitempty"`
	// Whether or not payer made direct sales over $5000 of consumer products.
	PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer NullableString `json:"payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer,omitempty"`
	// Amount of crop insurance proceeds.
	CropInsuranceProceeds NullableFloat64 `json:"crop_insurance_proceeds,omitempty"`
	// Amount of golden parachute payments made by payer.
	ExcessGoldenParachutePayments NullableFloat64 `json:"excess_golden_parachute_payments,omitempty"`
	// Amount of gross proceeds paid to an attorney by payer.
	GrossProceedsPaidToAnAttorney NullableFloat64 `json:"gross_proceeds_paid_to_an_attorney,omitempty"`
	// Amount of 409A deferrals earned by payer.
	Section409aDeferrals NullableFloat64 `json:"section_409a_deferrals,omitempty"`
	// Amount of 409A income earned by payer.
	Section409aIncome NullableFloat64 `json:"section_409a_income,omitempty"`
	// Amount of state tax withheld of payer for primary state.
	StateTaxWithheld NullableFloat64 `json:"state_tax_withheld,omitempty"`
	// Amount of state tax withheld of payer for secondary state.
	StateTaxWithheldLower NullableFloat64 `json:"state_tax_withheld_lower,omitempty"`
	// Primary state ID.
	PayerStateNumber NullableString `json:"payer_state_number,omitempty"`
	// Secondary state ID.
	PayerStateNumberLower NullableString `json:"payer_state_number_lower,omitempty"`
	// State income reported for primary state.
	StateIncome NullableFloat64 `json:"state_income,omitempty"`
	// State income reported for secondary state.
	StateIncomeLower NullableFloat64 `json:"state_income_lower,omitempty"`
	// One of the values will be provided Payment card Third party network
	TransactionsReported NullableString `json:"transactions_reported,omitempty"`
	// Name of the PSE (Payment Settlement Entity).
	PseName NullableString `json:"pse_name,omitempty"`
	// Formatted (XXX) XXX-XXXX. Phone number of the PSE (Payment Settlement Entity).
	PseTelephoneNumber NullableString `json:"pse_telephone_number,omitempty"`
	// Gross amount reported.
	GrossAmount NullableFloat64 `json:"gross_amount,omitempty"`
	// Amount in card not present transactions.
	CardNotPresentTransaction NullableFloat64 `json:"card_not_present_transaction,omitempty"`
	// Merchant category of filer.
	MerchantCategoryCode NullableString `json:"merchant_category_code,omitempty"`
	// Number of payment transactions made.
	NumberOfPaymentTransactions NullableString `json:"number_of_payment_transactions,omitempty"`
	// Amount reported for January.
	JanuaryAmount NullableFloat64 `json:"january_amount,omitempty"`
	// Amount reported for February.
	FebruaryAmount NullableFloat64 `json:"february_amount,omitempty"`
	// Amount reported for March.
	MarchAmount NullableFloat64 `json:"march_amount,omitempty"`
	// Amount reported for April.
	AprilAmount NullableFloat64 `json:"april_amount,omitempty"`
	// Amount reported for May.
	MayAmount NullableFloat64 `json:"may_amount,omitempty"`
	// Amount reported for June.
	JuneAmount NullableFloat64 `json:"june_amount,omitempty"`
	// Amount reported for July.
	JulyAmount NullableFloat64 `json:"july_amount,omitempty"`
	// Amount reported for August.
	AugustAmount NullableFloat64 `json:"august_amount,omitempty"`
	// Amount reported for September.
	SeptemberAmount NullableFloat64 `json:"september_amount,omitempty"`
	// Amount reported for October.
	OctoberAmount NullableFloat64 `json:"october_amount,omitempty"`
	// Amount reported for November.
	NovemberAmount NullableFloat64 `json:"november_amount,omitempty"`
	// Amount reported for December.
	DecemberAmount NullableFloat64 `json:"december_amount,omitempty"`
	// Primary state of business.
	PrimaryState NullableString `json:"primary_state,omitempty"`
	// Secondary state of business.
	SecondaryState NullableString `json:"secondary_state,omitempty"`
	// Primary state ID.
	PrimaryStateId NullableString `json:"primary_state_id,omitempty"`
	// Secondary state ID.
	SecondaryStateId NullableString `json:"secondary_state_id,omitempty"`
	// State income tax reported for primary state.
	PrimaryStateIncomeTax NullableFloat64 `json:"primary_state_income_tax,omitempty"`
	// State income tax reported for secondary state.
	SecondaryStateIncomeTax NullableFloat64 `json:"secondary_state_income_tax,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Credit1099 Credit1099

// NewCredit1099 instantiates a new Credit1099 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredit1099(documentId NullableString) *Credit1099 {
	this := Credit1099{}
	this.DocumentId = documentId
	return &this
}

// NewCredit1099WithDefaults instantiates a new Credit1099 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredit1099WithDefaults() *Credit1099 {
	this := Credit1099{}
	return &this
}

// GetDocumentId returns the DocumentId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Credit1099) GetDocumentId() string {
	if o == nil || o.DocumentId.Get() == nil {
		var ret string
		return ret
	}

	return *o.DocumentId.Get()
}

// GetDocumentIdOk returns a tuple with the DocumentId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetDocumentIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DocumentId.Get(), o.DocumentId.IsSet()
}

// SetDocumentId sets field value
func (o *Credit1099) SetDocumentId(v string) {
	o.DocumentId.Set(&v)
}

// GetDocumentMetadata returns the DocumentMetadata field value if set, zero value otherwise.
func (o *Credit1099) GetDocumentMetadata() CreditDocumentMetadata {
	if o == nil || o.DocumentMetadata == nil {
		var ret CreditDocumentMetadata
		return ret
	}
	return *o.DocumentMetadata
}

// GetDocumentMetadataOk returns a tuple with the DocumentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credit1099) GetDocumentMetadataOk() (*CreditDocumentMetadata, bool) {
	if o == nil || o.DocumentMetadata == nil {
		return nil, false
	}
	return o.DocumentMetadata, true
}

// HasDocumentMetadata returns a boolean if a field has been set.
func (o *Credit1099) HasDocumentMetadata() bool {
	if o != nil && o.DocumentMetadata != nil {
		return true
	}

	return false
}

// SetDocumentMetadata gets a reference to the given CreditDocumentMetadata and assigns it to the DocumentMetadata field.
func (o *Credit1099) SetDocumentMetadata(v CreditDocumentMetadata) {
	o.DocumentMetadata = &v
}

// GetForm1099Type returns the Form1099Type field value if set, zero value otherwise.
func (o *Credit1099) GetForm1099Type() Form1099Type {
	if o == nil || o.Form1099Type == nil {
		var ret Form1099Type
		return ret
	}
	return *o.Form1099Type
}

// GetForm1099TypeOk returns a tuple with the Form1099Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credit1099) GetForm1099TypeOk() (*Form1099Type, bool) {
	if o == nil || o.Form1099Type == nil {
		return nil, false
	}
	return o.Form1099Type, true
}

// HasForm1099Type returns a boolean if a field has been set.
func (o *Credit1099) HasForm1099Type() bool {
	if o != nil && o.Form1099Type != nil {
		return true
	}

	return false
}

// SetForm1099Type gets a reference to the given Form1099Type and assigns it to the Form1099Type field.
func (o *Credit1099) SetForm1099Type(v Form1099Type) {
	o.Form1099Type = &v
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *Credit1099) GetRecipient() Credit1099Recipient {
	if o == nil || o.Recipient == nil {
		var ret Credit1099Recipient
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credit1099) GetRecipientOk() (*Credit1099Recipient, bool) {
	if o == nil || o.Recipient == nil {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *Credit1099) HasRecipient() bool {
	if o != nil && o.Recipient != nil {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given Credit1099Recipient and assigns it to the Recipient field.
func (o *Credit1099) SetRecipient(v Credit1099Recipient) {
	o.Recipient = &v
}

// GetPayer returns the Payer field value if set, zero value otherwise.
func (o *Credit1099) GetPayer() Credit1099Payer {
	if o == nil || o.Payer == nil {
		var ret Credit1099Payer
		return ret
	}
	return *o.Payer
}

// GetPayerOk returns a tuple with the Payer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credit1099) GetPayerOk() (*Credit1099Payer, bool) {
	if o == nil || o.Payer == nil {
		return nil, false
	}
	return o.Payer, true
}

// HasPayer returns a boolean if a field has been set.
func (o *Credit1099) HasPayer() bool {
	if o != nil && o.Payer != nil {
		return true
	}

	return false
}

// SetPayer gets a reference to the given Credit1099Payer and assigns it to the Payer field.
func (o *Credit1099) SetPayer(v Credit1099Payer) {
	o.Payer = &v
}

// GetFiler returns the Filer field value if set, zero value otherwise.
func (o *Credit1099) GetFiler() Credit1099Filer {
	if o == nil || o.Filer == nil {
		var ret Credit1099Filer
		return ret
	}
	return *o.Filer
}

// GetFilerOk returns a tuple with the Filer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credit1099) GetFilerOk() (*Credit1099Filer, bool) {
	if o == nil || o.Filer == nil {
		return nil, false
	}
	return o.Filer, true
}

// HasFiler returns a boolean if a field has been set.
func (o *Credit1099) HasFiler() bool {
	if o != nil && o.Filer != nil {
		return true
	}

	return false
}

// SetFiler gets a reference to the given Credit1099Filer and assigns it to the Filer field.
func (o *Credit1099) SetFiler(v Credit1099Filer) {
	o.Filer = &v
}

// GetTaxYear returns the TaxYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetTaxYear() string {
	if o == nil || o.TaxYear.Get() == nil {
		var ret string
		return ret
	}
	return *o.TaxYear.Get()
}

// GetTaxYearOk returns a tuple with the TaxYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetTaxYearOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaxYear.Get(), o.TaxYear.IsSet()
}

// HasTaxYear returns a boolean if a field has been set.
func (o *Credit1099) HasTaxYear() bool {
	if o != nil && o.TaxYear.IsSet() {
		return true
	}

	return false
}

// SetTaxYear gets a reference to the given NullableString and assigns it to the TaxYear field.
func (o *Credit1099) SetTaxYear(v string) {
	o.TaxYear.Set(&v)
}
// SetTaxYearNil sets the value for TaxYear to be an explicit nil
func (o *Credit1099) SetTaxYearNil() {
	o.TaxYear.Set(nil)
}

// UnsetTaxYear ensures that no value is present for TaxYear, not even an explicit nil
func (o *Credit1099) UnsetTaxYear() {
	o.TaxYear.Unset()
}

// GetRents returns the Rents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetRents() float64 {
	if o == nil || o.Rents.Get() == nil {
		var ret float64
		return ret
	}
	return *o.Rents.Get()
}

// GetRentsOk returns a tuple with the Rents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetRentsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Rents.Get(), o.Rents.IsSet()
}

// HasRents returns a boolean if a field has been set.
func (o *Credit1099) HasRents() bool {
	if o != nil && o.Rents.IsSet() {
		return true
	}

	return false
}

// SetRents gets a reference to the given NullableFloat64 and assigns it to the Rents field.
func (o *Credit1099) SetRents(v float64) {
	o.Rents.Set(&v)
}
// SetRentsNil sets the value for Rents to be an explicit nil
func (o *Credit1099) SetRentsNil() {
	o.Rents.Set(nil)
}

// UnsetRents ensures that no value is present for Rents, not even an explicit nil
func (o *Credit1099) UnsetRents() {
	o.Rents.Unset()
}

// GetRoyalties returns the Royalties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetRoyalties() float64 {
	if o == nil || o.Royalties.Get() == nil {
		var ret float64
		return ret
	}
	return *o.Royalties.Get()
}

// GetRoyaltiesOk returns a tuple with the Royalties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetRoyaltiesOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Royalties.Get(), o.Royalties.IsSet()
}

// HasRoyalties returns a boolean if a field has been set.
func (o *Credit1099) HasRoyalties() bool {
	if o != nil && o.Royalties.IsSet() {
		return true
	}

	return false
}

// SetRoyalties gets a reference to the given NullableFloat64 and assigns it to the Royalties field.
func (o *Credit1099) SetRoyalties(v float64) {
	o.Royalties.Set(&v)
}
// SetRoyaltiesNil sets the value for Royalties to be an explicit nil
func (o *Credit1099) SetRoyaltiesNil() {
	o.Royalties.Set(nil)
}

// UnsetRoyalties ensures that no value is present for Royalties, not even an explicit nil
func (o *Credit1099) UnsetRoyalties() {
	o.Royalties.Unset()
}

// GetOtherIncome returns the OtherIncome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetOtherIncome() float64 {
	if o == nil || o.OtherIncome.Get() == nil {
		var ret float64
		return ret
	}
	return *o.OtherIncome.Get()
}

// GetOtherIncomeOk returns a tuple with the OtherIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetOtherIncomeOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OtherIncome.Get(), o.OtherIncome.IsSet()
}

// HasOtherIncome returns a boolean if a field has been set.
func (o *Credit1099) HasOtherIncome() bool {
	if o != nil && o.OtherIncome.IsSet() {
		return true
	}

	return false
}

// SetOtherIncome gets a reference to the given NullableFloat64 and assigns it to the OtherIncome field.
func (o *Credit1099) SetOtherIncome(v float64) {
	o.OtherIncome.Set(&v)
}
// SetOtherIncomeNil sets the value for OtherIncome to be an explicit nil
func (o *Credit1099) SetOtherIncomeNil() {
	o.OtherIncome.Set(nil)
}

// UnsetOtherIncome ensures that no value is present for OtherIncome, not even an explicit nil
func (o *Credit1099) UnsetOtherIncome() {
	o.OtherIncome.Unset()
}

// GetFederalIncomeTaxWithheld returns the FederalIncomeTaxWithheld field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetFederalIncomeTaxWithheld() float64 {
	if o == nil || o.FederalIncomeTaxWithheld.Get() == nil {
		var ret float64
		return ret
	}
	return *o.FederalIncomeTaxWithheld.Get()
}

// GetFederalIncomeTaxWithheldOk returns a tuple with the FederalIncomeTaxWithheld field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetFederalIncomeTaxWithheldOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FederalIncomeTaxWithheld.Get(), o.FederalIncomeTaxWithheld.IsSet()
}

// HasFederalIncomeTaxWithheld returns a boolean if a field has been set.
func (o *Credit1099) HasFederalIncomeTaxWithheld() bool {
	if o != nil && o.FederalIncomeTaxWithheld.IsSet() {
		return true
	}

	return false
}

// SetFederalIncomeTaxWithheld gets a reference to the given NullableFloat64 and assigns it to the FederalIncomeTaxWithheld field.
func (o *Credit1099) SetFederalIncomeTaxWithheld(v float64) {
	o.FederalIncomeTaxWithheld.Set(&v)
}
// SetFederalIncomeTaxWithheldNil sets the value for FederalIncomeTaxWithheld to be an explicit nil
func (o *Credit1099) SetFederalIncomeTaxWithheldNil() {
	o.FederalIncomeTaxWithheld.Set(nil)
}

// UnsetFederalIncomeTaxWithheld ensures that no value is present for FederalIncomeTaxWithheld, not even an explicit nil
func (o *Credit1099) UnsetFederalIncomeTaxWithheld() {
	o.FederalIncomeTaxWithheld.Unset()
}

// GetFishingBoatProceeds returns the FishingBoatProceeds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetFishingBoatProceeds() float64 {
	if o == nil || o.FishingBoatProceeds.Get() == nil {
		var ret float64
		return ret
	}
	return *o.FishingBoatProceeds.Get()
}

// GetFishingBoatProceedsOk returns a tuple with the FishingBoatProceeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetFishingBoatProceedsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FishingBoatProceeds.Get(), o.FishingBoatProceeds.IsSet()
}

// HasFishingBoatProceeds returns a boolean if a field has been set.
func (o *Credit1099) HasFishingBoatProceeds() bool {
	if o != nil && o.FishingBoatProceeds.IsSet() {
		return true
	}

	return false
}

// SetFishingBoatProceeds gets a reference to the given NullableFloat64 and assigns it to the FishingBoatProceeds field.
func (o *Credit1099) SetFishingBoatProceeds(v float64) {
	o.FishingBoatProceeds.Set(&v)
}
// SetFishingBoatProceedsNil sets the value for FishingBoatProceeds to be an explicit nil
func (o *Credit1099) SetFishingBoatProceedsNil() {
	o.FishingBoatProceeds.Set(nil)
}

// UnsetFishingBoatProceeds ensures that no value is present for FishingBoatProceeds, not even an explicit nil
func (o *Credit1099) UnsetFishingBoatProceeds() {
	o.FishingBoatProceeds.Unset()
}

// GetMedicalAndHealthcarePayments returns the MedicalAndHealthcarePayments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetMedicalAndHealthcarePayments() float64 {
	if o == nil || o.MedicalAndHealthcarePayments.Get() == nil {
		var ret float64
		return ret
	}
	return *o.MedicalAndHealthcarePayments.Get()
}

// GetMedicalAndHealthcarePaymentsOk returns a tuple with the MedicalAndHealthcarePayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetMedicalAndHealthcarePaymentsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MedicalAndHealthcarePayments.Get(), o.MedicalAndHealthcarePayments.IsSet()
}

// HasMedicalAndHealthcarePayments returns a boolean if a field has been set.
func (o *Credit1099) HasMedicalAndHealthcarePayments() bool {
	if o != nil && o.MedicalAndHealthcarePayments.IsSet() {
		return true
	}

	return false
}

// SetMedicalAndHealthcarePayments gets a reference to the given NullableFloat64 and assigns it to the MedicalAndHealthcarePayments field.
func (o *Credit1099) SetMedicalAndHealthcarePayments(v float64) {
	o.MedicalAndHealthcarePayments.Set(&v)
}
// SetMedicalAndHealthcarePaymentsNil sets the value for MedicalAndHealthcarePayments to be an explicit nil
func (o *Credit1099) SetMedicalAndHealthcarePaymentsNil() {
	o.MedicalAndHealthcarePayments.Set(nil)
}

// UnsetMedicalAndHealthcarePayments ensures that no value is present for MedicalAndHealthcarePayments, not even an explicit nil
func (o *Credit1099) UnsetMedicalAndHealthcarePayments() {
	o.MedicalAndHealthcarePayments.Unset()
}

// GetNonemployeeCompensation returns the NonemployeeCompensation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetNonemployeeCompensation() float64 {
	if o == nil || o.NonemployeeCompensation.Get() == nil {
		var ret float64
		return ret
	}
	return *o.NonemployeeCompensation.Get()
}

// GetNonemployeeCompensationOk returns a tuple with the NonemployeeCompensation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetNonemployeeCompensationOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NonemployeeCompensation.Get(), o.NonemployeeCompensation.IsSet()
}

// HasNonemployeeCompensation returns a boolean if a field has been set.
func (o *Credit1099) HasNonemployeeCompensation() bool {
	if o != nil && o.NonemployeeCompensation.IsSet() {
		return true
	}

	return false
}

// SetNonemployeeCompensation gets a reference to the given NullableFloat64 and assigns it to the NonemployeeCompensation field.
func (o *Credit1099) SetNonemployeeCompensation(v float64) {
	o.NonemployeeCompensation.Set(&v)
}
// SetNonemployeeCompensationNil sets the value for NonemployeeCompensation to be an explicit nil
func (o *Credit1099) SetNonemployeeCompensationNil() {
	o.NonemployeeCompensation.Set(nil)
}

// UnsetNonemployeeCompensation ensures that no value is present for NonemployeeCompensation, not even an explicit nil
func (o *Credit1099) UnsetNonemployeeCompensation() {
	o.NonemployeeCompensation.Unset()
}

// GetSubstitutePaymentsInLieuOfDividendsOrInterest returns the SubstitutePaymentsInLieuOfDividendsOrInterest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetSubstitutePaymentsInLieuOfDividendsOrInterest() float64 {
	if o == nil || o.SubstitutePaymentsInLieuOfDividendsOrInterest.Get() == nil {
		var ret float64
		return ret
	}
	return *o.SubstitutePaymentsInLieuOfDividendsOrInterest.Get()
}

// GetSubstitutePaymentsInLieuOfDividendsOrInterestOk returns a tuple with the SubstitutePaymentsInLieuOfDividendsOrInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetSubstitutePaymentsInLieuOfDividendsOrInterestOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubstitutePaymentsInLieuOfDividendsOrInterest.Get(), o.SubstitutePaymentsInLieuOfDividendsOrInterest.IsSet()
}

// HasSubstitutePaymentsInLieuOfDividendsOrInterest returns a boolean if a field has been set.
func (o *Credit1099) HasSubstitutePaymentsInLieuOfDividendsOrInterest() bool {
	if o != nil && o.SubstitutePaymentsInLieuOfDividendsOrInterest.IsSet() {
		return true
	}

	return false
}

// SetSubstitutePaymentsInLieuOfDividendsOrInterest gets a reference to the given NullableFloat64 and assigns it to the SubstitutePaymentsInLieuOfDividendsOrInterest field.
func (o *Credit1099) SetSubstitutePaymentsInLieuOfDividendsOrInterest(v float64) {
	o.SubstitutePaymentsInLieuOfDividendsOrInterest.Set(&v)
}
// SetSubstitutePaymentsInLieuOfDividendsOrInterestNil sets the value for SubstitutePaymentsInLieuOfDividendsOrInterest to be an explicit nil
func (o *Credit1099) SetSubstitutePaymentsInLieuOfDividendsOrInterestNil() {
	o.SubstitutePaymentsInLieuOfDividendsOrInterest.Set(nil)
}

// UnsetSubstitutePaymentsInLieuOfDividendsOrInterest ensures that no value is present for SubstitutePaymentsInLieuOfDividendsOrInterest, not even an explicit nil
func (o *Credit1099) UnsetSubstitutePaymentsInLieuOfDividendsOrInterest() {
	o.SubstitutePaymentsInLieuOfDividendsOrInterest.Unset()
}

// GetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer returns the PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer() string {
	if o == nil || o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.Get() == nil {
		var ret string
		return ret
	}
	return *o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.Get()
}

// GetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyerOk returns a tuple with the PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.Get(), o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.IsSet()
}

// HasPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer returns a boolean if a field has been set.
func (o *Credit1099) HasPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer() bool {
	if o != nil && o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.IsSet() {
		return true
	}

	return false
}

// SetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer gets a reference to the given NullableString and assigns it to the PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer field.
func (o *Credit1099) SetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer(v string) {
	o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.Set(&v)
}
// SetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyerNil sets the value for PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer to be an explicit nil
func (o *Credit1099) SetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyerNil() {
	o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.Set(nil)
}

// UnsetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer ensures that no value is present for PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer, not even an explicit nil
func (o *Credit1099) UnsetPayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer() {
	o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.Unset()
}

// GetCropInsuranceProceeds returns the CropInsuranceProceeds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetCropInsuranceProceeds() float64 {
	if o == nil || o.CropInsuranceProceeds.Get() == nil {
		var ret float64
		return ret
	}
	return *o.CropInsuranceProceeds.Get()
}

// GetCropInsuranceProceedsOk returns a tuple with the CropInsuranceProceeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetCropInsuranceProceedsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CropInsuranceProceeds.Get(), o.CropInsuranceProceeds.IsSet()
}

// HasCropInsuranceProceeds returns a boolean if a field has been set.
func (o *Credit1099) HasCropInsuranceProceeds() bool {
	if o != nil && o.CropInsuranceProceeds.IsSet() {
		return true
	}

	return false
}

// SetCropInsuranceProceeds gets a reference to the given NullableFloat64 and assigns it to the CropInsuranceProceeds field.
func (o *Credit1099) SetCropInsuranceProceeds(v float64) {
	o.CropInsuranceProceeds.Set(&v)
}
// SetCropInsuranceProceedsNil sets the value for CropInsuranceProceeds to be an explicit nil
func (o *Credit1099) SetCropInsuranceProceedsNil() {
	o.CropInsuranceProceeds.Set(nil)
}

// UnsetCropInsuranceProceeds ensures that no value is present for CropInsuranceProceeds, not even an explicit nil
func (o *Credit1099) UnsetCropInsuranceProceeds() {
	o.CropInsuranceProceeds.Unset()
}

// GetExcessGoldenParachutePayments returns the ExcessGoldenParachutePayments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetExcessGoldenParachutePayments() float64 {
	if o == nil || o.ExcessGoldenParachutePayments.Get() == nil {
		var ret float64
		return ret
	}
	return *o.ExcessGoldenParachutePayments.Get()
}

// GetExcessGoldenParachutePaymentsOk returns a tuple with the ExcessGoldenParachutePayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetExcessGoldenParachutePaymentsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExcessGoldenParachutePayments.Get(), o.ExcessGoldenParachutePayments.IsSet()
}

// HasExcessGoldenParachutePayments returns a boolean if a field has been set.
func (o *Credit1099) HasExcessGoldenParachutePayments() bool {
	if o != nil && o.ExcessGoldenParachutePayments.IsSet() {
		return true
	}

	return false
}

// SetExcessGoldenParachutePayments gets a reference to the given NullableFloat64 and assigns it to the ExcessGoldenParachutePayments field.
func (o *Credit1099) SetExcessGoldenParachutePayments(v float64) {
	o.ExcessGoldenParachutePayments.Set(&v)
}
// SetExcessGoldenParachutePaymentsNil sets the value for ExcessGoldenParachutePayments to be an explicit nil
func (o *Credit1099) SetExcessGoldenParachutePaymentsNil() {
	o.ExcessGoldenParachutePayments.Set(nil)
}

// UnsetExcessGoldenParachutePayments ensures that no value is present for ExcessGoldenParachutePayments, not even an explicit nil
func (o *Credit1099) UnsetExcessGoldenParachutePayments() {
	o.ExcessGoldenParachutePayments.Unset()
}

// GetGrossProceedsPaidToAnAttorney returns the GrossProceedsPaidToAnAttorney field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetGrossProceedsPaidToAnAttorney() float64 {
	if o == nil || o.GrossProceedsPaidToAnAttorney.Get() == nil {
		var ret float64
		return ret
	}
	return *o.GrossProceedsPaidToAnAttorney.Get()
}

// GetGrossProceedsPaidToAnAttorneyOk returns a tuple with the GrossProceedsPaidToAnAttorney field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetGrossProceedsPaidToAnAttorneyOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GrossProceedsPaidToAnAttorney.Get(), o.GrossProceedsPaidToAnAttorney.IsSet()
}

// HasGrossProceedsPaidToAnAttorney returns a boolean if a field has been set.
func (o *Credit1099) HasGrossProceedsPaidToAnAttorney() bool {
	if o != nil && o.GrossProceedsPaidToAnAttorney.IsSet() {
		return true
	}

	return false
}

// SetGrossProceedsPaidToAnAttorney gets a reference to the given NullableFloat64 and assigns it to the GrossProceedsPaidToAnAttorney field.
func (o *Credit1099) SetGrossProceedsPaidToAnAttorney(v float64) {
	o.GrossProceedsPaidToAnAttorney.Set(&v)
}
// SetGrossProceedsPaidToAnAttorneyNil sets the value for GrossProceedsPaidToAnAttorney to be an explicit nil
func (o *Credit1099) SetGrossProceedsPaidToAnAttorneyNil() {
	o.GrossProceedsPaidToAnAttorney.Set(nil)
}

// UnsetGrossProceedsPaidToAnAttorney ensures that no value is present for GrossProceedsPaidToAnAttorney, not even an explicit nil
func (o *Credit1099) UnsetGrossProceedsPaidToAnAttorney() {
	o.GrossProceedsPaidToAnAttorney.Unset()
}

// GetSection409aDeferrals returns the Section409aDeferrals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetSection409aDeferrals() float64 {
	if o == nil || o.Section409aDeferrals.Get() == nil {
		var ret float64
		return ret
	}
	return *o.Section409aDeferrals.Get()
}

// GetSection409aDeferralsOk returns a tuple with the Section409aDeferrals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetSection409aDeferralsOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Section409aDeferrals.Get(), o.Section409aDeferrals.IsSet()
}

// HasSection409aDeferrals returns a boolean if a field has been set.
func (o *Credit1099) HasSection409aDeferrals() bool {
	if o != nil && o.Section409aDeferrals.IsSet() {
		return true
	}

	return false
}

// SetSection409aDeferrals gets a reference to the given NullableFloat64 and assigns it to the Section409aDeferrals field.
func (o *Credit1099) SetSection409aDeferrals(v float64) {
	o.Section409aDeferrals.Set(&v)
}
// SetSection409aDeferralsNil sets the value for Section409aDeferrals to be an explicit nil
func (o *Credit1099) SetSection409aDeferralsNil() {
	o.Section409aDeferrals.Set(nil)
}

// UnsetSection409aDeferrals ensures that no value is present for Section409aDeferrals, not even an explicit nil
func (o *Credit1099) UnsetSection409aDeferrals() {
	o.Section409aDeferrals.Unset()
}

// GetSection409aIncome returns the Section409aIncome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetSection409aIncome() float64 {
	if o == nil || o.Section409aIncome.Get() == nil {
		var ret float64
		return ret
	}
	return *o.Section409aIncome.Get()
}

// GetSection409aIncomeOk returns a tuple with the Section409aIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetSection409aIncomeOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Section409aIncome.Get(), o.Section409aIncome.IsSet()
}

// HasSection409aIncome returns a boolean if a field has been set.
func (o *Credit1099) HasSection409aIncome() bool {
	if o != nil && o.Section409aIncome.IsSet() {
		return true
	}

	return false
}

// SetSection409aIncome gets a reference to the given NullableFloat64 and assigns it to the Section409aIncome field.
func (o *Credit1099) SetSection409aIncome(v float64) {
	o.Section409aIncome.Set(&v)
}
// SetSection409aIncomeNil sets the value for Section409aIncome to be an explicit nil
func (o *Credit1099) SetSection409aIncomeNil() {
	o.Section409aIncome.Set(nil)
}

// UnsetSection409aIncome ensures that no value is present for Section409aIncome, not even an explicit nil
func (o *Credit1099) UnsetSection409aIncome() {
	o.Section409aIncome.Unset()
}

// GetStateTaxWithheld returns the StateTaxWithheld field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetStateTaxWithheld() float64 {
	if o == nil || o.StateTaxWithheld.Get() == nil {
		var ret float64
		return ret
	}
	return *o.StateTaxWithheld.Get()
}

// GetStateTaxWithheldOk returns a tuple with the StateTaxWithheld field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetStateTaxWithheldOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StateTaxWithheld.Get(), o.StateTaxWithheld.IsSet()
}

// HasStateTaxWithheld returns a boolean if a field has been set.
func (o *Credit1099) HasStateTaxWithheld() bool {
	if o != nil && o.StateTaxWithheld.IsSet() {
		return true
	}

	return false
}

// SetStateTaxWithheld gets a reference to the given NullableFloat64 and assigns it to the StateTaxWithheld field.
func (o *Credit1099) SetStateTaxWithheld(v float64) {
	o.StateTaxWithheld.Set(&v)
}
// SetStateTaxWithheldNil sets the value for StateTaxWithheld to be an explicit nil
func (o *Credit1099) SetStateTaxWithheldNil() {
	o.StateTaxWithheld.Set(nil)
}

// UnsetStateTaxWithheld ensures that no value is present for StateTaxWithheld, not even an explicit nil
func (o *Credit1099) UnsetStateTaxWithheld() {
	o.StateTaxWithheld.Unset()
}

// GetStateTaxWithheldLower returns the StateTaxWithheldLower field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetStateTaxWithheldLower() float64 {
	if o == nil || o.StateTaxWithheldLower.Get() == nil {
		var ret float64
		return ret
	}
	return *o.StateTaxWithheldLower.Get()
}

// GetStateTaxWithheldLowerOk returns a tuple with the StateTaxWithheldLower field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetStateTaxWithheldLowerOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StateTaxWithheldLower.Get(), o.StateTaxWithheldLower.IsSet()
}

// HasStateTaxWithheldLower returns a boolean if a field has been set.
func (o *Credit1099) HasStateTaxWithheldLower() bool {
	if o != nil && o.StateTaxWithheldLower.IsSet() {
		return true
	}

	return false
}

// SetStateTaxWithheldLower gets a reference to the given NullableFloat64 and assigns it to the StateTaxWithheldLower field.
func (o *Credit1099) SetStateTaxWithheldLower(v float64) {
	o.StateTaxWithheldLower.Set(&v)
}
// SetStateTaxWithheldLowerNil sets the value for StateTaxWithheldLower to be an explicit nil
func (o *Credit1099) SetStateTaxWithheldLowerNil() {
	o.StateTaxWithheldLower.Set(nil)
}

// UnsetStateTaxWithheldLower ensures that no value is present for StateTaxWithheldLower, not even an explicit nil
func (o *Credit1099) UnsetStateTaxWithheldLower() {
	o.StateTaxWithheldLower.Unset()
}

// GetPayerStateNumber returns the PayerStateNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPayerStateNumber() string {
	if o == nil || o.PayerStateNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.PayerStateNumber.Get()
}

// GetPayerStateNumberOk returns a tuple with the PayerStateNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPayerStateNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PayerStateNumber.Get(), o.PayerStateNumber.IsSet()
}

// HasPayerStateNumber returns a boolean if a field has been set.
func (o *Credit1099) HasPayerStateNumber() bool {
	if o != nil && o.PayerStateNumber.IsSet() {
		return true
	}

	return false
}

// SetPayerStateNumber gets a reference to the given NullableString and assigns it to the PayerStateNumber field.
func (o *Credit1099) SetPayerStateNumber(v string) {
	o.PayerStateNumber.Set(&v)
}
// SetPayerStateNumberNil sets the value for PayerStateNumber to be an explicit nil
func (o *Credit1099) SetPayerStateNumberNil() {
	o.PayerStateNumber.Set(nil)
}

// UnsetPayerStateNumber ensures that no value is present for PayerStateNumber, not even an explicit nil
func (o *Credit1099) UnsetPayerStateNumber() {
	o.PayerStateNumber.Unset()
}

// GetPayerStateNumberLower returns the PayerStateNumberLower field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPayerStateNumberLower() string {
	if o == nil || o.PayerStateNumberLower.Get() == nil {
		var ret string
		return ret
	}
	return *o.PayerStateNumberLower.Get()
}

// GetPayerStateNumberLowerOk returns a tuple with the PayerStateNumberLower field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPayerStateNumberLowerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PayerStateNumberLower.Get(), o.PayerStateNumberLower.IsSet()
}

// HasPayerStateNumberLower returns a boolean if a field has been set.
func (o *Credit1099) HasPayerStateNumberLower() bool {
	if o != nil && o.PayerStateNumberLower.IsSet() {
		return true
	}

	return false
}

// SetPayerStateNumberLower gets a reference to the given NullableString and assigns it to the PayerStateNumberLower field.
func (o *Credit1099) SetPayerStateNumberLower(v string) {
	o.PayerStateNumberLower.Set(&v)
}
// SetPayerStateNumberLowerNil sets the value for PayerStateNumberLower to be an explicit nil
func (o *Credit1099) SetPayerStateNumberLowerNil() {
	o.PayerStateNumberLower.Set(nil)
}

// UnsetPayerStateNumberLower ensures that no value is present for PayerStateNumberLower, not even an explicit nil
func (o *Credit1099) UnsetPayerStateNumberLower() {
	o.PayerStateNumberLower.Unset()
}

// GetStateIncome returns the StateIncome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetStateIncome() float64 {
	if o == nil || o.StateIncome.Get() == nil {
		var ret float64
		return ret
	}
	return *o.StateIncome.Get()
}

// GetStateIncomeOk returns a tuple with the StateIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetStateIncomeOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StateIncome.Get(), o.StateIncome.IsSet()
}

// HasStateIncome returns a boolean if a field has been set.
func (o *Credit1099) HasStateIncome() bool {
	if o != nil && o.StateIncome.IsSet() {
		return true
	}

	return false
}

// SetStateIncome gets a reference to the given NullableFloat64 and assigns it to the StateIncome field.
func (o *Credit1099) SetStateIncome(v float64) {
	o.StateIncome.Set(&v)
}
// SetStateIncomeNil sets the value for StateIncome to be an explicit nil
func (o *Credit1099) SetStateIncomeNil() {
	o.StateIncome.Set(nil)
}

// UnsetStateIncome ensures that no value is present for StateIncome, not even an explicit nil
func (o *Credit1099) UnsetStateIncome() {
	o.StateIncome.Unset()
}

// GetStateIncomeLower returns the StateIncomeLower field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetStateIncomeLower() float64 {
	if o == nil || o.StateIncomeLower.Get() == nil {
		var ret float64
		return ret
	}
	return *o.StateIncomeLower.Get()
}

// GetStateIncomeLowerOk returns a tuple with the StateIncomeLower field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetStateIncomeLowerOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StateIncomeLower.Get(), o.StateIncomeLower.IsSet()
}

// HasStateIncomeLower returns a boolean if a field has been set.
func (o *Credit1099) HasStateIncomeLower() bool {
	if o != nil && o.StateIncomeLower.IsSet() {
		return true
	}

	return false
}

// SetStateIncomeLower gets a reference to the given NullableFloat64 and assigns it to the StateIncomeLower field.
func (o *Credit1099) SetStateIncomeLower(v float64) {
	o.StateIncomeLower.Set(&v)
}
// SetStateIncomeLowerNil sets the value for StateIncomeLower to be an explicit nil
func (o *Credit1099) SetStateIncomeLowerNil() {
	o.StateIncomeLower.Set(nil)
}

// UnsetStateIncomeLower ensures that no value is present for StateIncomeLower, not even an explicit nil
func (o *Credit1099) UnsetStateIncomeLower() {
	o.StateIncomeLower.Unset()
}

// GetTransactionsReported returns the TransactionsReported field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetTransactionsReported() string {
	if o == nil || o.TransactionsReported.Get() == nil {
		var ret string
		return ret
	}
	return *o.TransactionsReported.Get()
}

// GetTransactionsReportedOk returns a tuple with the TransactionsReported field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetTransactionsReportedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TransactionsReported.Get(), o.TransactionsReported.IsSet()
}

// HasTransactionsReported returns a boolean if a field has been set.
func (o *Credit1099) HasTransactionsReported() bool {
	if o != nil && o.TransactionsReported.IsSet() {
		return true
	}

	return false
}

// SetTransactionsReported gets a reference to the given NullableString and assigns it to the TransactionsReported field.
func (o *Credit1099) SetTransactionsReported(v string) {
	o.TransactionsReported.Set(&v)
}
// SetTransactionsReportedNil sets the value for TransactionsReported to be an explicit nil
func (o *Credit1099) SetTransactionsReportedNil() {
	o.TransactionsReported.Set(nil)
}

// UnsetTransactionsReported ensures that no value is present for TransactionsReported, not even an explicit nil
func (o *Credit1099) UnsetTransactionsReported() {
	o.TransactionsReported.Unset()
}

// GetPseName returns the PseName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPseName() string {
	if o == nil || o.PseName.Get() == nil {
		var ret string
		return ret
	}
	return *o.PseName.Get()
}

// GetPseNameOk returns a tuple with the PseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPseNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PseName.Get(), o.PseName.IsSet()
}

// HasPseName returns a boolean if a field has been set.
func (o *Credit1099) HasPseName() bool {
	if o != nil && o.PseName.IsSet() {
		return true
	}

	return false
}

// SetPseName gets a reference to the given NullableString and assigns it to the PseName field.
func (o *Credit1099) SetPseName(v string) {
	o.PseName.Set(&v)
}
// SetPseNameNil sets the value for PseName to be an explicit nil
func (o *Credit1099) SetPseNameNil() {
	o.PseName.Set(nil)
}

// UnsetPseName ensures that no value is present for PseName, not even an explicit nil
func (o *Credit1099) UnsetPseName() {
	o.PseName.Unset()
}

// GetPseTelephoneNumber returns the PseTelephoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPseTelephoneNumber() string {
	if o == nil || o.PseTelephoneNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.PseTelephoneNumber.Get()
}

// GetPseTelephoneNumberOk returns a tuple with the PseTelephoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPseTelephoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PseTelephoneNumber.Get(), o.PseTelephoneNumber.IsSet()
}

// HasPseTelephoneNumber returns a boolean if a field has been set.
func (o *Credit1099) HasPseTelephoneNumber() bool {
	if o != nil && o.PseTelephoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPseTelephoneNumber gets a reference to the given NullableString and assigns it to the PseTelephoneNumber field.
func (o *Credit1099) SetPseTelephoneNumber(v string) {
	o.PseTelephoneNumber.Set(&v)
}
// SetPseTelephoneNumberNil sets the value for PseTelephoneNumber to be an explicit nil
func (o *Credit1099) SetPseTelephoneNumberNil() {
	o.PseTelephoneNumber.Set(nil)
}

// UnsetPseTelephoneNumber ensures that no value is present for PseTelephoneNumber, not even an explicit nil
func (o *Credit1099) UnsetPseTelephoneNumber() {
	o.PseTelephoneNumber.Unset()
}

// GetGrossAmount returns the GrossAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetGrossAmount() float64 {
	if o == nil || o.GrossAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.GrossAmount.Get()
}

// GetGrossAmountOk returns a tuple with the GrossAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetGrossAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GrossAmount.Get(), o.GrossAmount.IsSet()
}

// HasGrossAmount returns a boolean if a field has been set.
func (o *Credit1099) HasGrossAmount() bool {
	if o != nil && o.GrossAmount.IsSet() {
		return true
	}

	return false
}

// SetGrossAmount gets a reference to the given NullableFloat64 and assigns it to the GrossAmount field.
func (o *Credit1099) SetGrossAmount(v float64) {
	o.GrossAmount.Set(&v)
}
// SetGrossAmountNil sets the value for GrossAmount to be an explicit nil
func (o *Credit1099) SetGrossAmountNil() {
	o.GrossAmount.Set(nil)
}

// UnsetGrossAmount ensures that no value is present for GrossAmount, not even an explicit nil
func (o *Credit1099) UnsetGrossAmount() {
	o.GrossAmount.Unset()
}

// GetCardNotPresentTransaction returns the CardNotPresentTransaction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetCardNotPresentTransaction() float64 {
	if o == nil || o.CardNotPresentTransaction.Get() == nil {
		var ret float64
		return ret
	}
	return *o.CardNotPresentTransaction.Get()
}

// GetCardNotPresentTransactionOk returns a tuple with the CardNotPresentTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetCardNotPresentTransactionOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardNotPresentTransaction.Get(), o.CardNotPresentTransaction.IsSet()
}

// HasCardNotPresentTransaction returns a boolean if a field has been set.
func (o *Credit1099) HasCardNotPresentTransaction() bool {
	if o != nil && o.CardNotPresentTransaction.IsSet() {
		return true
	}

	return false
}

// SetCardNotPresentTransaction gets a reference to the given NullableFloat64 and assigns it to the CardNotPresentTransaction field.
func (o *Credit1099) SetCardNotPresentTransaction(v float64) {
	o.CardNotPresentTransaction.Set(&v)
}
// SetCardNotPresentTransactionNil sets the value for CardNotPresentTransaction to be an explicit nil
func (o *Credit1099) SetCardNotPresentTransactionNil() {
	o.CardNotPresentTransaction.Set(nil)
}

// UnsetCardNotPresentTransaction ensures that no value is present for CardNotPresentTransaction, not even an explicit nil
func (o *Credit1099) UnsetCardNotPresentTransaction() {
	o.CardNotPresentTransaction.Unset()
}

// GetMerchantCategoryCode returns the MerchantCategoryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetMerchantCategoryCode() string {
	if o == nil || o.MerchantCategoryCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantCategoryCode.Get()
}

// GetMerchantCategoryCodeOk returns a tuple with the MerchantCategoryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetMerchantCategoryCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantCategoryCode.Get(), o.MerchantCategoryCode.IsSet()
}

// HasMerchantCategoryCode returns a boolean if a field has been set.
func (o *Credit1099) HasMerchantCategoryCode() bool {
	if o != nil && o.MerchantCategoryCode.IsSet() {
		return true
	}

	return false
}

// SetMerchantCategoryCode gets a reference to the given NullableString and assigns it to the MerchantCategoryCode field.
func (o *Credit1099) SetMerchantCategoryCode(v string) {
	o.MerchantCategoryCode.Set(&v)
}
// SetMerchantCategoryCodeNil sets the value for MerchantCategoryCode to be an explicit nil
func (o *Credit1099) SetMerchantCategoryCodeNil() {
	o.MerchantCategoryCode.Set(nil)
}

// UnsetMerchantCategoryCode ensures that no value is present for MerchantCategoryCode, not even an explicit nil
func (o *Credit1099) UnsetMerchantCategoryCode() {
	o.MerchantCategoryCode.Unset()
}

// GetNumberOfPaymentTransactions returns the NumberOfPaymentTransactions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetNumberOfPaymentTransactions() string {
	if o == nil || o.NumberOfPaymentTransactions.Get() == nil {
		var ret string
		return ret
	}
	return *o.NumberOfPaymentTransactions.Get()
}

// GetNumberOfPaymentTransactionsOk returns a tuple with the NumberOfPaymentTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetNumberOfPaymentTransactionsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumberOfPaymentTransactions.Get(), o.NumberOfPaymentTransactions.IsSet()
}

// HasNumberOfPaymentTransactions returns a boolean if a field has been set.
func (o *Credit1099) HasNumberOfPaymentTransactions() bool {
	if o != nil && o.NumberOfPaymentTransactions.IsSet() {
		return true
	}

	return false
}

// SetNumberOfPaymentTransactions gets a reference to the given NullableString and assigns it to the NumberOfPaymentTransactions field.
func (o *Credit1099) SetNumberOfPaymentTransactions(v string) {
	o.NumberOfPaymentTransactions.Set(&v)
}
// SetNumberOfPaymentTransactionsNil sets the value for NumberOfPaymentTransactions to be an explicit nil
func (o *Credit1099) SetNumberOfPaymentTransactionsNil() {
	o.NumberOfPaymentTransactions.Set(nil)
}

// UnsetNumberOfPaymentTransactions ensures that no value is present for NumberOfPaymentTransactions, not even an explicit nil
func (o *Credit1099) UnsetNumberOfPaymentTransactions() {
	o.NumberOfPaymentTransactions.Unset()
}

// GetJanuaryAmount returns the JanuaryAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetJanuaryAmount() float64 {
	if o == nil || o.JanuaryAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.JanuaryAmount.Get()
}

// GetJanuaryAmountOk returns a tuple with the JanuaryAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetJanuaryAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JanuaryAmount.Get(), o.JanuaryAmount.IsSet()
}

// HasJanuaryAmount returns a boolean if a field has been set.
func (o *Credit1099) HasJanuaryAmount() bool {
	if o != nil && o.JanuaryAmount.IsSet() {
		return true
	}

	return false
}

// SetJanuaryAmount gets a reference to the given NullableFloat64 and assigns it to the JanuaryAmount field.
func (o *Credit1099) SetJanuaryAmount(v float64) {
	o.JanuaryAmount.Set(&v)
}
// SetJanuaryAmountNil sets the value for JanuaryAmount to be an explicit nil
func (o *Credit1099) SetJanuaryAmountNil() {
	o.JanuaryAmount.Set(nil)
}

// UnsetJanuaryAmount ensures that no value is present for JanuaryAmount, not even an explicit nil
func (o *Credit1099) UnsetJanuaryAmount() {
	o.JanuaryAmount.Unset()
}

// GetFebruaryAmount returns the FebruaryAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetFebruaryAmount() float64 {
	if o == nil || o.FebruaryAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.FebruaryAmount.Get()
}

// GetFebruaryAmountOk returns a tuple with the FebruaryAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetFebruaryAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FebruaryAmount.Get(), o.FebruaryAmount.IsSet()
}

// HasFebruaryAmount returns a boolean if a field has been set.
func (o *Credit1099) HasFebruaryAmount() bool {
	if o != nil && o.FebruaryAmount.IsSet() {
		return true
	}

	return false
}

// SetFebruaryAmount gets a reference to the given NullableFloat64 and assigns it to the FebruaryAmount field.
func (o *Credit1099) SetFebruaryAmount(v float64) {
	o.FebruaryAmount.Set(&v)
}
// SetFebruaryAmountNil sets the value for FebruaryAmount to be an explicit nil
func (o *Credit1099) SetFebruaryAmountNil() {
	o.FebruaryAmount.Set(nil)
}

// UnsetFebruaryAmount ensures that no value is present for FebruaryAmount, not even an explicit nil
func (o *Credit1099) UnsetFebruaryAmount() {
	o.FebruaryAmount.Unset()
}

// GetMarchAmount returns the MarchAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetMarchAmount() float64 {
	if o == nil || o.MarchAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.MarchAmount.Get()
}

// GetMarchAmountOk returns a tuple with the MarchAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetMarchAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MarchAmount.Get(), o.MarchAmount.IsSet()
}

// HasMarchAmount returns a boolean if a field has been set.
func (o *Credit1099) HasMarchAmount() bool {
	if o != nil && o.MarchAmount.IsSet() {
		return true
	}

	return false
}

// SetMarchAmount gets a reference to the given NullableFloat64 and assigns it to the MarchAmount field.
func (o *Credit1099) SetMarchAmount(v float64) {
	o.MarchAmount.Set(&v)
}
// SetMarchAmountNil sets the value for MarchAmount to be an explicit nil
func (o *Credit1099) SetMarchAmountNil() {
	o.MarchAmount.Set(nil)
}

// UnsetMarchAmount ensures that no value is present for MarchAmount, not even an explicit nil
func (o *Credit1099) UnsetMarchAmount() {
	o.MarchAmount.Unset()
}

// GetAprilAmount returns the AprilAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetAprilAmount() float64 {
	if o == nil || o.AprilAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.AprilAmount.Get()
}

// GetAprilAmountOk returns a tuple with the AprilAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetAprilAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AprilAmount.Get(), o.AprilAmount.IsSet()
}

// HasAprilAmount returns a boolean if a field has been set.
func (o *Credit1099) HasAprilAmount() bool {
	if o != nil && o.AprilAmount.IsSet() {
		return true
	}

	return false
}

// SetAprilAmount gets a reference to the given NullableFloat64 and assigns it to the AprilAmount field.
func (o *Credit1099) SetAprilAmount(v float64) {
	o.AprilAmount.Set(&v)
}
// SetAprilAmountNil sets the value for AprilAmount to be an explicit nil
func (o *Credit1099) SetAprilAmountNil() {
	o.AprilAmount.Set(nil)
}

// UnsetAprilAmount ensures that no value is present for AprilAmount, not even an explicit nil
func (o *Credit1099) UnsetAprilAmount() {
	o.AprilAmount.Unset()
}

// GetMayAmount returns the MayAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetMayAmount() float64 {
	if o == nil || o.MayAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.MayAmount.Get()
}

// GetMayAmountOk returns a tuple with the MayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetMayAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MayAmount.Get(), o.MayAmount.IsSet()
}

// HasMayAmount returns a boolean if a field has been set.
func (o *Credit1099) HasMayAmount() bool {
	if o != nil && o.MayAmount.IsSet() {
		return true
	}

	return false
}

// SetMayAmount gets a reference to the given NullableFloat64 and assigns it to the MayAmount field.
func (o *Credit1099) SetMayAmount(v float64) {
	o.MayAmount.Set(&v)
}
// SetMayAmountNil sets the value for MayAmount to be an explicit nil
func (o *Credit1099) SetMayAmountNil() {
	o.MayAmount.Set(nil)
}

// UnsetMayAmount ensures that no value is present for MayAmount, not even an explicit nil
func (o *Credit1099) UnsetMayAmount() {
	o.MayAmount.Unset()
}

// GetJuneAmount returns the JuneAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetJuneAmount() float64 {
	if o == nil || o.JuneAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.JuneAmount.Get()
}

// GetJuneAmountOk returns a tuple with the JuneAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetJuneAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JuneAmount.Get(), o.JuneAmount.IsSet()
}

// HasJuneAmount returns a boolean if a field has been set.
func (o *Credit1099) HasJuneAmount() bool {
	if o != nil && o.JuneAmount.IsSet() {
		return true
	}

	return false
}

// SetJuneAmount gets a reference to the given NullableFloat64 and assigns it to the JuneAmount field.
func (o *Credit1099) SetJuneAmount(v float64) {
	o.JuneAmount.Set(&v)
}
// SetJuneAmountNil sets the value for JuneAmount to be an explicit nil
func (o *Credit1099) SetJuneAmountNil() {
	o.JuneAmount.Set(nil)
}

// UnsetJuneAmount ensures that no value is present for JuneAmount, not even an explicit nil
func (o *Credit1099) UnsetJuneAmount() {
	o.JuneAmount.Unset()
}

// GetJulyAmount returns the JulyAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetJulyAmount() float64 {
	if o == nil || o.JulyAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.JulyAmount.Get()
}

// GetJulyAmountOk returns a tuple with the JulyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetJulyAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JulyAmount.Get(), o.JulyAmount.IsSet()
}

// HasJulyAmount returns a boolean if a field has been set.
func (o *Credit1099) HasJulyAmount() bool {
	if o != nil && o.JulyAmount.IsSet() {
		return true
	}

	return false
}

// SetJulyAmount gets a reference to the given NullableFloat64 and assigns it to the JulyAmount field.
func (o *Credit1099) SetJulyAmount(v float64) {
	o.JulyAmount.Set(&v)
}
// SetJulyAmountNil sets the value for JulyAmount to be an explicit nil
func (o *Credit1099) SetJulyAmountNil() {
	o.JulyAmount.Set(nil)
}

// UnsetJulyAmount ensures that no value is present for JulyAmount, not even an explicit nil
func (o *Credit1099) UnsetJulyAmount() {
	o.JulyAmount.Unset()
}

// GetAugustAmount returns the AugustAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetAugustAmount() float64 {
	if o == nil || o.AugustAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.AugustAmount.Get()
}

// GetAugustAmountOk returns a tuple with the AugustAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetAugustAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AugustAmount.Get(), o.AugustAmount.IsSet()
}

// HasAugustAmount returns a boolean if a field has been set.
func (o *Credit1099) HasAugustAmount() bool {
	if o != nil && o.AugustAmount.IsSet() {
		return true
	}

	return false
}

// SetAugustAmount gets a reference to the given NullableFloat64 and assigns it to the AugustAmount field.
func (o *Credit1099) SetAugustAmount(v float64) {
	o.AugustAmount.Set(&v)
}
// SetAugustAmountNil sets the value for AugustAmount to be an explicit nil
func (o *Credit1099) SetAugustAmountNil() {
	o.AugustAmount.Set(nil)
}

// UnsetAugustAmount ensures that no value is present for AugustAmount, not even an explicit nil
func (o *Credit1099) UnsetAugustAmount() {
	o.AugustAmount.Unset()
}

// GetSeptemberAmount returns the SeptemberAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetSeptemberAmount() float64 {
	if o == nil || o.SeptemberAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.SeptemberAmount.Get()
}

// GetSeptemberAmountOk returns a tuple with the SeptemberAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetSeptemberAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SeptemberAmount.Get(), o.SeptemberAmount.IsSet()
}

// HasSeptemberAmount returns a boolean if a field has been set.
func (o *Credit1099) HasSeptemberAmount() bool {
	if o != nil && o.SeptemberAmount.IsSet() {
		return true
	}

	return false
}

// SetSeptemberAmount gets a reference to the given NullableFloat64 and assigns it to the SeptemberAmount field.
func (o *Credit1099) SetSeptemberAmount(v float64) {
	o.SeptemberAmount.Set(&v)
}
// SetSeptemberAmountNil sets the value for SeptemberAmount to be an explicit nil
func (o *Credit1099) SetSeptemberAmountNil() {
	o.SeptemberAmount.Set(nil)
}

// UnsetSeptemberAmount ensures that no value is present for SeptemberAmount, not even an explicit nil
func (o *Credit1099) UnsetSeptemberAmount() {
	o.SeptemberAmount.Unset()
}

// GetOctoberAmount returns the OctoberAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetOctoberAmount() float64 {
	if o == nil || o.OctoberAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.OctoberAmount.Get()
}

// GetOctoberAmountOk returns a tuple with the OctoberAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetOctoberAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OctoberAmount.Get(), o.OctoberAmount.IsSet()
}

// HasOctoberAmount returns a boolean if a field has been set.
func (o *Credit1099) HasOctoberAmount() bool {
	if o != nil && o.OctoberAmount.IsSet() {
		return true
	}

	return false
}

// SetOctoberAmount gets a reference to the given NullableFloat64 and assigns it to the OctoberAmount field.
func (o *Credit1099) SetOctoberAmount(v float64) {
	o.OctoberAmount.Set(&v)
}
// SetOctoberAmountNil sets the value for OctoberAmount to be an explicit nil
func (o *Credit1099) SetOctoberAmountNil() {
	o.OctoberAmount.Set(nil)
}

// UnsetOctoberAmount ensures that no value is present for OctoberAmount, not even an explicit nil
func (o *Credit1099) UnsetOctoberAmount() {
	o.OctoberAmount.Unset()
}

// GetNovemberAmount returns the NovemberAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetNovemberAmount() float64 {
	if o == nil || o.NovemberAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.NovemberAmount.Get()
}

// GetNovemberAmountOk returns a tuple with the NovemberAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetNovemberAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NovemberAmount.Get(), o.NovemberAmount.IsSet()
}

// HasNovemberAmount returns a boolean if a field has been set.
func (o *Credit1099) HasNovemberAmount() bool {
	if o != nil && o.NovemberAmount.IsSet() {
		return true
	}

	return false
}

// SetNovemberAmount gets a reference to the given NullableFloat64 and assigns it to the NovemberAmount field.
func (o *Credit1099) SetNovemberAmount(v float64) {
	o.NovemberAmount.Set(&v)
}
// SetNovemberAmountNil sets the value for NovemberAmount to be an explicit nil
func (o *Credit1099) SetNovemberAmountNil() {
	o.NovemberAmount.Set(nil)
}

// UnsetNovemberAmount ensures that no value is present for NovemberAmount, not even an explicit nil
func (o *Credit1099) UnsetNovemberAmount() {
	o.NovemberAmount.Unset()
}

// GetDecemberAmount returns the DecemberAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetDecemberAmount() float64 {
	if o == nil || o.DecemberAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.DecemberAmount.Get()
}

// GetDecemberAmountOk returns a tuple with the DecemberAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetDecemberAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DecemberAmount.Get(), o.DecemberAmount.IsSet()
}

// HasDecemberAmount returns a boolean if a field has been set.
func (o *Credit1099) HasDecemberAmount() bool {
	if o != nil && o.DecemberAmount.IsSet() {
		return true
	}

	return false
}

// SetDecemberAmount gets a reference to the given NullableFloat64 and assigns it to the DecemberAmount field.
func (o *Credit1099) SetDecemberAmount(v float64) {
	o.DecemberAmount.Set(&v)
}
// SetDecemberAmountNil sets the value for DecemberAmount to be an explicit nil
func (o *Credit1099) SetDecemberAmountNil() {
	o.DecemberAmount.Set(nil)
}

// UnsetDecemberAmount ensures that no value is present for DecemberAmount, not even an explicit nil
func (o *Credit1099) UnsetDecemberAmount() {
	o.DecemberAmount.Unset()
}

// GetPrimaryState returns the PrimaryState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPrimaryState() string {
	if o == nil || o.PrimaryState.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrimaryState.Get()
}

// GetPrimaryStateOk returns a tuple with the PrimaryState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPrimaryStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrimaryState.Get(), o.PrimaryState.IsSet()
}

// HasPrimaryState returns a boolean if a field has been set.
func (o *Credit1099) HasPrimaryState() bool {
	if o != nil && o.PrimaryState.IsSet() {
		return true
	}

	return false
}

// SetPrimaryState gets a reference to the given NullableString and assigns it to the PrimaryState field.
func (o *Credit1099) SetPrimaryState(v string) {
	o.PrimaryState.Set(&v)
}
// SetPrimaryStateNil sets the value for PrimaryState to be an explicit nil
func (o *Credit1099) SetPrimaryStateNil() {
	o.PrimaryState.Set(nil)
}

// UnsetPrimaryState ensures that no value is present for PrimaryState, not even an explicit nil
func (o *Credit1099) UnsetPrimaryState() {
	o.PrimaryState.Unset()
}

// GetSecondaryState returns the SecondaryState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetSecondaryState() string {
	if o == nil || o.SecondaryState.Get() == nil {
		var ret string
		return ret
	}
	return *o.SecondaryState.Get()
}

// GetSecondaryStateOk returns a tuple with the SecondaryState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetSecondaryStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecondaryState.Get(), o.SecondaryState.IsSet()
}

// HasSecondaryState returns a boolean if a field has been set.
func (o *Credit1099) HasSecondaryState() bool {
	if o != nil && o.SecondaryState.IsSet() {
		return true
	}

	return false
}

// SetSecondaryState gets a reference to the given NullableString and assigns it to the SecondaryState field.
func (o *Credit1099) SetSecondaryState(v string) {
	o.SecondaryState.Set(&v)
}
// SetSecondaryStateNil sets the value for SecondaryState to be an explicit nil
func (o *Credit1099) SetSecondaryStateNil() {
	o.SecondaryState.Set(nil)
}

// UnsetSecondaryState ensures that no value is present for SecondaryState, not even an explicit nil
func (o *Credit1099) UnsetSecondaryState() {
	o.SecondaryState.Unset()
}

// GetPrimaryStateId returns the PrimaryStateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPrimaryStateId() string {
	if o == nil || o.PrimaryStateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrimaryStateId.Get()
}

// GetPrimaryStateIdOk returns a tuple with the PrimaryStateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPrimaryStateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrimaryStateId.Get(), o.PrimaryStateId.IsSet()
}

// HasPrimaryStateId returns a boolean if a field has been set.
func (o *Credit1099) HasPrimaryStateId() bool {
	if o != nil && o.PrimaryStateId.IsSet() {
		return true
	}

	return false
}

// SetPrimaryStateId gets a reference to the given NullableString and assigns it to the PrimaryStateId field.
func (o *Credit1099) SetPrimaryStateId(v string) {
	o.PrimaryStateId.Set(&v)
}
// SetPrimaryStateIdNil sets the value for PrimaryStateId to be an explicit nil
func (o *Credit1099) SetPrimaryStateIdNil() {
	o.PrimaryStateId.Set(nil)
}

// UnsetPrimaryStateId ensures that no value is present for PrimaryStateId, not even an explicit nil
func (o *Credit1099) UnsetPrimaryStateId() {
	o.PrimaryStateId.Unset()
}

// GetSecondaryStateId returns the SecondaryStateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetSecondaryStateId() string {
	if o == nil || o.SecondaryStateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SecondaryStateId.Get()
}

// GetSecondaryStateIdOk returns a tuple with the SecondaryStateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetSecondaryStateIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecondaryStateId.Get(), o.SecondaryStateId.IsSet()
}

// HasSecondaryStateId returns a boolean if a field has been set.
func (o *Credit1099) HasSecondaryStateId() bool {
	if o != nil && o.SecondaryStateId.IsSet() {
		return true
	}

	return false
}

// SetSecondaryStateId gets a reference to the given NullableString and assigns it to the SecondaryStateId field.
func (o *Credit1099) SetSecondaryStateId(v string) {
	o.SecondaryStateId.Set(&v)
}
// SetSecondaryStateIdNil sets the value for SecondaryStateId to be an explicit nil
func (o *Credit1099) SetSecondaryStateIdNil() {
	o.SecondaryStateId.Set(nil)
}

// UnsetSecondaryStateId ensures that no value is present for SecondaryStateId, not even an explicit nil
func (o *Credit1099) UnsetSecondaryStateId() {
	o.SecondaryStateId.Unset()
}

// GetPrimaryStateIncomeTax returns the PrimaryStateIncomeTax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetPrimaryStateIncomeTax() float64 {
	if o == nil || o.PrimaryStateIncomeTax.Get() == nil {
		var ret float64
		return ret
	}
	return *o.PrimaryStateIncomeTax.Get()
}

// GetPrimaryStateIncomeTaxOk returns a tuple with the PrimaryStateIncomeTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetPrimaryStateIncomeTaxOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrimaryStateIncomeTax.Get(), o.PrimaryStateIncomeTax.IsSet()
}

// HasPrimaryStateIncomeTax returns a boolean if a field has been set.
func (o *Credit1099) HasPrimaryStateIncomeTax() bool {
	if o != nil && o.PrimaryStateIncomeTax.IsSet() {
		return true
	}

	return false
}

// SetPrimaryStateIncomeTax gets a reference to the given NullableFloat64 and assigns it to the PrimaryStateIncomeTax field.
func (o *Credit1099) SetPrimaryStateIncomeTax(v float64) {
	o.PrimaryStateIncomeTax.Set(&v)
}
// SetPrimaryStateIncomeTaxNil sets the value for PrimaryStateIncomeTax to be an explicit nil
func (o *Credit1099) SetPrimaryStateIncomeTaxNil() {
	o.PrimaryStateIncomeTax.Set(nil)
}

// UnsetPrimaryStateIncomeTax ensures that no value is present for PrimaryStateIncomeTax, not even an explicit nil
func (o *Credit1099) UnsetPrimaryStateIncomeTax() {
	o.PrimaryStateIncomeTax.Unset()
}

// GetSecondaryStateIncomeTax returns the SecondaryStateIncomeTax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Credit1099) GetSecondaryStateIncomeTax() float64 {
	if o == nil || o.SecondaryStateIncomeTax.Get() == nil {
		var ret float64
		return ret
	}
	return *o.SecondaryStateIncomeTax.Get()
}

// GetSecondaryStateIncomeTaxOk returns a tuple with the SecondaryStateIncomeTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Credit1099) GetSecondaryStateIncomeTaxOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecondaryStateIncomeTax.Get(), o.SecondaryStateIncomeTax.IsSet()
}

// HasSecondaryStateIncomeTax returns a boolean if a field has been set.
func (o *Credit1099) HasSecondaryStateIncomeTax() bool {
	if o != nil && o.SecondaryStateIncomeTax.IsSet() {
		return true
	}

	return false
}

// SetSecondaryStateIncomeTax gets a reference to the given NullableFloat64 and assigns it to the SecondaryStateIncomeTax field.
func (o *Credit1099) SetSecondaryStateIncomeTax(v float64) {
	o.SecondaryStateIncomeTax.Set(&v)
}
// SetSecondaryStateIncomeTaxNil sets the value for SecondaryStateIncomeTax to be an explicit nil
func (o *Credit1099) SetSecondaryStateIncomeTaxNil() {
	o.SecondaryStateIncomeTax.Set(nil)
}

// UnsetSecondaryStateIncomeTax ensures that no value is present for SecondaryStateIncomeTax, not even an explicit nil
func (o *Credit1099) UnsetSecondaryStateIncomeTax() {
	o.SecondaryStateIncomeTax.Unset()
}

func (o Credit1099) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["document_id"] = o.DocumentId.Get()
	}
	if o.DocumentMetadata != nil {
		toSerialize["document_metadata"] = o.DocumentMetadata
	}
	if o.Form1099Type != nil {
		toSerialize["form_1099_type"] = o.Form1099Type
	}
	if o.Recipient != nil {
		toSerialize["recipient"] = o.Recipient
	}
	if o.Payer != nil {
		toSerialize["payer"] = o.Payer
	}
	if o.Filer != nil {
		toSerialize["filer"] = o.Filer
	}
	if o.TaxYear.IsSet() {
		toSerialize["tax_year"] = o.TaxYear.Get()
	}
	if o.Rents.IsSet() {
		toSerialize["rents"] = o.Rents.Get()
	}
	if o.Royalties.IsSet() {
		toSerialize["royalties"] = o.Royalties.Get()
	}
	if o.OtherIncome.IsSet() {
		toSerialize["other_income"] = o.OtherIncome.Get()
	}
	if o.FederalIncomeTaxWithheld.IsSet() {
		toSerialize["federal_income_tax_withheld"] = o.FederalIncomeTaxWithheld.Get()
	}
	if o.FishingBoatProceeds.IsSet() {
		toSerialize["fishing_boat_proceeds"] = o.FishingBoatProceeds.Get()
	}
	if o.MedicalAndHealthcarePayments.IsSet() {
		toSerialize["medical_and_healthcare_payments"] = o.MedicalAndHealthcarePayments.Get()
	}
	if o.NonemployeeCompensation.IsSet() {
		toSerialize["nonemployee_compensation"] = o.NonemployeeCompensation.Get()
	}
	if o.SubstitutePaymentsInLieuOfDividendsOrInterest.IsSet() {
		toSerialize["substitute_payments_in_lieu_of_dividends_or_interest"] = o.SubstitutePaymentsInLieuOfDividendsOrInterest.Get()
	}
	if o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.IsSet() {
		toSerialize["payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer"] = o.PayerMadeDirectSalesOf5000OrMoreOfConsumerProductsToBuyer.Get()
	}
	if o.CropInsuranceProceeds.IsSet() {
		toSerialize["crop_insurance_proceeds"] = o.CropInsuranceProceeds.Get()
	}
	if o.ExcessGoldenParachutePayments.IsSet() {
		toSerialize["excess_golden_parachute_payments"] = o.ExcessGoldenParachutePayments.Get()
	}
	if o.GrossProceedsPaidToAnAttorney.IsSet() {
		toSerialize["gross_proceeds_paid_to_an_attorney"] = o.GrossProceedsPaidToAnAttorney.Get()
	}
	if o.Section409aDeferrals.IsSet() {
		toSerialize["section_409a_deferrals"] = o.Section409aDeferrals.Get()
	}
	if o.Section409aIncome.IsSet() {
		toSerialize["section_409a_income"] = o.Section409aIncome.Get()
	}
	if o.StateTaxWithheld.IsSet() {
		toSerialize["state_tax_withheld"] = o.StateTaxWithheld.Get()
	}
	if o.StateTaxWithheldLower.IsSet() {
		toSerialize["state_tax_withheld_lower"] = o.StateTaxWithheldLower.Get()
	}
	if o.PayerStateNumber.IsSet() {
		toSerialize["payer_state_number"] = o.PayerStateNumber.Get()
	}
	if o.PayerStateNumberLower.IsSet() {
		toSerialize["payer_state_number_lower"] = o.PayerStateNumberLower.Get()
	}
	if o.StateIncome.IsSet() {
		toSerialize["state_income"] = o.StateIncome.Get()
	}
	if o.StateIncomeLower.IsSet() {
		toSerialize["state_income_lower"] = o.StateIncomeLower.Get()
	}
	if o.TransactionsReported.IsSet() {
		toSerialize["transactions_reported"] = o.TransactionsReported.Get()
	}
	if o.PseName.IsSet() {
		toSerialize["pse_name"] = o.PseName.Get()
	}
	if o.PseTelephoneNumber.IsSet() {
		toSerialize["pse_telephone_number"] = o.PseTelephoneNumber.Get()
	}
	if o.GrossAmount.IsSet() {
		toSerialize["gross_amount"] = o.GrossAmount.Get()
	}
	if o.CardNotPresentTransaction.IsSet() {
		toSerialize["card_not_present_transaction"] = o.CardNotPresentTransaction.Get()
	}
	if o.MerchantCategoryCode.IsSet() {
		toSerialize["merchant_category_code"] = o.MerchantCategoryCode.Get()
	}
	if o.NumberOfPaymentTransactions.IsSet() {
		toSerialize["number_of_payment_transactions"] = o.NumberOfPaymentTransactions.Get()
	}
	if o.JanuaryAmount.IsSet() {
		toSerialize["january_amount"] = o.JanuaryAmount.Get()
	}
	if o.FebruaryAmount.IsSet() {
		toSerialize["february_amount"] = o.FebruaryAmount.Get()
	}
	if o.MarchAmount.IsSet() {
		toSerialize["march_amount"] = o.MarchAmount.Get()
	}
	if o.AprilAmount.IsSet() {
		toSerialize["april_amount"] = o.AprilAmount.Get()
	}
	if o.MayAmount.IsSet() {
		toSerialize["may_amount"] = o.MayAmount.Get()
	}
	if o.JuneAmount.IsSet() {
		toSerialize["june_amount"] = o.JuneAmount.Get()
	}
	if o.JulyAmount.IsSet() {
		toSerialize["july_amount"] = o.JulyAmount.Get()
	}
	if o.AugustAmount.IsSet() {
		toSerialize["august_amount"] = o.AugustAmount.Get()
	}
	if o.SeptemberAmount.IsSet() {
		toSerialize["september_amount"] = o.SeptemberAmount.Get()
	}
	if o.OctoberAmount.IsSet() {
		toSerialize["october_amount"] = o.OctoberAmount.Get()
	}
	if o.NovemberAmount.IsSet() {
		toSerialize["november_amount"] = o.NovemberAmount.Get()
	}
	if o.DecemberAmount.IsSet() {
		toSerialize["december_amount"] = o.DecemberAmount.Get()
	}
	if o.PrimaryState.IsSet() {
		toSerialize["primary_state"] = o.PrimaryState.Get()
	}
	if o.SecondaryState.IsSet() {
		toSerialize["secondary_state"] = o.SecondaryState.Get()
	}
	if o.PrimaryStateId.IsSet() {
		toSerialize["primary_state_id"] = o.PrimaryStateId.Get()
	}
	if o.SecondaryStateId.IsSet() {
		toSerialize["secondary_state_id"] = o.SecondaryStateId.Get()
	}
	if o.PrimaryStateIncomeTax.IsSet() {
		toSerialize["primary_state_income_tax"] = o.PrimaryStateIncomeTax.Get()
	}
	if o.SecondaryStateIncomeTax.IsSet() {
		toSerialize["secondary_state_income_tax"] = o.SecondaryStateIncomeTax.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *Credit1099) UnmarshalJSON(bytes []byte) (err error) {
	varCredit1099 := _Credit1099{}

	if err = json.Unmarshal(bytes, &varCredit1099); err == nil {
		*o = Credit1099(varCredit1099)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "document_id")
		delete(additionalProperties, "document_metadata")
		delete(additionalProperties, "form_1099_type")
		delete(additionalProperties, "recipient")
		delete(additionalProperties, "payer")
		delete(additionalProperties, "filer")
		delete(additionalProperties, "tax_year")
		delete(additionalProperties, "rents")
		delete(additionalProperties, "royalties")
		delete(additionalProperties, "other_income")
		delete(additionalProperties, "federal_income_tax_withheld")
		delete(additionalProperties, "fishing_boat_proceeds")
		delete(additionalProperties, "medical_and_healthcare_payments")
		delete(additionalProperties, "nonemployee_compensation")
		delete(additionalProperties, "substitute_payments_in_lieu_of_dividends_or_interest")
		delete(additionalProperties, "payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer")
		delete(additionalProperties, "crop_insurance_proceeds")
		delete(additionalProperties, "excess_golden_parachute_payments")
		delete(additionalProperties, "gross_proceeds_paid_to_an_attorney")
		delete(additionalProperties, "section_409a_deferrals")
		delete(additionalProperties, "section_409a_income")
		delete(additionalProperties, "state_tax_withheld")
		delete(additionalProperties, "state_tax_withheld_lower")
		delete(additionalProperties, "payer_state_number")
		delete(additionalProperties, "payer_state_number_lower")
		delete(additionalProperties, "state_income")
		delete(additionalProperties, "state_income_lower")
		delete(additionalProperties, "transactions_reported")
		delete(additionalProperties, "pse_name")
		delete(additionalProperties, "pse_telephone_number")
		delete(additionalProperties, "gross_amount")
		delete(additionalProperties, "card_not_present_transaction")
		delete(additionalProperties, "merchant_category_code")
		delete(additionalProperties, "number_of_payment_transactions")
		delete(additionalProperties, "january_amount")
		delete(additionalProperties, "february_amount")
		delete(additionalProperties, "march_amount")
		delete(additionalProperties, "april_amount")
		delete(additionalProperties, "may_amount")
		delete(additionalProperties, "june_amount")
		delete(additionalProperties, "july_amount")
		delete(additionalProperties, "august_amount")
		delete(additionalProperties, "september_amount")
		delete(additionalProperties, "october_amount")
		delete(additionalProperties, "november_amount")
		delete(additionalProperties, "december_amount")
		delete(additionalProperties, "primary_state")
		delete(additionalProperties, "secondary_state")
		delete(additionalProperties, "primary_state_id")
		delete(additionalProperties, "secondary_state_id")
		delete(additionalProperties, "primary_state_income_tax")
		delete(additionalProperties, "secondary_state_income_tax")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCredit1099 struct {
	value *Credit1099
	isSet bool
}

func (v NullableCredit1099) Get() *Credit1099 {
	return v.value
}

func (v *NullableCredit1099) Set(val *Credit1099) {
	v.value = val
	v.isSet = true
}

func (v NullableCredit1099) IsSet() bool {
	return v.isSet
}

func (v *NullableCredit1099) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredit1099(val *Credit1099) *NullableCredit1099 {
	return &NullableCredit1099{value: val, isSet: true}
}

func (v NullableCredit1099) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredit1099) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


