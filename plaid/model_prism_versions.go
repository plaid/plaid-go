/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PrismVersions The versions of Prism products to evaluate
type PrismVersions struct {
	Firstdetect NullablePrismFirstDetectVersion `json:"firstdetect,omitempty"`
	Cashscore NullablePrismCashScoreVersion `json:"cashscore,omitempty"`
	Insights NullablePrismInsightsVersion `json:"insights,omitempty"`
}

// NewPrismVersions instantiates a new PrismVersions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrismVersions() *PrismVersions {
	this := PrismVersions{}
	return &this
}

// NewPrismVersionsWithDefaults instantiates a new PrismVersions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrismVersionsWithDefaults() *PrismVersions {
	this := PrismVersions{}
	return &this
}

// GetFirstdetect returns the Firstdetect field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrismVersions) GetFirstdetect() PrismFirstDetectVersion {
	if o == nil || o.Firstdetect.Get() == nil {
		var ret PrismFirstDetectVersion
		return ret
	}
	return *o.Firstdetect.Get()
}

// GetFirstdetectOk returns a tuple with the Firstdetect field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrismVersions) GetFirstdetectOk() (*PrismFirstDetectVersion, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Firstdetect.Get(), o.Firstdetect.IsSet()
}

// HasFirstdetect returns a boolean if a field has been set.
func (o *PrismVersions) HasFirstdetect() bool {
	if o != nil && o.Firstdetect.IsSet() {
		return true
	}

	return false
}

// SetFirstdetect gets a reference to the given NullablePrismFirstDetectVersion and assigns it to the Firstdetect field.
func (o *PrismVersions) SetFirstdetect(v PrismFirstDetectVersion) {
	o.Firstdetect.Set(&v)
}
// SetFirstdetectNil sets the value for Firstdetect to be an explicit nil
func (o *PrismVersions) SetFirstdetectNil() {
	o.Firstdetect.Set(nil)
}

// UnsetFirstdetect ensures that no value is present for Firstdetect, not even an explicit nil
func (o *PrismVersions) UnsetFirstdetect() {
	o.Firstdetect.Unset()
}

// GetCashscore returns the Cashscore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrismVersions) GetCashscore() PrismCashScoreVersion {
	if o == nil || o.Cashscore.Get() == nil {
		var ret PrismCashScoreVersion
		return ret
	}
	return *o.Cashscore.Get()
}

// GetCashscoreOk returns a tuple with the Cashscore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrismVersions) GetCashscoreOk() (*PrismCashScoreVersion, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Cashscore.Get(), o.Cashscore.IsSet()
}

// HasCashscore returns a boolean if a field has been set.
func (o *PrismVersions) HasCashscore() bool {
	if o != nil && o.Cashscore.IsSet() {
		return true
	}

	return false
}

// SetCashscore gets a reference to the given NullablePrismCashScoreVersion and assigns it to the Cashscore field.
func (o *PrismVersions) SetCashscore(v PrismCashScoreVersion) {
	o.Cashscore.Set(&v)
}
// SetCashscoreNil sets the value for Cashscore to be an explicit nil
func (o *PrismVersions) SetCashscoreNil() {
	o.Cashscore.Set(nil)
}

// UnsetCashscore ensures that no value is present for Cashscore, not even an explicit nil
func (o *PrismVersions) UnsetCashscore() {
	o.Cashscore.Unset()
}

// GetInsights returns the Insights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrismVersions) GetInsights() PrismInsightsVersion {
	if o == nil || o.Insights.Get() == nil {
		var ret PrismInsightsVersion
		return ret
	}
	return *o.Insights.Get()
}

// GetInsightsOk returns a tuple with the Insights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrismVersions) GetInsightsOk() (*PrismInsightsVersion, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Insights.Get(), o.Insights.IsSet()
}

// HasInsights returns a boolean if a field has been set.
func (o *PrismVersions) HasInsights() bool {
	if o != nil && o.Insights.IsSet() {
		return true
	}

	return false
}

// SetInsights gets a reference to the given NullablePrismInsightsVersion and assigns it to the Insights field.
func (o *PrismVersions) SetInsights(v PrismInsightsVersion) {
	o.Insights.Set(&v)
}
// SetInsightsNil sets the value for Insights to be an explicit nil
func (o *PrismVersions) SetInsightsNil() {
	o.Insights.Set(nil)
}

// UnsetInsights ensures that no value is present for Insights, not even an explicit nil
func (o *PrismVersions) UnsetInsights() {
	o.Insights.Unset()
}

func (o PrismVersions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Firstdetect.IsSet() {
		toSerialize["firstdetect"] = o.Firstdetect.Get()
	}
	if o.Cashscore.IsSet() {
		toSerialize["cashscore"] = o.Cashscore.Get()
	}
	if o.Insights.IsSet() {
		toSerialize["insights"] = o.Insights.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePrismVersions struct {
	value *PrismVersions
	isSet bool
}

func (v NullablePrismVersions) Get() *PrismVersions {
	return v.value
}

func (v *NullablePrismVersions) Set(val *PrismVersions) {
	v.value = val
	v.isSet = true
}

func (v NullablePrismVersions) IsSet() bool {
	return v.isSet
}

func (v *NullablePrismVersions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrismVersions(val *PrismVersions) *NullablePrismVersions {
	return &NullablePrismVersions{value: val, isSet: true}
}

func (v NullablePrismVersions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrismVersions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


