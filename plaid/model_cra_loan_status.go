/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"fmt"
)

// CraLoanStatus The status of the loan.
type CraLoanStatus string

var _ = fmt.Printf

// List of CraLoanStatus
const (
	CRALOANSTATUS_APPROVED CraLoanStatus = "APPROVED"
	CRALOANSTATUS_DECLINED CraLoanStatus = "DECLINED"
	CRALOANSTATUS_BOOKED CraLoanStatus = "BOOKED"
	CRALOANSTATUS_CURRENT CraLoanStatus = "CURRENT"
	CRALOANSTATUS_DELINQUENT CraLoanStatus = "DELINQUENT"
	CRALOANSTATUS_DEFAULT CraLoanStatus = "DEFAULT"
	CRALOANSTATUS_CHARGED_OFF CraLoanStatus = "CHARGED_OFF"
	CRALOANSTATUS_TRANSFERRED CraLoanStatus = "TRANSFERRED"
	CRALOANSTATUS_PAID_OFF CraLoanStatus = "PAID_OFF"
	CRALOANSTATUS_OTHER CraLoanStatus = "OTHER"
)

var allowedCraLoanStatusEnumValues = []CraLoanStatus{
	"APPROVED",
	"DECLINED",
	"BOOKED",
	"CURRENT",
	"DELINQUENT",
	"DEFAULT",
	"CHARGED_OFF",
	"TRANSFERRED",
	"PAID_OFF",
	"OTHER",
}

func (v *CraLoanStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	enumTypeValue := CraLoanStatus(value)


	*v = enumTypeValue
	return nil
}

// NewCraLoanStatusFromValue returns a pointer to a valid CraLoanStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCraLoanStatusFromValue(v string) (*CraLoanStatus, error) {
	ev := CraLoanStatus(v)


	return &ev, nil
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CraLoanStatus) IsValid() bool {
	for _, existing := range allowedCraLoanStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CraLoanStatus value
func (v CraLoanStatus) Ptr() *CraLoanStatus {
	return &v
}

type NullableCraLoanStatus struct {
	value *CraLoanStatus
	isSet bool
}

func (v NullableCraLoanStatus) Get() *CraLoanStatus {
	return v.value
}

func (v *NullableCraLoanStatus) Set(val *CraLoanStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCraLoanStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCraLoanStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCraLoanStatus(val *CraLoanStatus) *NullableCraLoanStatus {
	return &NullableCraLoanStatus{value: val, isSet: true}
}

func (v NullableCraLoanStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCraLoanStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

