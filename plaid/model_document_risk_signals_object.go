/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.128.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// DocumentRiskSignalsObject Object containing fraud risk data for a set of income documents
type DocumentRiskSignalsObject struct {
	// ID of the payroll provider account.
	AccountId NullableString `json:"account_id"`
	// Array of document metadata and associated risk signals per document
	SingleDocumentRiskSignals []SingleDocumentRiskSignal `json:"single_document_risk_signals"`
	// Array of risk signals computed from a set of uploaded documents and the associated documents' metadata
	MultiDocumentRiskSignals []MultiDocumentRiskSignal `json:"multi_document_risk_signals"`
	AdditionalProperties map[string]interface{}
}

type _DocumentRiskSignalsObject DocumentRiskSignalsObject

// NewDocumentRiskSignalsObject instantiates a new DocumentRiskSignalsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentRiskSignalsObject(accountId NullableString, singleDocumentRiskSignals []SingleDocumentRiskSignal, multiDocumentRiskSignals []MultiDocumentRiskSignal) *DocumentRiskSignalsObject {
	this := DocumentRiskSignalsObject{}
	this.AccountId = accountId
	this.SingleDocumentRiskSignals = singleDocumentRiskSignals
	this.MultiDocumentRiskSignals = multiDocumentRiskSignals
	return &this
}

// NewDocumentRiskSignalsObjectWithDefaults instantiates a new DocumentRiskSignalsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentRiskSignalsObjectWithDefaults() *DocumentRiskSignalsObject {
	this := DocumentRiskSignalsObject{}
	return &this
}

// GetAccountId returns the AccountId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DocumentRiskSignalsObject) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocumentRiskSignalsObject) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// SetAccountId sets field value
func (o *DocumentRiskSignalsObject) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// GetSingleDocumentRiskSignals returns the SingleDocumentRiskSignals field value
func (o *DocumentRiskSignalsObject) GetSingleDocumentRiskSignals() []SingleDocumentRiskSignal {
	if o == nil {
		var ret []SingleDocumentRiskSignal
		return ret
	}

	return o.SingleDocumentRiskSignals
}

// GetSingleDocumentRiskSignalsOk returns a tuple with the SingleDocumentRiskSignals field value
// and a boolean to check if the value has been set.
func (o *DocumentRiskSignalsObject) GetSingleDocumentRiskSignalsOk() (*[]SingleDocumentRiskSignal, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SingleDocumentRiskSignals, true
}

// SetSingleDocumentRiskSignals sets field value
func (o *DocumentRiskSignalsObject) SetSingleDocumentRiskSignals(v []SingleDocumentRiskSignal) {
	o.SingleDocumentRiskSignals = v
}

// GetMultiDocumentRiskSignals returns the MultiDocumentRiskSignals field value
func (o *DocumentRiskSignalsObject) GetMultiDocumentRiskSignals() []MultiDocumentRiskSignal {
	if o == nil {
		var ret []MultiDocumentRiskSignal
		return ret
	}

	return o.MultiDocumentRiskSignals
}

// GetMultiDocumentRiskSignalsOk returns a tuple with the MultiDocumentRiskSignals field value
// and a boolean to check if the value has been set.
func (o *DocumentRiskSignalsObject) GetMultiDocumentRiskSignalsOk() (*[]MultiDocumentRiskSignal, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MultiDocumentRiskSignals, true
}

// SetMultiDocumentRiskSignals sets field value
func (o *DocumentRiskSignalsObject) SetMultiDocumentRiskSignals(v []MultiDocumentRiskSignal) {
	o.MultiDocumentRiskSignals = v
}

func (o DocumentRiskSignalsObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if true {
		toSerialize["single_document_risk_signals"] = o.SingleDocumentRiskSignals
	}
	if true {
		toSerialize["multi_document_risk_signals"] = o.MultiDocumentRiskSignals
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DocumentRiskSignalsObject) UnmarshalJSON(bytes []byte) (err error) {
	varDocumentRiskSignalsObject := _DocumentRiskSignalsObject{}

	if err = json.Unmarshal(bytes, &varDocumentRiskSignalsObject); err == nil {
		*o = DocumentRiskSignalsObject(varDocumentRiskSignalsObject)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "single_document_risk_signals")
		delete(additionalProperties, "multi_document_risk_signals")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDocumentRiskSignalsObject struct {
	value *DocumentRiskSignalsObject
	isSet bool
}

func (v NullableDocumentRiskSignalsObject) Get() *DocumentRiskSignalsObject {
	return v.value
}

func (v *NullableDocumentRiskSignalsObject) Set(val *DocumentRiskSignalsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentRiskSignalsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentRiskSignalsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentRiskSignalsObject(val *DocumentRiskSignalsObject) *NullableDocumentRiskSignalsObject {
	return &NullableDocumentRiskSignalsObject{value: val, isSet: true}
}

func (v NullableDocumentRiskSignalsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentRiskSignalsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


