/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
	"time"
)

// BeaconUserAccountInsightsGetResponse The response schema for `/beacon/user/account/insights/get`
type BeaconUserAccountInsightsGetResponse struct {
	// ID of the associated Beacon User.
	BeaconUserId string `json:"beacon_user_id"`
	// An ISO8601 formatted timestamp.
	CreatedAt time.Time `json:"created_at"`
	// An ISO8601 formatted timestamp. This field indicates the last time the resource was modified.
	UpdatedAt time.Time `json:"updated_at"`
	BankAccountInsights BeaconBankAccounts `json:"bank_account_insights"`
	// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
	RequestId string `json:"request_id"`
	AdditionalProperties map[string]interface{}
}

type _BeaconUserAccountInsightsGetResponse BeaconUserAccountInsightsGetResponse

// NewBeaconUserAccountInsightsGetResponse instantiates a new BeaconUserAccountInsightsGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconUserAccountInsightsGetResponse(beaconUserId string, createdAt time.Time, updatedAt time.Time, bankAccountInsights BeaconBankAccounts, requestId string) *BeaconUserAccountInsightsGetResponse {
	this := BeaconUserAccountInsightsGetResponse{}
	this.BeaconUserId = beaconUserId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.BankAccountInsights = bankAccountInsights
	this.RequestId = requestId
	return &this
}

// NewBeaconUserAccountInsightsGetResponseWithDefaults instantiates a new BeaconUserAccountInsightsGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconUserAccountInsightsGetResponseWithDefaults() *BeaconUserAccountInsightsGetResponse {
	this := BeaconUserAccountInsightsGetResponse{}
	return &this
}

// GetBeaconUserId returns the BeaconUserId field value
func (o *BeaconUserAccountInsightsGetResponse) GetBeaconUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeaconUserId
}

// GetBeaconUserIdOk returns a tuple with the BeaconUserId field value
// and a boolean to check if the value has been set.
func (o *BeaconUserAccountInsightsGetResponse) GetBeaconUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BeaconUserId, true
}

// SetBeaconUserId sets field value
func (o *BeaconUserAccountInsightsGetResponse) SetBeaconUserId(v string) {
	o.BeaconUserId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BeaconUserAccountInsightsGetResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BeaconUserAccountInsightsGetResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BeaconUserAccountInsightsGetResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BeaconUserAccountInsightsGetResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BeaconUserAccountInsightsGetResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BeaconUserAccountInsightsGetResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetBankAccountInsights returns the BankAccountInsights field value
func (o *BeaconUserAccountInsightsGetResponse) GetBankAccountInsights() BeaconBankAccounts {
	if o == nil {
		var ret BeaconBankAccounts
		return ret
	}

	return o.BankAccountInsights
}

// GetBankAccountInsightsOk returns a tuple with the BankAccountInsights field value
// and a boolean to check if the value has been set.
func (o *BeaconUserAccountInsightsGetResponse) GetBankAccountInsightsOk() (*BeaconBankAccounts, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankAccountInsights, true
}

// SetBankAccountInsights sets field value
func (o *BeaconUserAccountInsightsGetResponse) SetBankAccountInsights(v BeaconBankAccounts) {
	o.BankAccountInsights = v
}

// GetRequestId returns the RequestId field value
func (o *BeaconUserAccountInsightsGetResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *BeaconUserAccountInsightsGetResponse) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *BeaconUserAccountInsightsGetResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o BeaconUserAccountInsightsGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["beacon_user_id"] = o.BeaconUserId
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["bank_account_insights"] = o.BankAccountInsights
	}
	if true {
		toSerialize["request_id"] = o.RequestId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconUserAccountInsightsGetResponse) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconUserAccountInsightsGetResponse := _BeaconUserAccountInsightsGetResponse{}

	if err = json.Unmarshal(bytes, &varBeaconUserAccountInsightsGetResponse); err == nil {
		*o = BeaconUserAccountInsightsGetResponse(varBeaconUserAccountInsightsGetResponse)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "beacon_user_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "bank_account_insights")
		delete(additionalProperties, "request_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconUserAccountInsightsGetResponse struct {
	value *BeaconUserAccountInsightsGetResponse
	isSet bool
}

func (v NullableBeaconUserAccountInsightsGetResponse) Get() *BeaconUserAccountInsightsGetResponse {
	return v.value
}

func (v *NullableBeaconUserAccountInsightsGetResponse) Set(val *BeaconUserAccountInsightsGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconUserAccountInsightsGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconUserAccountInsightsGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconUserAccountInsightsGetResponse(val *BeaconUserAccountInsightsGetResponse) *NullableBeaconUserAccountInsightsGetResponse {
	return &NullableBeaconUserAccountInsightsGetResponse{value: val, isSet: true}
}

func (v NullableBeaconUserAccountInsightsGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconUserAccountInsightsGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


