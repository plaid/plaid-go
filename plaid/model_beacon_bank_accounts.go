/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.556.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BeaconBankAccounts A collection of Bank Accounts linked to an Item that is associated with this Beacon User.
type BeaconBankAccounts struct {
	// The Plaid Item ID the Bank Accounts belong to.
	ItemId string `json:"item_id"`
	Accounts []BeaconBankAccountInsights `json:"accounts"`
	AdditionalProperties map[string]interface{}
}

type _BeaconBankAccounts BeaconBankAccounts

// NewBeaconBankAccounts instantiates a new BeaconBankAccounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconBankAccounts(itemId string, accounts []BeaconBankAccountInsights) *BeaconBankAccounts {
	this := BeaconBankAccounts{}
	this.ItemId = itemId
	this.Accounts = accounts
	return &this
}

// NewBeaconBankAccountsWithDefaults instantiates a new BeaconBankAccounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconBankAccountsWithDefaults() *BeaconBankAccounts {
	this := BeaconBankAccounts{}
	return &this
}

// GetItemId returns the ItemId field value
func (o *BeaconBankAccounts) GetItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *BeaconBankAccounts) GetItemIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *BeaconBankAccounts) SetItemId(v string) {
	o.ItemId = v
}

// GetAccounts returns the Accounts field value
func (o *BeaconBankAccounts) GetAccounts() []BeaconBankAccountInsights {
	if o == nil {
		var ret []BeaconBankAccountInsights
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *BeaconBankAccounts) GetAccountsOk() (*[]BeaconBankAccountInsights, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Accounts, true
}

// SetAccounts sets field value
func (o *BeaconBankAccounts) SetAccounts(v []BeaconBankAccountInsights) {
	o.Accounts = v
}

func (o BeaconBankAccounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["item_id"] = o.ItemId
	}
	if true {
		toSerialize["accounts"] = o.Accounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BeaconBankAccounts) UnmarshalJSON(bytes []byte) (err error) {
	varBeaconBankAccounts := _BeaconBankAccounts{}

	if err = json.Unmarshal(bytes, &varBeaconBankAccounts); err == nil {
		*o = BeaconBankAccounts(varBeaconBankAccounts)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "accounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBeaconBankAccounts struct {
	value *BeaconBankAccounts
	isSet bool
}

func (v NullableBeaconBankAccounts) Get() *BeaconBankAccounts {
	return v.value
}

func (v *NullableBeaconBankAccounts) Set(val *BeaconBankAccounts) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconBankAccounts) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconBankAccounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconBankAccounts(val *BeaconBankAccounts) *NullableBeaconBankAccounts {
	return &NullableBeaconBankAccounts{value: val, isSet: true}
}

func (v NullableBeaconBankAccounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconBankAccounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


