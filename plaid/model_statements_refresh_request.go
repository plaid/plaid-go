/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.517.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// StatementsRefreshRequest StatementsRefreshRequest defines the request schema for `/statements/refresh`
type StatementsRefreshRequest struct {
	// The access token associated with the Item data is being requested for.
	AccessToken string `json:"access_token"`
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The start date for statements, in “YYYY-MM-DD” format, e.g. \"2023-08-30\". To determine whether a statement falls within the specified date range, Plaid will use the statement posted date. The statement posted date is typically either the last day of the statement period, or the following day.
	StartDate string `json:"start_date"`
	// The end date for statements, in “YYYY-MM-DD” format, e.g. \"2023-10-30\". You can request up to two years of data. To determine whether a statement falls within the specified date range, Plaid will use the statement posted date. The statement posted date is typically either the last day of the statement period, or the following day.
	EndDate string `json:"end_date"`
}

// NewStatementsRefreshRequest instantiates a new StatementsRefreshRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatementsRefreshRequest(accessToken string, startDate string, endDate string) *StatementsRefreshRequest {
	this := StatementsRefreshRequest{}
	this.AccessToken = accessToken
	this.StartDate = startDate
	this.EndDate = endDate
	return &this
}

// NewStatementsRefreshRequestWithDefaults instantiates a new StatementsRefreshRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatementsRefreshRequestWithDefaults() *StatementsRefreshRequest {
	this := StatementsRefreshRequest{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *StatementsRefreshRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *StatementsRefreshRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *StatementsRefreshRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *StatementsRefreshRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatementsRefreshRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *StatementsRefreshRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *StatementsRefreshRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *StatementsRefreshRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatementsRefreshRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *StatementsRefreshRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *StatementsRefreshRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetStartDate returns the StartDate field value
func (o *StatementsRefreshRequest) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *StatementsRefreshRequest) GetStartDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *StatementsRefreshRequest) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *StatementsRefreshRequest) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *StatementsRefreshRequest) GetEndDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *StatementsRefreshRequest) SetEndDate(v string) {
	o.EndDate = v
}

func (o StatementsRefreshRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["start_date"] = o.StartDate
	}
	if true {
		toSerialize["end_date"] = o.EndDate
	}
	return json.Marshal(toSerialize)
}

type NullableStatementsRefreshRequest struct {
	value *StatementsRefreshRequest
	isSet bool
}

func (v NullableStatementsRefreshRequest) Get() *StatementsRefreshRequest {
	return v.value
}

func (v *NullableStatementsRefreshRequest) Set(val *StatementsRefreshRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStatementsRefreshRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStatementsRefreshRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatementsRefreshRequest(val *StatementsRefreshRequest) *NullableStatementsRefreshRequest {
	return &NullableStatementsRefreshRequest{value: val, isSet: true}
}

func (v NullableStatementsRefreshRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatementsRefreshRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


